{
	"id": "edd064109059642593c3494ad32fb104",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/weusd/manageusd.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"./IPicweUSD.sol\";\r\nimport \"./IMainContract.sol\";\r\n\r\ncontract weUSD_manager is AccessControl, Pausable{\r\n    IMainContract public mainContract;\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\r\n    bytes32 public constant CROSS_CHAIN_MINTER_ROLE = keccak256(\"CROSS_CHAIN_MINTER_ROLE\");\r\n    IPicweUSD public weUSD;\r\n    uint256 public requestCount;\r\n    uint256 public gasfee = 5/10*10**6;\r\n    address public feeRecipient;\r\n    mapping(address => bool) public registeredStablecoins;\r\n    mapping(uint256 => bool) public usedRequestIds;\r\n\r\n    event StablecoinRegistered(address indexed stablecoin);\r\n    event StablecoinDeleted(address indexed stablecoin);\r\n    event MintedWeUSD(address indexed user, address indexed stablecoin, uint256 stablecoinAmount, uint256 weUSDAmount);\r\n    event BurnedWeUSD(address indexed user, address indexed stablecoin, uint256 weUSDAmount, uint256 stablecoinAmount);\r\n    event CrossChainBurn(uint256 indexed requestId, address indexed user, uint256 sourceChainId, uint256 targetChainId, uint256 amount, address targetUser);\r\n    event CrossChainMint(uint256 indexed requestId, address indexed minter, uint256 sourceChainId, uint256 targetChainId, uint256 amount, address targetUser);\r\n\r\n    constructor(address _weUSD, address _stablecoin, address _crossChainMinter, address _main, address _feeRecipient) {\r\n        weUSD = IPicweUSD(_weUSD);\r\n        mainContract = IMainContract(_main);\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(ADMIN_ROLE, msg.sender);\r\n        _grantRole(CROSS_CHAIN_MINTER_ROLE, _crossChainMinter);\r\n        _grantRole(PAUSER_ROLE, _crossChainMinter);\r\n        registeredStablecoins[_stablecoin] = true;\r\n        feeRecipient = _feeRecipient;\r\n    }\r\n\r\n    function pause() public onlyRole(PAUSER_ROLE) {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyRole(PAUSER_ROLE) {\r\n        _unpause();\r\n    }\r\n\r\n    function setGasfee(uint256 _gasfee) external onlyRole(ADMIN_ROLE) {\r\n        gasfee = _gasfee;\r\n    }\r\n\r\n    function setFeeRecipient(address _feeRecipient) external onlyRole(ADMIN_ROLE) {\r\n        feeRecipient = _feeRecipient;\r\n    }\r\n\r\n    function registerStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {\r\n        registeredStablecoins[stablecoin] = true;\r\n        emit StablecoinRegistered(stablecoin);\r\n    }\r\n\r\n    function deleteStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {\r\n        registeredStablecoins[stablecoin] = false;\r\n        emit StablecoinDeleted(stablecoin);\r\n    }\r\n\r\n    function mintWeUSD(address stablecoin, uint256 stablecoinAmount) external {\r\n        require(registeredStablecoins[stablecoin], \"Stablecoin not registered\");\r\n        uint8 stablecoinDecimals = IERC20Metadata(stablecoin).decimals();\r\n        uint256 weUSDAmount = convertDecimals(stablecoinAmount, stablecoinDecimals, 6); // Convert to weUSD decimals (6)\r\n        require(IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount), \"Stablecoin transfer failed\");\r\n        weUSD.mint(msg.sender, weUSDAmount);\r\n        emit MintedWeUSD(msg.sender, stablecoin, stablecoinAmount, weUSDAmount);\r\n    }\r\n\r\n    function burnWeUSD(address stablecoin, uint256 weUSDAmount) external {\r\n        require(registeredStablecoins[stablecoin], \"Stablecoin not registered\");\r\n        uint8 stablecoinDecimals = IERC20Metadata(stablecoin).decimals();\r\n        uint256 stablecoinAmount = convertDecimalsCeil(weUSDAmount, 6, stablecoinDecimals); // Convert from weUSD decimals (6)\r\n        mainContract.transferStableCoin(stablecoin, msg.sender, stablecoinAmount);\r\n        weUSD.burnFrom(msg.sender, weUSDAmount);\r\n        emit BurnedWeUSD(msg.sender, stablecoin, weUSDAmount, stablecoinAmount);\r\n    }\r\n\r\n    function burnWeUSDCrossChain(uint256 targetChainId, uint256 amount, address targetUser) external {\r\n        require(targetChainId != block.chainid, \"Target chain must be different from source chain\");\r\n        require(amount > gasfee, \"Amount must be greater than gasfee\");\r\n        require(targetUser != address(0), \"Invalid target user address\");\r\n        uint256 sourceChainId = block.chainid;\r\n        uint256 requestId = (sourceChainId << 128) | (block.timestamp << 64) | ++requestCount;\r\n        require(!usedRequestIds[requestId], \"Request ID already used\");\r\n        usedRequestIds[requestId] = true;\r\n        uint256 burnAmount = amount - gasfee;\r\n        weUSD.transferFrom(msg.sender, feeRecipient, gasfee);\r\n        weUSD.burnFrom(msg.sender, burnAmount);\r\n        emit CrossChainBurn(requestId, msg.sender, sourceChainId, targetChainId, burnAmount, targetUser);\r\n    }\r\n\r\n    function mintWeUSDCrossChain(uint256 requestId, uint256 sourceChainId, uint256 amount, address targetUser) external onlyRole(CROSS_CHAIN_MINTER_ROLE) {\r\n        require(!usedRequestIds[requestId], \"Request ID already used\");\r\n        require(sourceChainId != block.chainid, \"Source chain must be different from target chain\");\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        require(targetUser != address(0), \"Invalid target user address\");\r\n        usedRequestIds[requestId] = true;\r\n        weUSD.mint(targetUser, amount);\r\n\r\n        emit CrossChainMint(requestId, msg.sender, sourceChainId, block.chainid, amount, targetUser);\r\n    }\r\n\r\n    function isRequestIdUsed(uint256 requestId) public view returns (bool) {\r\n        return usedRequestIds[requestId];\r\n    }\r\n\r\n    function getLatestRequestId() public view returns (uint256) {\r\n        return (block.chainid << 128) | (block.timestamp << 64) | requestCount;\r\n    }\r\n\r\n    function convertDecimals(\r\n        uint256 value,\r\n        uint8 sourceDecimals,\r\n        uint8 targetDecimals\r\n    ) internal pure returns (uint256 result) {\r\n        if (sourceDecimals == targetDecimals) {\r\n            result = value;\r\n        } else if (sourceDecimals < targetDecimals) {\r\n            result = value * (10**(targetDecimals - sourceDecimals));\r\n        } else {\r\n            result = value / (10**(sourceDecimals - targetDecimals));\r\n        }\r\n    }\r\n\r\n    function convertDecimalsCeil(\r\n        uint256 value,\r\n        uint8 sourceDecimals,\r\n        uint8 targetDecimals\r\n    ) internal pure returns (uint256 result) {\r\n        if (sourceDecimals == targetDecimals) {\r\n            result = value;\r\n        } else if (sourceDecimals < targetDecimals) {\r\n            result = value * (10**(targetDecimals - sourceDecimals));\r\n        } else {\r\n            uint256 temp = 10**(sourceDecimals - targetDecimals);\r\n            result = value / temp;\r\n            if (value % temp != 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/weusd/IMainContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\ninterface IMainContract {\r\n    function transferStableCoin(address token, address to, uint256 amount) external;\r\n}"
			},
			"contracts/weusd/IPicweUSD.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IPicweUSD is IERC20 {\r\n    function mint(address to, uint256 amount) external;\r\n    function burnFrom(address account, uint256 amount) external;\r\n}"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 521,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/weusd/IMainContract.sol": {
				"IMainContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferStableCoin(address,address,uint256)": "5e556234"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/weusd/IMainContract.sol\":\"IMainContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/weusd/IMainContract.sol\":{\"keccak256\":\"0x9b7ab6959d856e16823cde7e1e20a93fa5704ea016f41891cf462fb389224cf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b02e889d923d01ef0a0c3573b1e2b6383e44f12d64578b0b0c890caa4d2ded0\",\"dweb:/ipfs/QmbMZcqQZuV8rJgJMmmUp3xgTzQggRLx4FhQwLKyjKXLoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/weusd/IPicweUSD.sol": {
				"IPicweUSD": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnFrom(address,uint256)": "79cc6790",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/weusd/IPicweUSD.sol\":\"IPicweUSD\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/weusd/IPicweUSD.sol\":{\"keccak256\":\"0xca916d69b6d6e91272bdbf75d78ab96a83c86f619d847916c4b1cd1c91830870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89fecb9f4008c4ee310666ddbc8d4a2d60736c0596bef739212c3f4cc418a01a\",\"dweb:/ipfs/QmWZP6ZFXAyk6KoXryvP8Cb5j9NuSKyZYFchsTXUZPVNiz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/weusd/manageusd.sol": {
				"weUSD_manager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_weUSD",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stablecoin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_crossChainMinter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_main",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weUSDAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stablecoinAmount",
									"type": "uint256"
								}
							],
							"name": "BurnedWeUSD",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sourceChainId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "targetChainId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "targetUser",
									"type": "address"
								}
							],
							"name": "CrossChainBurn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sourceChainId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "targetChainId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "targetUser",
									"type": "address"
								}
							],
							"name": "CrossChainMint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stablecoinAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weUSDAmount",
									"type": "uint256"
								}
							],
							"name": "MintedWeUSD",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								}
							],
							"name": "StablecoinDeleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								}
							],
							"name": "StablecoinRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CROSS_CHAIN_MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "weUSDAmount",
									"type": "uint256"
								}
							],
							"name": "burnWeUSD",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "targetChainId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "targetUser",
									"type": "address"
								}
							],
							"name": "burnWeUSDCrossChain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								}
							],
							"name": "deleteStablecoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gasfee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestRequestId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "isRequestIdUsed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mainContract",
							"outputs": [
								{
									"internalType": "contract IMainContract",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stablecoinAmount",
									"type": "uint256"
								}
							],
							"name": "mintWeUSD",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sourceChainId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "targetUser",
									"type": "address"
								}
							],
							"name": "mintWeUSDCrossChain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								}
							],
							"name": "registerStablecoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "registeredStablecoins",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"name": "setFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_gasfee",
									"type": "uint256"
								}
							],
							"name": "setGasfee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "usedRequestIds",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weUSD",
							"outputs": [
								{
									"internalType": "contract IPicweUSD",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/weusd/manageusd.sol\":370:7067  contract weUSD_manager is AccessControl, Pausable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/weusd/manageusd.sol\":782:792  5/10*10**6 */\n  0x07a120\n    /* \"contracts/weusd/manageusd.sol\":758:792  uint256 public gasfee = 5/10*10**6 */\n  0x04\n  sstore\n    /* \"contracts/weusd/manageusd.sol\":1629:2140  constructor(address _weUSD, address _stablecoin, address _crossChainMinter, address _main, address _feeRecipient) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  dup1\n  sload\n    /* \"contracts/weusd/manageusd.sol\":1754:1759  weUSD */\n  0x02\n    /* \"contracts/weusd/manageusd.sol\":1754:1779  weUSD = IPicweUSD(_weUSD) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup1\n  dup11\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/weusd/manageusd.sol\":1790:1825  mainContract = IMainContract(_main) */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n    /* \"contracts/weusd/manageusd.sol\":1790:1825  mainContract = IMainContract(_main) */\n  mul\n  not(sub(shl(0xa8, 0x01), 0x01))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/weusd/manageusd.sol\":1836:1878  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"contracts/weusd/manageusd.sol\":1867:1877  msg.sender */\n  caller\n    /* \"contracts/weusd/manageusd.sol\":1836:1846  _grantRole */\n  tag_9\n    /* \"contracts/weusd/manageusd.sol\":1836:1878  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/weusd/manageusd.sol\":1889:1923  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_10\n    /* \"contracts/weusd/manageusd.sol\":503:526  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/weusd/manageusd.sol\":1912:1922  msg.sender */\n  caller\n    /* \"contracts/weusd/manageusd.sol\":1889:1899  _grantRole */\n  tag_9\n    /* \"contracts/weusd/manageusd.sol\":1889:1923  _grantRole(ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/weusd/manageusd.sol\":1934:1988  _grantRole(CROSS_CHAIN_MINTER_ROLE, _crossChainMinter) */\n  tag_11\n    /* \"contracts/weusd/manageusd.sol\":652:688  keccak256(\"CROSS_CHAIN_MINTER_ROLE\") */\n  0x41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704\n    /* \"contracts/weusd/manageusd.sol\":1970:1987  _crossChainMinter */\n  dup5\n    /* \"contracts/weusd/manageusd.sol\":1934:1944  _grantRole */\n  tag_9\n    /* \"contracts/weusd/manageusd.sol\":1934:1988  _grantRole(CROSS_CHAIN_MINTER_ROLE, _crossChainMinter) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/weusd/manageusd.sol\":1999:2041  _grantRole(PAUSER_ROLE, _crossChainMinter) */\n  tag_12\n    /* \"contracts/weusd/manageusd.sol\":571:595  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"contracts/weusd/manageusd.sol\":2023:2040  _crossChainMinter */\n  dup5\n    /* \"contracts/weusd/manageusd.sol\":1999:2009  _grantRole */\n  tag_9\n    /* \"contracts/weusd/manageusd.sol\":1999:2041  _grantRole(PAUSER_ROLE, _crossChainMinter) */\n  jump\t// in\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/weusd/manageusd.sol\":2052:2086  registeredStablecoins[_stablecoin] */\n  swap4\n  dup5\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/weusd/manageusd.sol\":2052:2073  registeredStablecoins */\n  0x06\n    /* \"contracts/weusd/manageusd.sol\":2052:2086  registeredStablecoins[_stablecoin] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/weusd/manageusd.sol\":2052:2093  registeredStablecoins[_stablecoin] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/weusd/manageusd.sol\":2089:2093  true */\n  0x01\n    /* \"contracts/weusd/manageusd.sol\":2052:2093  registeredStablecoins[_stablecoin] = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/weusd/manageusd.sol\":2104:2116  feeRecipient */\n  0x05\n    /* \"contracts/weusd/manageusd.sol\":2104:2132  feeRecipient = _feeRecipient */\n  dup1\n  sload\n  swap2\n  swap1\n  swap5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  swap3\n  sstore\n  pop\n    /* \"contracts/weusd/manageusd.sol\":370:7067  contract weUSD_manager is AccessControl, Pausable{... */\n  tag_24\n  swap2\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_17\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_18\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_17:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_23:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_26:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:746   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:408   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":404:405   */\n  0x00\n    /* \"#utility.yul\":401:402   */\n  dup1\n    /* \"#utility.yul\":394:406   */\n  revert\n    /* \"#utility.yul\":355:408   */\ntag_28:\n    /* \"#utility.yul\":427:467   */\n  tag_29\n    /* \"#utility.yul\":457:466   */\n  dup7\n    /* \"#utility.yul\":427:467   */\n  tag_23\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":417:467   */\n  swap5\n  pop\n    /* \"#utility.yul\":486:535   */\n  tag_30\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":520:529   */\n  dup8\n    /* \"#utility.yul\":516:534   */\n  add\n    /* \"#utility.yul\":486:535   */\n  tag_23\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":476:535   */\n  swap4\n  pop\n    /* \"#utility.yul\":554:603   */\n  tag_31\n    /* \"#utility.yul\":599:601   */\n  0x40\n    /* \"#utility.yul\":588:597   */\n  dup8\n    /* \"#utility.yul\":584:602   */\n  add\n    /* \"#utility.yul\":554:603   */\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":544:603   */\n  swap3\n  pop\n    /* \"#utility.yul\":622:671   */\n  tag_32\n    /* \"#utility.yul\":667:669   */\n  0x60\n    /* \"#utility.yul\":656:665   */\n  dup8\n    /* \"#utility.yul\":652:670   */\n  add\n    /* \"#utility.yul\":622:671   */\n  tag_23\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":612:671   */\n  swap2\n  pop\n    /* \"#utility.yul\":690:740   */\n  tag_33\n    /* \"#utility.yul\":735:738   */\n  0x80\n    /* \"#utility.yul\":724:733   */\n  dup8\n    /* \"#utility.yul\":720:739   */\n  add\n    /* \"#utility.yul\":690:740   */\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":680:740   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:746   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\ntag_24:\n    /* \"contracts/weusd/manageusd.sol\":370:7067  contract weUSD_manager is AccessControl, Pausable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/weusd/manageusd.sol\":370:7067  contract weUSD_manager is AccessControl, Pausable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75b238fc\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xb190d8a3\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd270e7ab\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd270e7ab\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe74b981b\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xb190d8a3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc5494ffb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc6400657\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd19fad37\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x9ea4f3a4\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x9ea4f3a4\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa2519ae4\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa62e1b3e\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x75b238fc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x3f4ba83a\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5badbe4c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f92893c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x37174202\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x1008776f\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x1008776f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1e7502d7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1f224564\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x677016\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0bd31a57\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/weusd/manageusd.sol\":758:792  uint256 public gasfee = 5/10*10**6 */\n    tag_3:\n      tag_40\n      sload(0x04)\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/weusd/manageusd.sol\":758:792  uint256 public gasfee = 5/10*10**6 */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":652:666   */\n      swap1\n      iszero\n        /* \"#utility.yul\":645:667   */\n      iszero\n        /* \"#utility.yul\":627:668   */\n      dup2\n      mstore\n        /* \"#utility.yul\":615:617   */\n      0x20\n        /* \"#utility.yul\":600:618   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      tag_42\n        /* \"#utility.yul\":487:674   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":4155:5036  function burnWeUSDCrossChain(uint256 targetChainId, uint256 amount, address targetUser) external {... */\n    tag_5:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/weusd/manageusd.sol\":2749:2930  function deleteStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n    tag_6:\n      tag_50\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":5712:5834  function isRequestIdUsed(uint256 requestId) public view returns (bool) {... */\n    tag_7:\n      tag_44\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"contracts/weusd/manageusd.sol\":5777:5781  bool */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":5801:5826  usedRequestIds[requestId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":5801:5815  usedRequestIds */\n      0x07\n        /* \"contracts/weusd/manageusd.sol\":5801:5826  usedRequestIds[requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":5712:5834  function isRequestIdUsed(uint256 requestId) public view returns (bool) {... */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":5044:5704  function mintWeUSDCrossChain(uint256 requestId, uint256 sourceChainId, uint256 amount, address targetUser) external onlyRole(CROSS_CHAIN_MINTER_ROLE) {... */\n    tag_8:\n      tag_50\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_40\n      tag_68\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_50\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":893:939  mapping(uint256 => bool) public usedRequestIds */\n    tag_11:\n      tag_44\n      tag_78\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_78:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_50\n      tag_82\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":602:688  bytes32 public constant CROSS_CHAIN_MINTER_ROLE = keccak256(\"CROSS_CHAIN_MINTER_ROLE\") */\n    tag_13:\n      tag_40\n        /* \"contracts/weusd/manageusd.sol\":652:688  keccak256(\"CROSS_CHAIN_MINTER_ROLE\") */\n      0x41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704\n        /* \"contracts/weusd/manageusd.sol\":602:688  bytes32 public constant CROSS_CHAIN_MINTER_ROLE = keccak256(\"CROSS_CHAIN_MINTER_ROLE\") */\n      dup2\n      jump\n        /* \"contracts/weusd/manageusd.sol\":2229:2306  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_14:\n      tag_50\n      tag_88\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":799:826  address public feeRecipient */\n    tag_15:\n      sload(0x05)\n      tag_89\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_89:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3132:3164   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3114:3165   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3102:3104   */\n      0x20\n        /* \"#utility.yul\":3087:3105   */\n      add\n        /* \"contracts/weusd/manageusd.sol\":799:826  address public feeRecipient */\n      tag_42\n        /* \"#utility.yul\":2968:3171   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":724:751  uint256 public requestCount */\n    tag_16:\n      tag_40\n      sload(0x03)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      jump(tag_44)\n        /* \"contracts/weusd/manageusd.sol\":466:526  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_18:\n      tag_40\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"contracts/weusd/manageusd.sol\":2148:2221  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_19:\n      tag_50\n      tag_103\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_20:\n      tag_44\n      tag_105\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":833:886  mapping(address => bool) public registeredStablecoins */\n    tag_21:\n      tag_44\n      tag_109\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_109:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_22:\n      tag_40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"contracts/weusd/manageusd.sol\":2938:3561  function mintWeUSD(address stablecoin, uint256 stablecoinAmount) external {... */\n    tag_23:\n      tag_50\n      tag_116\n      calldatasize\n      0x04\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":695:717  IPicweUSD public weUSD */\n    tag_24:\n      sload(0x02)\n      tag_89\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/weusd/manageusd.sol\":5842:5991  function getLatestRequestId() public view returns (uint256) {... */\n    tag_25:\n        /* \"contracts/weusd/manageusd.sol\":5971:5983  requestCount */\n      sload(0x03)\n        /* \"contracts/weusd/manageusd.sol\":5946:5961  block.timestamp */\n      timestamp\n        /* \"contracts/weusd/manageusd.sol\":5965:5967  64 */\n      0x40\n        /* \"contracts/weusd/manageusd.sol\":5946:5967  block.timestamp << 64 */\n      shl\n        /* \"contracts/weusd/manageusd.sol\":5921:5934  block.chainid */\n      chainid\n        /* \"contracts/weusd/manageusd.sol\":5938:5941  128 */\n      0x80\n        /* \"contracts/weusd/manageusd.sol\":5921:5941  block.chainid << 128 */\n      shl\n        /* \"contracts/weusd/manageusd.sol\":5920:5968  (block.chainid << 128) | (block.timestamp << 64) */\n      or\n        /* \"contracts/weusd/manageusd.sol\":5920:5983  (block.chainid << 128) | (block.timestamp << 64) | requestCount */\n      or\n        /* \"contracts/weusd/manageusd.sol\":5842:5991  function getLatestRequestId() public view returns (uint256) {... */\n      jump(tag_40)\n        /* \"contracts/weusd/manageusd.sol\":2314:2415  function setGasfee(uint256 _gasfee) external onlyRole(ADMIN_ROLE) {... */\n    tag_26:\n      tag_50\n      tag_127\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":2556:2741  function registerStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n    tag_27:\n      tag_50\n      tag_130\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":3569:4147  function burnWeUSD(address stablecoin, uint256 weUSDAmount) external {... */\n    tag_28:\n      tag_50\n      tag_133\n      calldatasize\n      0x04\n      tag_117\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":426:459  IMainContract public mainContract */\n    tag_29:\n      sload(0x01)\n      tag_89\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_30:\n      tag_50\n      tag_140\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":533:595  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_31:\n      tag_40\n        /* \"contracts/weusd/manageusd.sol\":571:595  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/weusd/manageusd.sol\":533:595  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\n        /* \"contracts/weusd/manageusd.sol\":2423:2548  function setFeeRecipient(address _feeRecipient) external onlyRole(ADMIN_ROLE) {... */\n    tag_32:\n      tag_50\n      tag_146\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_150\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/weusd/manageusd.sol\":4155:5036  function burnWeUSDCrossChain(uint256 targetChainId, uint256 amount, address targetUser) external {... */\n    tag_53:\n        /* \"contracts/weusd/manageusd.sol\":4288:4301  block.chainid */\n      chainid\n        /* \"contracts/weusd/manageusd.sol\":4271:4284  targetChainId */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":4271:4301  targetChainId != block.chainid */\n      sub\n        /* \"contracts/weusd/manageusd.sol\":4263:4354  require(targetChainId != block.chainid, \"Target chain must be different from source chain\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4137:4139   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":4263:4354  require(targetChainId != block.chainid, \"Target chain must be different from source chain\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4119:4140   */\n      mstore\n        /* \"#utility.yul\":4176:4178   */\n      0x30\n        /* \"#utility.yul\":4156:4174   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4149:4179   */\n      mstore\n        /* \"#utility.yul\":4215:4249   */\n      0x54617267657420636861696e206d75737420626520646966666572656e742066\n        /* \"#utility.yul\":4195:4213   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4188:4250   */\n      mstore\n      shl(0x81, 0x3937b69039b7bab931b29031b430b4b7)\n        /* \"#utility.yul\":4266:4284   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4259:4305   */\n      mstore\n        /* \"#utility.yul\":4322:4341   */\n      0x84\n      add\n        /* \"contracts/weusd/manageusd.sol\":4263:4354  require(targetChainId != block.chainid, \"Target chain must be different from source chain\") */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/weusd/manageusd.sol\":4382:4388  gasfee */\n      sload(0x04)\n        /* \"contracts/weusd/manageusd.sol\":4373:4379  amount */\n      dup3\n        /* \"contracts/weusd/manageusd.sol\":4373:4388  amount > gasfee */\n      gt\n        /* \"contracts/weusd/manageusd.sol\":4365:4427  require(amount > gasfee, \"Amount must be greater than gasfee\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4554:4556   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":4365:4427  require(amount > gasfee, \"Amount must be greater than gasfee\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4536:4557   */\n      mstore\n        /* \"#utility.yul\":4593:4595   */\n      0x22\n        /* \"#utility.yul\":4573:4591   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4566:4596   */\n      mstore\n        /* \"#utility.yul\":4632:4666   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2067617366\n        /* \"#utility.yul\":4612:4630   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4605:4667   */\n      mstore\n      shl(0xf0, 0x6565)\n        /* \"#utility.yul\":4683:4701   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4676:4708   */\n      mstore\n        /* \"#utility.yul\":4725:4744   */\n      0x84\n      add\n        /* \"contracts/weusd/manageusd.sol\":4365:4427  require(amount > gasfee, \"Amount must be greater than gasfee\") */\n      tag_154\n        /* \"#utility.yul\":4352:4750   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":4365:4427  require(amount > gasfee, \"Amount must be greater than gasfee\") */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":4446:4470  targetUser != address(0) */\n      dup2\n      and\n        /* \"contracts/weusd/manageusd.sol\":4438:4502  require(targetUser != address(0), \"Invalid target user address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":4438:4502  require(targetUser != address(0), \"Invalid target user address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4939:4960   */\n      mstore\n        /* \"#utility.yul\":4996:4998   */\n      0x1b\n        /* \"#utility.yul\":4976:4994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4969:4999   */\n      mstore\n        /* \"#utility.yul\":5035:5064   */\n      0x496e76616c696420746172676574207573657220616464726573730000000000\n        /* \"#utility.yul\":5015:5033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5008:5065   */\n      mstore\n        /* \"#utility.yul\":5082:5100   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":4438:4502  require(targetUser != address(0), \"Invalid target user address\") */\n      tag_154\n        /* \"#utility.yul\":4755:5106   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":4438:4502  require(targetUser != address(0), \"Invalid target user address\") */\n    tag_159:\n        /* \"contracts/weusd/manageusd.sol\":4513:4534  uint256 sourceChainId */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":4537:4550  block.chainid */\n      chainid\n        /* \"contracts/weusd/manageusd.sol\":4513:4550  uint256 sourceChainId = block.chainid */\n      swap1\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4561:4578  uint256 requestId */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":4634:4646  requestCount */\n      0x03\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":4632:4646  ++requestCount */\n      dup2\n      sload\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      swap2\n      dup3\n      swap1\n      sstore\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4607:4622  block.timestamp */\n      timestamp\n        /* \"contracts/weusd/manageusd.sol\":4626:4628  64 */\n      0x40\n        /* \"contracts/weusd/manageusd.sol\":4607:4628  block.timestamp << 64 */\n      swap1\n      dup2\n      shl\n        /* \"contracts/weusd/manageusd.sol\":4599:4602  128 */\n      0x80\n        /* \"contracts/weusd/manageusd.sol\":4582:4602  sourceChainId << 128 */\n      dup6\n      swap1\n      shl\n        /* \"contracts/weusd/manageusd.sol\":4581:4629  (sourceChainId << 128) | (block.timestamp << 64) */\n      or\n        /* \"contracts/weusd/manageusd.sol\":4581:4646  (sourceChainId << 128) | (block.timestamp << 64) | ++requestCount */\n      swap1\n      swap2\n      or\n        /* \"contracts/weusd/manageusd.sol\":4666:4691  usedRequestIds[requestId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":4666:4680  usedRequestIds */\n      0x07\n        /* \"contracts/weusd/manageusd.sol\":4666:4691  usedRequestIds[requestId] */\n      0x20\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/weusd/manageusd.sol\":4581:4646  (sourceChainId << 128) | (block.timestamp << 64) | ++requestCount */\n      swap1\n      swap2\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4666:4691  usedRequestIds[requestId] */\n      0xff\n      and\n        /* \"contracts/weusd/manageusd.sol\":4665:4691  !usedRequestIds[requestId] */\n      iszero\n        /* \"contracts/weusd/manageusd.sol\":4657:4719  require(!usedRequestIds[requestId], \"Request ID already used\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5585:5587   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":4657:4719  require(!usedRequestIds[requestId], \"Request ID already used\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5567:5588   */\n      mstore\n        /* \"#utility.yul\":5624:5626   */\n      0x17\n        /* \"#utility.yul\":5604:5622   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5597:5627   */\n      mstore\n      shl(0x4a, 0x14995c5d595cdd08125108185b1c9958591e481d5cd959)\n        /* \"#utility.yul\":5643:5661   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5636:5689   */\n      mstore\n        /* \"#utility.yul\":5706:5724   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":4657:4719  require(!usedRequestIds[requestId], \"Request ID already used\") */\n      tag_154\n        /* \"#utility.yul\":5383:5730   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":4657:4719  require(!usedRequestIds[requestId], \"Request ID already used\") */\n    tag_164:\n        /* \"contracts/weusd/manageusd.sol\":4730:4755  usedRequestIds[requestId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":4730:4744  usedRequestIds */\n      0x07\n        /* \"contracts/weusd/manageusd.sol\":4730:4755  usedRequestIds[requestId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/weusd/manageusd.sol\":4730:4762  usedRequestIds[requestId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/weusd/manageusd.sol\":4758:4762  true */\n      0x01\n        /* \"contracts/weusd/manageusd.sol\":4730:4762  usedRequestIds[requestId] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/weusd/manageusd.sol\":4803:4809  gasfee */\n      sload(0x04)\n        /* \"contracts/weusd/manageusd.sol\":4794:4809  amount - gasfee */\n      tag_167\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":4794:4800  amount */\n      dup7\n        /* \"contracts/weusd/manageusd.sol\":4794:4809  amount - gasfee */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"contracts/weusd/manageusd.sol\":4820:4825  weUSD */\n      sload(0x02)\n        /* \"contracts/weusd/manageusd.sol\":4851:4863  feeRecipient */\n      sload(0x05)\n        /* \"contracts/weusd/manageusd.sol\":4865:4871  gasfee */\n      0x04\n      dup1\n      sload\n        /* \"contracts/weusd/manageusd.sol\":4820:4872  weUSD.transferFrom(msg.sender, feeRecipient, gasfee) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":4839:4849  msg.sender */\n      caller\n        /* \"contracts/weusd/manageusd.sol\":4820:4872  weUSD.transferFrom(msg.sender, feeRecipient, gasfee) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":6070:6121   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":4851:4863  feeRecipient */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":6137:6155   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6130:6190   */\n      mstore\n        /* \"#utility.yul\":6206:6224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6199:6233   */\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":4773:4809  uint256 burnAmount = amount - gasfee */\n      swap3\n      swap4\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4820:4825  weUSD */\n      and\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":4820:4838  weUSD.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6043:6061   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":4820:4872  weUSD.transferFrom(msg.sender, feeRecipient, gasfee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4883:4888  weUSD */\n      sload(0x02)\n        /* \"contracts/weusd/manageusd.sol\":4883:4921  weUSD.burnFrom(msg.sender, burnAmount) */\n      mload(0x40)\n      shl(0xe4, 0x079cc679)\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":4898:4908  msg.sender */\n      caller\n        /* \"contracts/weusd/manageusd.sol\":4883:4921  weUSD.burnFrom(msg.sender, burnAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6700:6751   */\n      mstore\n        /* \"#utility.yul\":6767:6785   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6760:6794   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":4883:4888  weUSD */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":4883:4897  weUSD.burnFrom */\n      0x79cc6790\n      swap1\n        /* \"#utility.yul\":6673:6691   */\n      0x44\n      add\n        /* \"contracts/weusd/manageusd.sol\":4883:4921  weUSD.burnFrom(msg.sender, burnAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4937:5028  CrossChainBurn(requestId, msg.sender, sourceChainId, targetChainId, burnAmount, targetUser) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7036:7061   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":7092:7094   */\n      0x20\n        /* \"#utility.yul\":7077:7095   */\n      dup2\n      add\n        /* \"#utility.yul\":7070:7104   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":7120:7138   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":7113:7147   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7183:7215   */\n      dup8\n      and\n        /* \"#utility.yul\":7178:7180   */\n      0x60\n        /* \"#utility.yul\":7163:7181   */\n      dup3\n      add\n        /* \"#utility.yul\":7156:7216   */\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":4963:4973  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4952:4961  requestId */\n      dup5\n      swap2\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4937:5028  CrossChainBurn(requestId, msg.sender, sourceChainId, targetChainId, burnAmount, targetUser) */\n      0x26c32cc5ff12981b55681844f2fb47d52c5e521c58d5288b1325f3304a7e8852\n      swap1\n        /* \"#utility.yul\":7023:7026   */\n      0x80\n        /* \"#utility.yul\":7008:7027   */\n      add\n        /* \"contracts/weusd/manageusd.sol\":4937:5028  CrossChainBurn(requestId, msg.sender, sourceChainId, targetChainId, burnAmount, targetUser) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/weusd/manageusd.sol\":4252:5036  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4155:5036  function burnWeUSDCrossChain(uint256 targetChainId, uint256 amount, address targetUser) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/weusd/manageusd.sol\":2749:2930  function deleteStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n    tag_57:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":2836:2869  registeredStablecoins[stablecoin] */\n      dup3\n      and\n        /* \"contracts/weusd/manageusd.sol\":2872:2877  false */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":2836:2869  registeredStablecoins[stablecoin] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":2836:2857  registeredStablecoins */\n      0x06\n        /* \"contracts/weusd/manageusd.sol\":2836:2869  registeredStablecoins[stablecoin] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/weusd/manageusd.sol\":2836:2877  registeredStablecoins[stablecoin] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/weusd/manageusd.sol\":2893:2922  StablecoinDeleted(stablecoin) */\n      mload\n      0x0fa63555fe68cad70e08233633567493a3c74afdc8c7fb9f0c03a8e74f1a137a\n      swap2\n        /* \"contracts/weusd/manageusd.sol\":2872:2877  false */\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":2893:2922  StablecoinDeleted(stablecoin) */\n      log2\n        /* \"contracts/weusd/manageusd.sol\":2749:2930  function deleteStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/weusd/manageusd.sol\":5044:5704  function mintWeUSDCrossChain(uint256 requestId, uint256 sourceChainId, uint256 amount, address targetUser) external onlyRole(CROSS_CHAIN_MINTER_ROLE) {... */\n    tag_66:\n        /* \"contracts/weusd/manageusd.sol\":652:688  keccak256(\"CROSS_CHAIN_MINTER_ROLE\") */\n      0x41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/weusd/manageusd.sol\":5214:5239  usedRequestIds[requestId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":5214:5228  usedRequestIds */\n      0x07\n        /* \"contracts/weusd/manageusd.sol\":5214:5239  usedRequestIds[requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/weusd/manageusd.sol\":5213:5239  !usedRequestIds[requestId] */\n      iszero\n        /* \"contracts/weusd/manageusd.sol\":5205:5267  require(!usedRequestIds[requestId], \"Request ID already used\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5585:5587   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":5205:5267  require(!usedRequestIds[requestId], \"Request ID already used\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5567:5588   */\n      mstore\n        /* \"#utility.yul\":5624:5626   */\n      0x17\n        /* \"#utility.yul\":5604:5622   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5597:5627   */\n      mstore\n      shl(0x4a, 0x14995c5d595cdd08125108185b1c9958591e481d5cd959)\n        /* \"#utility.yul\":5643:5661   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5636:5689   */\n      mstore\n        /* \"#utility.yul\":5706:5724   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":5205:5267  require(!usedRequestIds[requestId], \"Request ID already used\") */\n      tag_154\n        /* \"#utility.yul\":5383:5730   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":5205:5267  require(!usedRequestIds[requestId], \"Request ID already used\") */\n    tag_190:\n        /* \"contracts/weusd/manageusd.sol\":5303:5316  block.chainid */\n      chainid\n        /* \"contracts/weusd/manageusd.sol\":5286:5299  sourceChainId */\n      dup5\n        /* \"contracts/weusd/manageusd.sol\":5286:5316  sourceChainId != block.chainid */\n      sub\n        /* \"contracts/weusd/manageusd.sol\":5278:5369  require(sourceChainId != block.chainid, \"Source chain must be different from target chain\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7429:7431   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":5278:5369  require(sourceChainId != block.chainid, \"Source chain must be different from target chain\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7411:7432   */\n      mstore\n        /* \"#utility.yul\":7468:7470   */\n      0x30\n        /* \"#utility.yul\":7448:7466   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7441:7471   */\n      mstore\n        /* \"#utility.yul\":7507:7541   */\n      0x536f7572636520636861696e206d75737420626520646966666572656e742066\n        /* \"#utility.yul\":7487:7505   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7480:7542   */\n      mstore\n      shl(0x81, 0x3937b6903a30b933b2ba1031b430b4b7)\n        /* \"#utility.yul\":7558:7576   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7551:7597   */\n      mstore\n        /* \"#utility.yul\":7614:7633   */\n      0x84\n      add\n        /* \"contracts/weusd/manageusd.sol\":5278:5369  require(sourceChainId != block.chainid, \"Source chain must be different from target chain\") */\n      tag_154\n        /* \"#utility.yul\":7227:7639   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":5278:5369  require(sourceChainId != block.chainid, \"Source chain must be different from target chain\") */\n    tag_192:\n        /* \"contracts/weusd/manageusd.sol\":5397:5398  0 */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":5388:5394  amount */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":5388:5398  amount > 0 */\n      gt\n        /* \"contracts/weusd/manageusd.sol\":5380:5432  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7846:7848   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":5380:5432  require(amount > 0, \"Amount must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7828:7849   */\n      mstore\n        /* \"#utility.yul\":7885:7887   */\n      0x1d\n        /* \"#utility.yul\":7865:7883   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7858:7888   */\n      mstore\n        /* \"#utility.yul\":7924:7955   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":7904:7922   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7897:7956   */\n      mstore\n        /* \"#utility.yul\":7973:7991   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":5380:5432  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_154\n        /* \"#utility.yul\":7644:7997   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":5380:5432  require(amount > 0, \"Amount must be greater than 0\") */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":5451:5475  targetUser != address(0) */\n      dup3\n      and\n        /* \"contracts/weusd/manageusd.sol\":5443:5507  require(targetUser != address(0), \"Invalid target user address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":5443:5507  require(targetUser != address(0), \"Invalid target user address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4939:4960   */\n      mstore\n        /* \"#utility.yul\":4996:4998   */\n      0x1b\n        /* \"#utility.yul\":4976:4994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4969:4999   */\n      mstore\n        /* \"#utility.yul\":5035:5064   */\n      0x496e76616c696420746172676574207573657220616464726573730000000000\n        /* \"#utility.yul\":5015:5033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5008:5065   */\n      mstore\n        /* \"#utility.yul\":5082:5100   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":5443:5507  require(targetUser != address(0), \"Invalid target user address\") */\n      tag_154\n        /* \"#utility.yul\":4755:5106   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":5443:5507  require(targetUser != address(0), \"Invalid target user address\") */\n    tag_198:\n        /* \"contracts/weusd/manageusd.sol\":5518:5543  usedRequestIds[requestId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":5518:5532  usedRequestIds */\n      0x07\n        /* \"contracts/weusd/manageusd.sol\":5518:5543  usedRequestIds[requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/weusd/manageusd.sol\":5518:5550  usedRequestIds[requestId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/weusd/manageusd.sol\":5546:5550  true */\n      0x01\n        /* \"contracts/weusd/manageusd.sol\":5518:5550  usedRequestIds[requestId] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/weusd/manageusd.sol\":5561:5566  weUSD */\n      sload(0x02)\n        /* \"contracts/weusd/manageusd.sol\":5561:5591  weUSD.mint(targetUser, amount) */\n      swap1\n      mload\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6718:6750   */\n      dup5\n      dup2\n      and\n        /* \"contracts/weusd/manageusd.sol\":5561:5591  weUSD.mint(targetUser, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6700:6751   */\n      mstore\n        /* \"#utility.yul\":6767:6785   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6760:6794   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":5561:5566  weUSD */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":5561:5571  weUSD.mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":6673:6691   */\n      0x44\n      add\n        /* \"contracts/weusd/manageusd.sol\":5561:5591  weUSD.mint(targetUser, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n        /* \"contracts/weusd/manageusd.sol\":5609:5696  CrossChainMint(requestId, msg.sender, sourceChainId, block.chainid, amount, targetUser) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7036:7061   */\n      dup8\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":5662:5675  block.chainid */\n      chainid\n        /* \"#utility.yul\":7092:7094   */\n      0x20\n        /* \"#utility.yul\":7077:7095   */\n      dup3\n      add\n        /* \"#utility.yul\":7070:7104   */\n      mstore\n        /* \"#utility.yul\":7120:7138   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":7113:7147   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7183:7215   */\n      dup6\n      and\n        /* \"#utility.yul\":7178:7180   */\n      0x60\n        /* \"#utility.yul\":7163:7181   */\n      dup3\n      add\n        /* \"#utility.yul\":7156:7216   */\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":5635:5645  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"contracts/weusd/manageusd.sol\":5624:5633  requestId */\n      dup8\n      swap2\n      pop\n        /* \"contracts/weusd/manageusd.sol\":5609:5696  CrossChainMint(requestId, msg.sender, sourceChainId, block.chainid, amount, targetUser) */\n      0x7690d9cedf96f067bda7114c24bba31be184ae045d199979a0a373862e70d46b\n      swap1\n        /* \"#utility.yul\":7023:7026   */\n      0x80\n        /* \"#utility.yul\":7008:7027   */\n      add\n        /* \"contracts/weusd/manageusd.sol\":5609:5696  CrossChainMint(requestId, msg.sender, sourceChainId, block.chainid, amount, targetUser) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/weusd/manageusd.sol\":5044:5704  function mintWeUSDCrossChain(uint256 requestId, uint256 sourceChainId, uint256 amount, address targetUser) external onlyRole(CROSS_CHAIN_MINTER_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_208\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_210\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_211\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_210:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_216\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_217\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_216:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/weusd/manageusd.sol\":2229:2306  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_88:\n        /* \"contracts/weusd/manageusd.sol\":571:595  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/weusd/manageusd.sol\":2288:2298  _unpause() */\n      tag_221\n        /* \"contracts/weusd/manageusd.sol\":2288:2296  _unpause */\n      tag_222\n        /* \"contracts/weusd/manageusd.sol\":2288:2298  _unpause() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/weusd/manageusd.sol\":2229:2306  function unpause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"contracts/weusd/manageusd.sol\":2148:2221  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_103:\n        /* \"contracts/weusd/manageusd.sol\":571:595  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_225\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/weusd/manageusd.sol\":2205:2213  _pause() */\n      tag_221\n        /* \"contracts/weusd/manageusd.sol\":2205:2211  _pause */\n      tag_228\n        /* \"contracts/weusd/manageusd.sol\":2205:2213  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/weusd/manageusd.sol\":2938:3561  function mintWeUSD(address stablecoin, uint256 stablecoinAmount) external {... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":3031:3064  registeredStablecoins[stablecoin] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":3031:3052  registeredStablecoins */\n      0x06\n        /* \"contracts/weusd/manageusd.sol\":3031:3064  registeredStablecoins[stablecoin] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/weusd/manageusd.sol\":3023:3094  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8204:8206   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":3023:3094  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8186:8207   */\n      mstore\n        /* \"#utility.yul\":8243:8245   */\n      0x19\n        /* \"#utility.yul\":8223:8241   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8216:8246   */\n      mstore\n      shl(0x3a, 0x14dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959)\n        /* \"#utility.yul\":8262:8280   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8255:8310   */\n      mstore\n        /* \"#utility.yul\":8327:8345   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":3023:3094  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      tag_154\n        /* \"#utility.yul\":8002:8351   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":3023:3094  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n    tag_231:\n        /* \"contracts/weusd/manageusd.sol\":3105:3129  uint8 stablecoinDecimals */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":3147:3157  stablecoin */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":3132:3167  IERC20Metadata(stablecoin).decimals */\n      and\n      0x313ce567\n        /* \"contracts/weusd/manageusd.sol\":3132:3169  IERC20Metadata(stablecoin).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"contracts/weusd/manageusd.sol\":3105:3169  uint8 stablecoinDecimals = IERC20Metadata(stablecoin).decimals() */\n      swap1\n      pop\n        /* \"contracts/weusd/manageusd.sol\":3180:3199  uint256 weUSDAmount */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":3202:3258  convertDecimals(stablecoinAmount, stablecoinDecimals, 6) */\n      tag_238\n        /* \"contracts/weusd/manageusd.sol\":3218:3234  stablecoinAmount */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":3236:3254  stablecoinDecimals */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":3256:3257  6 */\n      0x06\n        /* \"contracts/weusd/manageusd.sol\":3202:3217  convertDecimals */\n      tag_239\n        /* \"contracts/weusd/manageusd.sol\":3202:3258  convertDecimals(stablecoinAmount, stablecoinDecimals, 6) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/weusd/manageusd.sol\":3362:3374  mainContract */\n      sload(0x01)\n        /* \"contracts/weusd/manageusd.sol\":3310:3394  IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":3342:3352  msg.sender */\n      caller\n        /* \"contracts/weusd/manageusd.sol\":3310:3394  IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6070:6121   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":3362:3374  mainContract */\n      0x0100\n      swap1\n      swap3\n      div\n      dup3\n      and\n        /* \"#utility.yul\":6137:6155   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6130:6190   */\n      mstore\n        /* \"#utility.yul\":6206:6224   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6199:6233   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":3180:3258  uint256 weUSDAmount = convertDecimals(stablecoinAmount, stablecoinDecimals, 6) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/weusd/manageusd.sol\":3310:3341  IERC20(stablecoin).transferFrom */\n      dup6\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6043:6061   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":3310:3394  IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_242\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_242:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_243\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_243:\n        /* \"contracts/weusd/manageusd.sol\":3302:3425  require(IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount), \"Stablecoin transfer failed\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8836:8838   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":3302:3425  require(IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount), \"Stablecoin transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8818:8839   */\n      mstore\n        /* \"#utility.yul\":8875:8877   */\n      0x1a\n        /* \"#utility.yul\":8855:8873   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8848:8878   */\n      mstore\n        /* \"#utility.yul\":8914:8942   */\n      0x537461626c65636f696e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":8894:8912   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8887:8943   */\n      mstore\n        /* \"#utility.yul\":8960:8978   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":3302:3425  require(IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount), \"Stablecoin transfer failed\") */\n      tag_154\n        /* \"#utility.yul\":8634:8984   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":3302:3425  require(IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount), \"Stablecoin transfer failed\") */\n    tag_244:\n        /* \"contracts/weusd/manageusd.sol\":3436:3441  weUSD */\n      sload(0x02)\n        /* \"contracts/weusd/manageusd.sol\":3436:3471  weUSD.mint(msg.sender, weUSDAmount) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":3447:3457  msg.sender */\n      caller\n        /* \"contracts/weusd/manageusd.sol\":3436:3471  weUSD.mint(msg.sender, weUSDAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6700:6751   */\n      mstore\n        /* \"#utility.yul\":6767:6785   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6760:6794   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":3436:3441  weUSD */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":3436:3446  weUSD.mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":6673:6691   */\n      0x44\n      add\n        /* \"contracts/weusd/manageusd.sol\":3436:3471  weUSD.mint(msg.sender, weUSDAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_248:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n      pop\n        /* \"contracts/weusd/manageusd.sol\":3487:3553  MintedWeUSD(msg.sender, stablecoin, stablecoinAmount, weUSDAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9163:9188   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":9219:9221   */\n      0x20\n        /* \"#utility.yul\":9204:9222   */\n      dup2\n      add\n        /* \"#utility.yul\":9197:9231   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":3487:3553  MintedWeUSD(msg.sender, stablecoin, stablecoinAmount, weUSDAmount) */\n      dup9\n      and\n      swap4\n      pop\n        /* \"contracts/weusd/manageusd.sol\":3499:3509  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"contracts/weusd/manageusd.sol\":3487:3553  MintedWeUSD(msg.sender, stablecoin, stablecoinAmount, weUSDAmount) */\n      0x66c62f0863782653c5c44e10bf21d9def60984ce20d9f75549575a8910896587\n      swap2\n        /* \"#utility.yul\":9136:9154   */\n      add\n        /* \"contracts/weusd/manageusd.sol\":3487:3553  MintedWeUSD(msg.sender, stablecoin, stablecoinAmount, weUSDAmount) */\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/weusd/manageusd.sol\":3012:3561  {... */\n      pop\n      pop\n        /* \"contracts/weusd/manageusd.sol\":2938:3561  function mintWeUSD(address stablecoin, uint256 stablecoinAmount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/weusd/manageusd.sol\":2314:2415  function setGasfee(uint256 _gasfee) external onlyRole(ADMIN_ROLE) {... */\n    tag_128:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_255\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_255:\n      pop\n        /* \"contracts/weusd/manageusd.sol\":2391:2397  gasfee */\n      0x04\n        /* \"contracts/weusd/manageusd.sol\":2391:2407  gasfee = _gasfee */\n      sstore\n        /* \"contracts/weusd/manageusd.sol\":2314:2415  function setGasfee(uint256 _gasfee) external onlyRole(ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"contracts/weusd/manageusd.sol\":2556:2741  function registerStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n    tag_131:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_258\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":2645:2678  registeredStablecoins[stablecoin] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":2645:2666  registeredStablecoins */\n      0x06\n        /* \"contracts/weusd/manageusd.sol\":2645:2678  registeredStablecoins[stablecoin] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/weusd/manageusd.sol\":2645:2685  registeredStablecoins[stablecoin] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/weusd/manageusd.sol\":2681:2685  true */\n      0x01\n        /* \"contracts/weusd/manageusd.sol\":2645:2685  registeredStablecoins[stablecoin] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/weusd/manageusd.sol\":2701:2733  StablecoinRegistered(stablecoin) */\n      mload\n      0xd8b2dc62b787ec8afbc8a664cf2fd7c1e7851721acc9e0069132cece3c529c2e\n      swap2\n        /* \"contracts/weusd/manageusd.sol\":2645:2678  registeredStablecoins[stablecoin] */\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":2701:2733  StablecoinRegistered(stablecoin) */\n      log2\n        /* \"contracts/weusd/manageusd.sol\":2556:2741  function registerStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/weusd/manageusd.sol\":3569:4147  function burnWeUSD(address stablecoin, uint256 weUSDAmount) external {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":3657:3690  registeredStablecoins[stablecoin] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":3657:3678  registeredStablecoins */\n      0x06\n        /* \"contracts/weusd/manageusd.sol\":3657:3690  registeredStablecoins[stablecoin] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/weusd/manageusd.sol\":3649:3720  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8204:8206   */\n      0x20\n        /* \"contracts/weusd/manageusd.sol\":3649:3720  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8186:8207   */\n      mstore\n        /* \"#utility.yul\":8243:8245   */\n      0x19\n        /* \"#utility.yul\":8223:8241   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8216:8246   */\n      mstore\n      shl(0x3a, 0x14dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959)\n        /* \"#utility.yul\":8262:8280   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8255:8310   */\n      mstore\n        /* \"#utility.yul\":8327:8345   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":3649:3720  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      tag_154\n        /* \"#utility.yul\":8002:8351   */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":3649:3720  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n    tag_261:\n        /* \"contracts/weusd/manageusd.sol\":3731:3755  uint8 stablecoinDecimals */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":3773:3783  stablecoin */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":3758:3793  IERC20Metadata(stablecoin).decimals */\n      and\n      0x313ce567\n        /* \"contracts/weusd/manageusd.sol\":3758:3795  IERC20Metadata(stablecoin).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_264\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_264:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_265\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_265:\n        /* \"contracts/weusd/manageusd.sol\":3731:3795  uint8 stablecoinDecimals = IERC20Metadata(stablecoin).decimals() */\n      swap1\n      pop\n        /* \"contracts/weusd/manageusd.sol\":3806:3830  uint256 stablecoinAmount */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":3833:3888  convertDecimalsCeil(weUSDAmount, 6, stablecoinDecimals) */\n      tag_266\n        /* \"contracts/weusd/manageusd.sol\":3853:3864  weUSDAmount */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":3866:3867  6 */\n      0x06\n        /* \"contracts/weusd/manageusd.sol\":3869:3887  stablecoinDecimals */\n      dup5\n        /* \"contracts/weusd/manageusd.sol\":3833:3852  convertDecimalsCeil */\n      tag_267\n        /* \"contracts/weusd/manageusd.sol\":3833:3888  convertDecimalsCeil(weUSDAmount, 6, stablecoinDecimals) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/weusd/manageusd.sol\":3934:3946  mainContract */\n      sload(0x01)\n        /* \"contracts/weusd/manageusd.sol\":3934:4007  mainContract.transferStableCoin(stablecoin, msg.sender, stablecoinAmount) */\n      mload(0x40)\n      shl(0xe2, 0x1795588d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6088:6120   */\n      dup8\n      dup2\n      and\n        /* \"contracts/weusd/manageusd.sol\":3934:4007  mainContract.transferStableCoin(stablecoin, msg.sender, stablecoinAmount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6070:6121   */\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":3978:3988  msg.sender */\n      caller\n        /* \"#utility.yul\":6137:6155   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6130:6190   */\n      mstore\n        /* \"#utility.yul\":6206:6224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6199:6233   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":3806:3888  uint256 stablecoinAmount = convertDecimalsCeil(weUSDAmount, 6, stablecoinDecimals) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/weusd/manageusd.sol\":3934:3946  mainContract */\n      0x0100\n      swap1\n      swap2\n      div\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":3934:3965  mainContract.transferStableCoin */\n      0x5e556234\n      swap1\n        /* \"#utility.yul\":6043:6061   */\n      0x64\n      add\n        /* \"contracts/weusd/manageusd.sol\":3934:4007  mainContract.transferStableCoin(stablecoin, msg.sender, stablecoinAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_271\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_271:\n      pop\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4018:4023  weUSD */\n      sload(0x02)\n        /* \"contracts/weusd/manageusd.sol\":4018:4057  weUSD.burnFrom(msg.sender, weUSDAmount) */\n      mload(0x40)\n      shl(0xe4, 0x079cc679)\n      dup2\n      mstore\n        /* \"contracts/weusd/manageusd.sol\":4033:4043  msg.sender */\n      caller\n        /* \"contracts/weusd/manageusd.sol\":4018:4057  weUSD.burnFrom(msg.sender, weUSDAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6700:6751   */\n      mstore\n        /* \"#utility.yul\":6767:6785   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6760:6794   */\n      dup8\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":4018:4023  weUSD */\n      swap1\n      swap2\n      and\n      swap3\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4018:4032  weUSD.burnFrom */\n      0x79cc6790\n      swap2\n      pop\n        /* \"#utility.yul\":6673:6691   */\n      0x44\n      add\n        /* \"contracts/weusd/manageusd.sol\":4018:4057  weUSD.burnFrom(msg.sender, weUSDAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_273:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_275:\n      pop\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4073:4139  BurnedWeUSD(msg.sender, stablecoin, weUSDAmount, stablecoinAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9163:9188   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":9219:9221   */\n      0x20\n        /* \"#utility.yul\":9204:9222   */\n      dup2\n      add\n        /* \"#utility.yul\":9197:9231   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/weusd/manageusd.sol\":4073:4139  BurnedWeUSD(msg.sender, stablecoin, weUSDAmount, stablecoinAmount) */\n      dup9\n      and\n      swap4\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4085:4095  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"contracts/weusd/manageusd.sol\":4073:4139  BurnedWeUSD(msg.sender, stablecoin, weUSDAmount, stablecoinAmount) */\n      0x3d9842cbdfa603ab9534d6e362bf28b3061318f57fed5e7087dfc956a9d74442\n      swap2\n        /* \"#utility.yul\":9136:9154   */\n      add\n        /* \"contracts/weusd/manageusd.sol\":4073:4139  BurnedWeUSD(msg.sender, stablecoin, weUSDAmount, stablecoinAmount) */\n      tag_251\n        /* \"#utility.yul\":8989:9237   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_279\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_210\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_217\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":2423:2548  function setFeeRecipient(address _feeRecipient) external onlyRole(ADMIN_ROLE) {... */\n    tag_147:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_283\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_283:\n      pop\n        /* \"contracts/weusd/manageusd.sol\":2512:2524  feeRecipient */\n      0x05\n        /* \"contracts/weusd/manageusd.sol\":2512:2540  feeRecipient = _feeRecipient */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/weusd/manageusd.sol\":2423:2548  function setFeeRecipient(address _feeRecipient) external onlyRole(ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_289\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_291\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_293\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_150)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_292:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_150)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_297\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      jump(tag_150)\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_302\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_303\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3132:3164   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3114:3165   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3102:3104   */\n      0x20\n        /* \"#utility.yul\":3087:3105   */\n      add\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_308\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_309\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/weusd/manageusd.sol\":5999:6468  function convertDecimals(... */\n    tag_239:\n        /* \"contracts/weusd/manageusd.sol\":6140:6154  uint256 result */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":6189:6203  targetDecimals */\n      dup2\n        /* \"contracts/weusd/manageusd.sol\":6171:6203  sourceDecimals == targetDecimals */\n      0xff\n      and\n        /* \"contracts/weusd/manageusd.sol\":6171:6185  sourceDecimals */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":6171:6203  sourceDecimals == targetDecimals */\n      0xff\n      and\n      sub\n        /* \"contracts/weusd/manageusd.sol\":6167:6461  if (sourceDecimals == targetDecimals) {... */\n      tag_314\n      jumpi\n      pop\n        /* \"contracts/weusd/manageusd.sol\":6229:6234  value */\n      dup3\n        /* \"contracts/weusd/manageusd.sol\":6167:6461  if (sourceDecimals == targetDecimals) {... */\n      jump(tag_323)\n    tag_314:\n        /* \"contracts/weusd/manageusd.sol\":6273:6287  targetDecimals */\n      dup2\n        /* \"contracts/weusd/manageusd.sol\":6256:6287  sourceDecimals < targetDecimals */\n      0xff\n      and\n        /* \"contracts/weusd/manageusd.sol\":6256:6270  sourceDecimals */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":6256:6287  sourceDecimals < targetDecimals */\n      0xff\n      and\n      lt\n        /* \"contracts/weusd/manageusd.sol\":6252:6461  if (sourceDecimals < targetDecimals) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"contracts/weusd/manageusd.sol\":6327:6358  targetDecimals - sourceDecimals */\n      tag_317\n        /* \"contracts/weusd/manageusd.sol\":6344:6358  sourceDecimals */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":6327:6341  targetDecimals */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":6327:6358  targetDecimals - sourceDecimals */\n      tag_318\n      jump\t// in\n    tag_317:\n        /* \"contracts/weusd/manageusd.sol\":6322:6359  10**(targetDecimals - sourceDecimals) */\n      tag_319\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":6322:6324  10 */\n      0x0a\n        /* \"contracts/weusd/manageusd.sol\":6322:6359  10**(targetDecimals - sourceDecimals) */\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"contracts/weusd/manageusd.sol\":6313:6360  value * (10**(targetDecimals - sourceDecimals)) */\n      tag_321\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":6313:6318  value */\n      dup6\n        /* \"contracts/weusd/manageusd.sol\":6313:6360  value * (10**(targetDecimals - sourceDecimals)) */\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"contracts/weusd/manageusd.sol\":6304:6360  result = value * (10**(targetDecimals - sourceDecimals)) */\n      swap1\n      pop\n        /* \"contracts/weusd/manageusd.sol\":6252:6461  if (sourceDecimals < targetDecimals) {... */\n      jump(tag_323)\n    tag_316:\n        /* \"contracts/weusd/manageusd.sol\":6416:6447  sourceDecimals - targetDecimals */\n      tag_324\n        /* \"contracts/weusd/manageusd.sol\":6433:6447  targetDecimals */\n      dup3\n        /* \"contracts/weusd/manageusd.sol\":6416:6430  sourceDecimals */\n      dup5\n        /* \"contracts/weusd/manageusd.sol\":6416:6447  sourceDecimals - targetDecimals */\n      tag_318\n      jump\t// in\n    tag_324:\n        /* \"contracts/weusd/manageusd.sol\":6411:6448  10**(sourceDecimals - targetDecimals) */\n      tag_325\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":6411:6413  10 */\n      0x0a\n        /* \"contracts/weusd/manageusd.sol\":6411:6448  10**(sourceDecimals - targetDecimals) */\n      tag_320\n      jump\t// in\n    tag_325:\n        /* \"contracts/weusd/manageusd.sol\":6402:6449  value / (10**(sourceDecimals - targetDecimals)) */\n      tag_326\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":6402:6407  value */\n      dup6\n        /* \"contracts/weusd/manageusd.sol\":6402:6449  value / (10**(sourceDecimals - targetDecimals)) */\n      tag_327\n      jump\t// in\n    tag_326:\n        /* \"contracts/weusd/manageusd.sol\":6393:6449  result = value / (10**(sourceDecimals - targetDecimals)) */\n      swap1\n      pop\n        /* \"contracts/weusd/manageusd.sol\":6252:6461  if (sourceDecimals < targetDecimals) {... */\n    tag_323:\n        /* \"contracts/weusd/manageusd.sol\":5999:6468  function convertDecimals(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/weusd/manageusd.sol\":6476:7064  function convertDecimalsCeil(... */\n    tag_267:\n        /* \"contracts/weusd/manageusd.sol\":6621:6635  uint256 result */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":6670:6684  targetDecimals */\n      dup2\n        /* \"contracts/weusd/manageusd.sol\":6652:6684  sourceDecimals == targetDecimals */\n      0xff\n      and\n        /* \"contracts/weusd/manageusd.sol\":6652:6666  sourceDecimals */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":6652:6684  sourceDecimals == targetDecimals */\n      0xff\n      and\n      sub\n        /* \"contracts/weusd/manageusd.sol\":6648:7057  if (sourceDecimals == targetDecimals) {... */\n      tag_329\n      jumpi\n      pop\n        /* \"contracts/weusd/manageusd.sol\":6710:6715  value */\n      dup3\n        /* \"contracts/weusd/manageusd.sol\":6648:7057  if (sourceDecimals == targetDecimals) {... */\n      jump(tag_323)\n    tag_329:\n        /* \"contracts/weusd/manageusd.sol\":6754:6768  targetDecimals */\n      dup2\n        /* \"contracts/weusd/manageusd.sol\":6737:6768  sourceDecimals < targetDecimals */\n      0xff\n      and\n        /* \"contracts/weusd/manageusd.sol\":6737:6751  sourceDecimals */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":6737:6768  sourceDecimals < targetDecimals */\n      0xff\n      and\n      lt\n        /* \"contracts/weusd/manageusd.sol\":6733:7057  if (sourceDecimals < targetDecimals) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"contracts/weusd/manageusd.sol\":6808:6839  targetDecimals - sourceDecimals */\n      tag_317\n        /* \"contracts/weusd/manageusd.sol\":6825:6839  sourceDecimals */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":6808:6822  targetDecimals */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":6808:6839  targetDecimals - sourceDecimals */\n      tag_318\n      jump\t// in\n        /* \"contracts/weusd/manageusd.sol\":6733:7057  if (sourceDecimals < targetDecimals) {... */\n    tag_331:\n        /* \"contracts/weusd/manageusd.sol\":6874:6886  uint256 temp */\n      0x00\n        /* \"contracts/weusd/manageusd.sol\":6894:6925  sourceDecimals - targetDecimals */\n      tag_336\n        /* \"contracts/weusd/manageusd.sol\":6911:6925  targetDecimals */\n      dup4\n        /* \"contracts/weusd/manageusd.sol\":6894:6908  sourceDecimals */\n      dup6\n        /* \"contracts/weusd/manageusd.sol\":6894:6925  sourceDecimals - targetDecimals */\n      tag_318\n      jump\t// in\n    tag_336:\n        /* \"contracts/weusd/manageusd.sol\":6889:6926  10**(sourceDecimals - targetDecimals) */\n      tag_337\n      swap1\n        /* \"contracts/weusd/manageusd.sol\":6889:6891  10 */\n      0x0a\n        /* \"contracts/weusd/manageusd.sol\":6889:6926  10**(sourceDecimals - targetDecimals) */\n      tag_320\n      jump\t// in\n    tag_337:\n        /* \"contracts/weusd/manageusd.sol\":6874:6926  uint256 temp = 10**(sourceDecimals - targetDecimals) */\n      swap1\n      pop\n        /* \"contracts/weusd/manageusd.sol\":6950:6962  value / temp */\n      tag_338\n        /* \"contracts/weusd/manageusd.sol\":6874:6926  uint256 temp = 10**(sourceDecimals - targetDecimals) */\n      dup2\n        /* \"contracts/weusd/manageusd.sol\":6950:6955  value */\n      dup7\n        /* \"contracts/weusd/manageusd.sol\":6950:6962  value / temp */\n      tag_327\n      jump\t// in\n    tag_338:\n        /* \"contracts/weusd/manageusd.sol\":6941:6962  result = value / temp */\n      swap2\n      pop\n        /* \"contracts/weusd/manageusd.sol\":6981:6993  value % temp */\n      tag_339\n        /* \"contracts/weusd/manageusd.sol\":6989:6993  temp */\n      dup2\n        /* \"contracts/weusd/manageusd.sol\":6981:6986  value */\n      dup7\n        /* \"contracts/weusd/manageusd.sol\":6981:6993  value % temp */\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"contracts/weusd/manageusd.sol\":6981:6998  value % temp != 0 */\n      iszero\n        /* \"contracts/weusd/manageusd.sol\":6977:7046  if (value % temp != 0) {... */\n      tag_341\n      jumpi\n        /* \"contracts/weusd/manageusd.sol\":7019:7030  result += 1 */\n      tag_342\n        /* \"contracts/weusd/manageusd.sol\":7029:7030  1 */\n      0x01\n        /* \"contracts/weusd/manageusd.sol\":7019:7030  result += 1 */\n      dup4\n      tag_343\n      jump\t// in\n    tag_342:\n      swap2\n      pop\n        /* \"contracts/weusd/manageusd.sol\":6977:7046  if (value % temp != 0) {... */\n    tag_341:\n        /* \"contracts/weusd/manageusd.sol\":6859:7057  {... */\n      pop\n        /* \"contracts/weusd/manageusd.sol\":6476:7064  function convertDecimalsCeil(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_345\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6718:6750   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6700:6751   */\n      mstore\n        /* \"#utility.yul\":6767:6785   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6760:6794   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6673:6691   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      tag_154\n        /* \"#utility.yul\":6526:6800   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":196:482   */\n    tag_46:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_363:\n        /* \"#utility.yul\":349:372   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":401:433   */\n      dup2\n      and\n        /* \"#utility.yul\":391:434   */\n      dup2\n      eq\n        /* \"#utility.yul\":381:452   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":448:449   */\n      0x00\n        /* \"#utility.yul\":445:446   */\n      dup1\n        /* \"#utility.yul\":438:450   */\n      revert\n        /* \"#utility.yul\":679:852   */\n    tag_355:\n        /* \"#utility.yul\":747:767   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":796:827   */\n      dup2\n      and\n        /* \"#utility.yul\":786:828   */\n      dup2\n      eq\n        /* \"#utility.yul\":776:846   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":842:843   */\n      0x00\n        /* \"#utility.yul\":839:840   */\n      dup1\n        /* \"#utility.yul\":832:844   */\n      revert\n        /* \"#utility.yul\":776:846   */\n    tag_367:\n        /* \"#utility.yul\":679:852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":857:1277   */\n    tag_52:\n        /* \"#utility.yul\":934:940   */\n      0x00\n        /* \"#utility.yul\":942:948   */\n      dup1\n        /* \"#utility.yul\":950:956   */\n      0x00\n        /* \"#utility.yul\":1003:1005   */\n      0x60\n        /* \"#utility.yul\":991:1000   */\n      dup5\n        /* \"#utility.yul\":982:989   */\n      dup7\n        /* \"#utility.yul\":978:1001   */\n      sub\n        /* \"#utility.yul\":974:1006   */\n      slt\n        /* \"#utility.yul\":971:1023   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":1019:1020   */\n      0x00\n        /* \"#utility.yul\":1016:1017   */\n      dup1\n        /* \"#utility.yul\":1009:1021   */\n      revert\n        /* \"#utility.yul\":971:1023   */\n    tag_369:\n        /* \"#utility.yul\":1064:1087   */\n      dup4\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1184:1186   */\n      0x20\n        /* \"#utility.yul\":1169:1187   */\n      dup5\n      add\n        /* \"#utility.yul\":1156:1188   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1233:1271   */\n      tag_370\n        /* \"#utility.yul\":1267:1269   */\n      0x40\n        /* \"#utility.yul\":1252:1270   */\n      dup6\n      add\n        /* \"#utility.yul\":1233:1271   */\n      tag_355\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1223:1271   */\n      swap1\n      pop\n        /* \"#utility.yul\":857:1277   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1282:1468   */\n    tag_56:\n        /* \"#utility.yul\":1341:1347   */\n      0x00\n        /* \"#utility.yul\":1394:1396   */\n      0x20\n        /* \"#utility.yul\":1382:1391   */\n      dup3\n        /* \"#utility.yul\":1373:1380   */\n      dup5\n        /* \"#utility.yul\":1369:1392   */\n      sub\n        /* \"#utility.yul\":1365:1397   */\n      slt\n        /* \"#utility.yul\":1362:1414   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":1410:1411   */\n      0x00\n        /* \"#utility.yul\":1407:1408   */\n      dup1\n        /* \"#utility.yul\":1400:1412   */\n      revert\n        /* \"#utility.yul\":1362:1414   */\n    tag_372:\n        /* \"#utility.yul\":1433:1462   */\n      tag_323\n        /* \"#utility.yul\":1452:1461   */\n      dup3\n        /* \"#utility.yul\":1433:1462   */\n      tag_355\n      jump\t// in\n        /* \"#utility.yul\":1473:1699   */\n    tag_60:\n        /* \"#utility.yul\":1532:1538   */\n      0x00\n        /* \"#utility.yul\":1585:1587   */\n      0x20\n        /* \"#utility.yul\":1573:1582   */\n      dup3\n        /* \"#utility.yul\":1564:1571   */\n      dup5\n        /* \"#utility.yul\":1560:1583   */\n      sub\n        /* \"#utility.yul\":1556:1588   */\n      slt\n        /* \"#utility.yul\":1553:1605   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":1601:1602   */\n      0x00\n        /* \"#utility.yul\":1598:1599   */\n      dup1\n        /* \"#utility.yul\":1591:1603   */\n      revert\n        /* \"#utility.yul\":1553:1605   */\n    tag_375:\n      pop\n        /* \"#utility.yul\":1646:1669   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1473:1699   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:2245   */\n    tag_65:\n        /* \"#utility.yul\":1790:1796   */\n      0x00\n        /* \"#utility.yul\":1798:1804   */\n      dup1\n        /* \"#utility.yul\":1806:1812   */\n      0x00\n        /* \"#utility.yul\":1814:1820   */\n      dup1\n        /* \"#utility.yul\":1867:1870   */\n      0x80\n        /* \"#utility.yul\":1855:1864   */\n      dup6\n        /* \"#utility.yul\":1846:1853   */\n      dup8\n        /* \"#utility.yul\":1842:1865   */\n      sub\n        /* \"#utility.yul\":1838:1871   */\n      slt\n        /* \"#utility.yul\":1835:1888   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":1884:1885   */\n      0x00\n        /* \"#utility.yul\":1881:1882   */\n      dup1\n        /* \"#utility.yul\":1874:1886   */\n      revert\n        /* \"#utility.yul\":1835:1888   */\n    tag_377:\n        /* \"#utility.yul\":1929:1952   */\n      dup5\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2049:2051   */\n      0x20\n        /* \"#utility.yul\":2034:2052   */\n      dup6\n      add\n        /* \"#utility.yul\":2021:2053   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2152:2154   */\n      0x40\n        /* \"#utility.yul\":2137:2155   */\n      dup6\n      add\n        /* \"#utility.yul\":2124:2156   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2201:2239   */\n      tag_378\n        /* \"#utility.yul\":2235:2237   */\n      0x60\n        /* \"#utility.yul\":2220:2238   */\n      dup7\n      add\n        /* \"#utility.yul\":2201:2239   */\n      tag_355\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2191:2239   */\n      swap1\n      pop\n        /* \"#utility.yul\":1704:2245   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2963   */\n    tag_75:\n        /* \"#utility.yul\":2731:2737   */\n      0x00\n        /* \"#utility.yul\":2739:2745   */\n      dup1\n        /* \"#utility.yul\":2792:2794   */\n      0x40\n        /* \"#utility.yul\":2780:2789   */\n      dup4\n        /* \"#utility.yul\":2771:2778   */\n      dup6\n        /* \"#utility.yul\":2767:2790   */\n      sub\n        /* \"#utility.yul\":2763:2795   */\n      slt\n        /* \"#utility.yul\":2760:2812   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":2808:2809   */\n      0x00\n        /* \"#utility.yul\":2805:2806   */\n      dup1\n        /* \"#utility.yul\":2798:2810   */\n      revert\n        /* \"#utility.yul\":2760:2812   */\n    tag_383:\n        /* \"#utility.yul\":2853:2876   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2919:2957   */\n      tag_384\n        /* \"#utility.yul\":2953:2955   */\n      0x20\n        /* \"#utility.yul\":2938:2956   */\n      dup5\n      add\n        /* \"#utility.yul\":2919:2957   */\n      tag_355\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2909:2957   */\n      swap1\n      pop\n        /* \"#utility.yul\":2663:2963   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3176:3476   */\n    tag_117:\n        /* \"#utility.yul\":3244:3250   */\n      0x00\n        /* \"#utility.yul\":3252:3258   */\n      dup1\n        /* \"#utility.yul\":3305:3307   */\n      0x40\n        /* \"#utility.yul\":3293:3302   */\n      dup4\n        /* \"#utility.yul\":3284:3291   */\n      dup6\n        /* \"#utility.yul\":3280:3303   */\n      sub\n        /* \"#utility.yul\":3276:3308   */\n      slt\n        /* \"#utility.yul\":3273:3325   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":3321:3322   */\n      0x00\n        /* \"#utility.yul\":3318:3319   */\n      dup1\n        /* \"#utility.yul\":3311:3323   */\n      revert\n        /* \"#utility.yul\":3273:3325   */\n    tag_387:\n        /* \"#utility.yul\":3344:3373   */\n      tag_388\n        /* \"#utility.yul\":3363:3372   */\n      dup4\n        /* \"#utility.yul\":3344:3373   */\n      tag_355\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3334:3373   */\n      swap5\n        /* \"#utility.yul\":3442:3444   */\n      0x20\n        /* \"#utility.yul\":3427:3445   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3414:3446   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3176:3476   */\n      jump\t// out\n        /* \"#utility.yul\":5111:5238   */\n    tag_356:\n        /* \"#utility.yul\":5172:5182   */\n      0x4e487b71\n        /* \"#utility.yul\":5167:5170   */\n      0xe0\n        /* \"#utility.yul\":5163:5183   */\n      shl\n        /* \"#utility.yul\":5160:5161   */\n      0x00\n        /* \"#utility.yul\":5153:5184   */\n      mstore\n        /* \"#utility.yul\":5203:5207   */\n      0x11\n        /* \"#utility.yul\":5200:5201   */\n      0x04\n        /* \"#utility.yul\":5193:5208   */\n      mstore\n        /* \"#utility.yul\":5227:5231   */\n      0x24\n        /* \"#utility.yul\":5224:5225   */\n      0x00\n        /* \"#utility.yul\":5217:5232   */\n      revert\n        /* \"#utility.yul\":5243:5378   */\n    tag_163:\n        /* \"#utility.yul\":5282:5285   */\n      0x00\n        /* \"#utility.yul\":5303:5320   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5300:5343   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":5323:5341   */\n      tag_397\n      tag_356\n      jump\t// in\n    tag_397:\n      pop\n        /* \"#utility.yul\":5370:5371   */\n      0x01\n        /* \"#utility.yul\":5359:5372   */\n      add\n      swap1\n        /* \"#utility.yul\":5243:5378   */\n      jump\t// out\n        /* \"#utility.yul\":5735:5863   */\n    tag_168:\n        /* \"#utility.yul\":5802:5811   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5823:5834   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5820:5857   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":5837:5855   */\n      tag_150\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":6244:6521   */\n    tag_174:\n        /* \"#utility.yul\":6311:6317   */\n      0x00\n        /* \"#utility.yul\":6364:6366   */\n      0x20\n        /* \"#utility.yul\":6352:6361   */\n      dup3\n        /* \"#utility.yul\":6343:6350   */\n      dup5\n        /* \"#utility.yul\":6339:6362   */\n      sub\n        /* \"#utility.yul\":6335:6367   */\n      slt\n        /* \"#utility.yul\":6332:6384   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":6380:6381   */\n      0x00\n        /* \"#utility.yul\":6377:6378   */\n      dup1\n        /* \"#utility.yul\":6370:6382   */\n      revert\n        /* \"#utility.yul\":6332:6384   */\n    tag_404:\n        /* \"#utility.yul\":6412:6421   */\n      dup2\n        /* \"#utility.yul\":6406:6422   */\n      mload\n        /* \"#utility.yul\":6465:6470   */\n      dup1\n        /* \"#utility.yul\":6458:6471   */\n      iszero\n        /* \"#utility.yul\":6451:6472   */\n      iszero\n        /* \"#utility.yul\":6444:6449   */\n      dup2\n        /* \"#utility.yul\":6441:6473   */\n      eq\n        /* \"#utility.yul\":6431:6491   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":6487:6488   */\n      0x00\n        /* \"#utility.yul\":6484:6485   */\n      dup1\n        /* \"#utility.yul\":6477:6489   */\n      revert\n        /* \"#utility.yul\":8356:8629   */\n    tag_237:\n        /* \"#utility.yul\":8424:8430   */\n      0x00\n        /* \"#utility.yul\":8477:8479   */\n      0x20\n        /* \"#utility.yul\":8465:8474   */\n      dup3\n        /* \"#utility.yul\":8456:8463   */\n      dup5\n        /* \"#utility.yul\":8452:8475   */\n      sub\n        /* \"#utility.yul\":8448:8480   */\n      slt\n        /* \"#utility.yul\":8445:8497   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":8493:8494   */\n      0x00\n        /* \"#utility.yul\":8490:8491   */\n      dup1\n        /* \"#utility.yul\":8483:8495   */\n      revert\n        /* \"#utility.yul\":8445:8497   */\n    tag_412:\n        /* \"#utility.yul\":8525:8534   */\n      dup2\n        /* \"#utility.yul\":8519:8535   */\n      mload\n        /* \"#utility.yul\":8575:8579   */\n      0xff\n        /* \"#utility.yul\":8568:8573   */\n      dup2\n        /* \"#utility.yul\":8564:8580   */\n      and\n        /* \"#utility.yul\":8557:8562   */\n      dup2\n        /* \"#utility.yul\":8554:8581   */\n      eq\n        /* \"#utility.yul\":8544:8599   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":8595:8596   */\n      0x00\n        /* \"#utility.yul\":8592:8593   */\n      dup1\n        /* \"#utility.yul\":8585:8597   */\n      revert\n        /* \"#utility.yul\":9242:9393   */\n    tag_318:\n        /* \"#utility.yul\":9332:9336   */\n      0xff\n        /* \"#utility.yul\":9325:9337   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":9311:9323   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":9307:9338   */\n      sub\n      swap1\n        /* \"#utility.yul\":9350:9364   */\n      dup2\n      gt\n        /* \"#utility.yul\":9347:9387   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":9367:9385   */\n      tag_150\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":9398:9773   */\n    tag_357:\n        /* \"#utility.yul\":9486:9487   */\n      0x01\n        /* \"#utility.yul\":9504:9509   */\n      dup2\n        /* \"#utility.yul\":9518:9767   */\n    tag_420:\n        /* \"#utility.yul\":9539:9540   */\n      0x01\n        /* \"#utility.yul\":9529:9537   */\n      dup5\n        /* \"#utility.yul\":9526:9541   */\n      gt\n        /* \"#utility.yul\":9518:9767   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":9589:9593   */\n      dup1\n        /* \"#utility.yul\":9584:9587   */\n      dup6\n        /* \"#utility.yul\":9580:9594   */\n      div\n        /* \"#utility.yul\":9574:9578   */\n      dup2\n        /* \"#utility.yul\":9571:9595   */\n      gt\n        /* \"#utility.yul\":9568:9618   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":9598:9616   */\n      tag_424\n      tag_356\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9648:9649   */\n      0x01\n        /* \"#utility.yul\":9638:9646   */\n      dup5\n        /* \"#utility.yul\":9634:9650   */\n      and\n        /* \"#utility.yul\":9631:9680   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":9662:9678   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":9631:9680   */\n    tag_425:\n        /* \"#utility.yul\":9745:9746   */\n      0x01\n        /* \"#utility.yul\":9741:9757   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":9701:9716   */\n      dup1\n      mul\n        /* \"#utility.yul\":9518:9767   */\n      jump(tag_420)\n    tag_422:\n        /* \"#utility.yul\":9398:9773   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9778:10680   */\n    tag_358:\n        /* \"#utility.yul\":9827:9832   */\n      0x00\n        /* \"#utility.yul\":9857:9865   */\n      dup3\n        /* \"#utility.yul\":9847:9927   */\n      tag_427\n      jumpi\n      pop\n        /* \"#utility.yul\":9898:9899   */\n      0x01\n        /* \"#utility.yul\":9912:9917   */\n      jump(tag_150)\n        /* \"#utility.yul\":9847:9927   */\n    tag_427:\n        /* \"#utility.yul\":9946:9950   */\n      dup2\n        /* \"#utility.yul\":9936:10012   */\n      tag_428\n      jumpi\n      pop\n        /* \"#utility.yul\":9983:9984   */\n      0x00\n        /* \"#utility.yul\":9997:10002   */\n      jump(tag_150)\n        /* \"#utility.yul\":9936:10012   */\n    tag_428:\n        /* \"#utility.yul\":10028:10032   */\n      dup2\n        /* \"#utility.yul\":10046:10047   */\n      0x01\n        /* \"#utility.yul\":10041:10100   */\n      dup2\n      eq\n      tag_430\n      jumpi\n        /* \"#utility.yul\":10114:10115   */\n      0x02\n        /* \"#utility.yul\":10109:10283   */\n      dup2\n      eq\n      tag_431\n      jumpi\n        /* \"#utility.yul\":10021:10283   */\n      jump(tag_429)\n        /* \"#utility.yul\":10041:10100   */\n    tag_430:\n        /* \"#utility.yul\":10071:10072   */\n      0x01\n        /* \"#utility.yul\":10062:10072   */\n      swap2\n      pop\n        /* \"#utility.yul\":10085:10090   */\n      pop\n      jump(tag_150)\n        /* \"#utility.yul\":10109:10283   */\n    tag_431:\n        /* \"#utility.yul\":10146:10149   */\n      0xff\n        /* \"#utility.yul\":10136:10144   */\n      dup5\n        /* \"#utility.yul\":10133:10150   */\n      gt\n        /* \"#utility.yul\":10130:10173   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":10153:10171   */\n      tag_433\n      tag_356\n      jump\t// in\n    tag_433:\n      pop\n      pop\n        /* \"#utility.yul\":10209:10210   */\n      0x01\n        /* \"#utility.yul\":10195:10211   */\n      dup3\n      shl\n        /* \"#utility.yul\":10268:10273   */\n      jump(tag_150)\n        /* \"#utility.yul\":10021:10283   */\n    tag_429:\n      pop\n        /* \"#utility.yul\":10367:10369   */\n      0x20\n        /* \"#utility.yul\":10357:10365   */\n      dup4\n        /* \"#utility.yul\":10354:10370   */\n      lt\n        /* \"#utility.yul\":10348:10351   */\n      0x0133\n        /* \"#utility.yul\":10342:10346   */\n      dup4\n        /* \"#utility.yul\":10339:10352   */\n      lt\n        /* \"#utility.yul\":10335:10371   */\n      and\n        /* \"#utility.yul\":10329:10331   */\n      0x4e\n        /* \"#utility.yul\":10319:10327   */\n      dup5\n        /* \"#utility.yul\":10316:10332   */\n      lt\n        /* \"#utility.yul\":10311:10313   */\n      0x0b\n        /* \"#utility.yul\":10305:10309   */\n      dup5\n        /* \"#utility.yul\":10302:10314   */\n      lt\n        /* \"#utility.yul\":10298:10333   */\n      and\n        /* \"#utility.yul\":10295:10372   */\n      or\n        /* \"#utility.yul\":10292:10495   */\n      iszero\n      tag_434\n      jumpi\n      pop\n        /* \"#utility.yul\":10404:10423   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":10480:10485   */\n      jump(tag_150)\n        /* \"#utility.yul\":10292:10495   */\n    tag_434:\n        /* \"#utility.yul\":10527:10569   */\n      tag_435\n      not(0x00)\n        /* \"#utility.yul\":10552:10560   */\n      dup5\n        /* \"#utility.yul\":10546:10550   */\n      dup5\n        /* \"#utility.yul\":10527:10569   */\n      tag_357\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10605:10611   */\n      dup1\n        /* \"#utility.yul\":10601:10602   */\n      0x00\n        /* \"#utility.yul\":10597:10603   */\n      not\n        /* \"#utility.yul\":10593:10612   */\n      div\n        /* \"#utility.yul\":10584:10591   */\n      dup3\n        /* \"#utility.yul\":10581:10613   */\n      gt\n        /* \"#utility.yul\":10578:10636   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":10616:10634   */\n      tag_437\n      tag_356\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10654:10674   */\n      mul\n      swap4\n        /* \"#utility.yul\":9778:10680   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10685:10825   */\n    tag_320:\n        /* \"#utility.yul\":10743:10748   */\n      0x00\n        /* \"#utility.yul\":10772:10819   */\n      tag_323\n        /* \"#utility.yul\":10813:10817   */\n      0xff\n        /* \"#utility.yul\":10803:10811   */\n      dup5\n        /* \"#utility.yul\":10799:10818   */\n      and\n        /* \"#utility.yul\":10793:10797   */\n      dup4\n        /* \"#utility.yul\":10772:10819   */\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":10830:10998   */\n    tag_322:\n        /* \"#utility.yul\":10903:10912   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10934:10943   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10951:10966   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10945:10967   */\n      dup5\n      eq\n        /* \"#utility.yul\":10931:10968   */\n      or\n        /* \"#utility.yul\":10921:10992   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":10972:10990   */\n      tag_150\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":11003:11130   */\n    tag_359:\n        /* \"#utility.yul\":11064:11074   */\n      0x4e487b71\n        /* \"#utility.yul\":11059:11062   */\n      0xe0\n        /* \"#utility.yul\":11055:11075   */\n      shl\n        /* \"#utility.yul\":11052:11053   */\n      0x00\n        /* \"#utility.yul\":11045:11076   */\n      mstore\n        /* \"#utility.yul\":11095:11099   */\n      0x12\n        /* \"#utility.yul\":11092:11093   */\n      0x04\n        /* \"#utility.yul\":11085:11100   */\n      mstore\n        /* \"#utility.yul\":11119:11123   */\n      0x24\n        /* \"#utility.yul\":11116:11117   */\n      0x00\n        /* \"#utility.yul\":11109:11124   */\n      revert\n        /* \"#utility.yul\":11135:11255   */\n    tag_327:\n        /* \"#utility.yul\":11175:11176   */\n      0x00\n        /* \"#utility.yul\":11201:11202   */\n      dup3\n        /* \"#utility.yul\":11191:11226   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":11206:11224   */\n      tag_446\n      tag_359\n      jump\t// in\n    tag_446:\n      pop\n        /* \"#utility.yul\":11240:11249   */\n      div\n      swap1\n        /* \"#utility.yul\":11135:11255   */\n      jump\t// out\n        /* \"#utility.yul\":11260:11372   */\n    tag_340:\n        /* \"#utility.yul\":11292:11293   */\n      0x00\n        /* \"#utility.yul\":11318:11319   */\n      dup3\n        /* \"#utility.yul\":11308:11343   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":11323:11341   */\n      tag_449\n      tag_359\n      jump\t// in\n    tag_449:\n      pop\n        /* \"#utility.yul\":11357:11366   */\n      mod\n      swap1\n        /* \"#utility.yul\":11260:11372   */\n      jump\t// out\n        /* \"#utility.yul\":11377:11502   */\n    tag_343:\n        /* \"#utility.yul\":11442:11451   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11463:11473   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":11460:11496   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":11476:11494   */\n      tag_150\n      tag_356\n      jump\t// in\n    stop\n    data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n\n    auxdata: 0xa2646970667358221220dc48af6984076926f7567d87875765c8f5b6d6f8080d4c3ed3f97c9b3a8c067e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_546": {
									"entryPoint": null,
									"id": 546,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_865": {
									"entryPoint": null,
									"id": 865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 320,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_494": {
									"entryPoint": null,
									"id": 494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:748:11",
										"nodeType": "YulBlock",
										"src": "0:748:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:11",
													"nodeType": "YulBlock",
													"src": "74:117:11",
													"statements": [
														{
															"nativeSrc": "84:22:11",
															"nodeType": "YulAssignment",
															"src": "84:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:11"
																},
																"nativeSrc": "93:13:11",
																"nodeType": "YulFunctionCall",
																"src": "93:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:11",
																"nodeType": "YulBlock",
																"src": "169:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:11",
																					"nodeType": "YulLiteral",
																					"src": "178:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:11",
																					"nodeType": "YulLiteral",
																					"src": "181:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:11"
																			},
																			"nativeSrc": "171:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:11"
																		},
																		"nativeSrc": "171:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:11",
																										"nodeType": "YulLiteral",
																										"src": "154:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:11",
																										"nodeType": "YulLiteral",
																										"src": "159:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:11"
																								},
																								"nativeSrc": "150:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:11",
																								"nodeType": "YulLiteral",
																								"src": "163:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:11"
																						},
																						"nativeSrc": "146:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:11"
																				},
																				"nativeSrc": "135:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:11"
																		},
																		"nativeSrc": "125:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:11"
																},
																"nativeSrc": "118:50:11",
																"nodeType": "YulFunctionCall",
																"src": "118:50:11"
															},
															"nativeSrc": "115:70:11",
															"nodeType": "YulIf",
															"src": "115:70:11"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:11",
														"nodeType": "YulTypedName",
														"src": "53:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:11",
														"nodeType": "YulTypedName",
														"src": "64:5:11",
														"type": ""
													}
												],
												"src": "14:177:11"
											},
											{
												"body": {
													"nativeSrc": "345:401:11",
													"nodeType": "YulBlock",
													"src": "345:401:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "392:16:11",
																"nodeType": "YulBlock",
																"src": "392:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "401:1:11",
																					"nodeType": "YulLiteral",
																					"src": "401:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "404:1:11",
																					"nodeType": "YulLiteral",
																					"src": "404:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "394:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:11"
																			},
																			"nativeSrc": "394:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "394:12:11"
																		},
																		"nativeSrc": "394:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "394:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "366:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "375:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "362:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:11"
																		},
																		"nativeSrc": "362:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "387:3:11",
																		"nodeType": "YulLiteral",
																		"src": "387:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "358:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:11"
																},
																"nativeSrc": "358:33:11",
																"nodeType": "YulFunctionCall",
																"src": "358:33:11"
															},
															"nativeSrc": "355:53:11",
															"nodeType": "YulIf",
															"src": "355:53:11"
														},
														{
															"nativeSrc": "417:50:11",
															"nodeType": "YulAssignment",
															"src": "417:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "457:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "427:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "427:29:11"
																},
																"nativeSrc": "427:40:11",
																"nodeType": "YulFunctionCall",
																"src": "427:40:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "417:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:11"
																}
															]
														},
														{
															"nativeSrc": "476:59:11",
															"nodeType": "YulAssignment",
															"src": "476:59:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "520:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "531:2:11",
																				"nodeType": "YulLiteral",
																				"src": "531:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "516:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:11"
																		},
																		"nativeSrc": "516:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "486:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "486:29:11"
																},
																"nativeSrc": "486:49:11",
																"nodeType": "YulFunctionCall",
																"src": "486:49:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "476:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:11"
																}
															]
														},
														{
															"nativeSrc": "544:59:11",
															"nodeType": "YulAssignment",
															"src": "544:59:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "599:2:11",
																				"nodeType": "YulLiteral",
																				"src": "599:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:11"
																		},
																		"nativeSrc": "584:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "584:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "554:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "554:29:11"
																},
																"nativeSrc": "554:49:11",
																"nodeType": "YulFunctionCall",
																"src": "554:49:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																}
															]
														},
														{
															"nativeSrc": "612:59:11",
															"nodeType": "YulAssignment",
															"src": "612:59:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "656:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "667:2:11",
																				"nodeType": "YulLiteral",
																				"src": "667:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:11"
																		},
																		"nativeSrc": "652:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "622:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "622:29:11"
																},
																"nativeSrc": "622:49:11",
																"nodeType": "YulFunctionCall",
																"src": "622:49:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "612:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:11"
																}
															]
														},
														{
															"nativeSrc": "680:60:11",
															"nodeType": "YulAssignment",
															"src": "680:60:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "724:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "724:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "735:3:11",
																				"nodeType": "YulLiteral",
																				"src": "735:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "720:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:11"
																		},
																		"nativeSrc": "720:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "720:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "690:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "690:29:11"
																},
																"nativeSrc": "690:50:11",
																"nodeType": "YulFunctionCall",
																"src": "690:50:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "680:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:550:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "279:9:11",
														"nodeType": "YulTypedName",
														"src": "279:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "290:7:11",
														"nodeType": "YulTypedName",
														"src": "290:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "302:6:11",
														"nodeType": "YulTypedName",
														"src": "302:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "310:6:11",
														"nodeType": "YulTypedName",
														"src": "310:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "318:6:11",
														"nodeType": "YulTypedName",
														"src": "318:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "326:6:11",
														"nodeType": "YulTypedName",
														"src": "326:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "334:6:11",
														"nodeType": "YulTypedName",
														"src": "334:6:11",
														"type": ""
													}
												],
												"src": "196:550:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526207a120600455348015610016575f80fd5b5060405161195638038061195683398101604081905261003591610204565b60018054600280546001600160a01b03808a166001600160a01b0319909216919091179091558416610100026001600160a81b031990911617905561007a5f33610140565b506100a57fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610140565b506100d07f41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd4370484610140565b506100fb7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a84610140565b506001600160a01b039384165f908152600660205260409020805460ff1916600117905560058054919094166001600160a01b03199091161790925550610265915050565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166101e0575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556101983390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016101e3565b505f5b92915050565b80516001600160a01b03811681146101ff575f80fd5b919050565b5f805f805f60a08688031215610218575f80fd5b610221866101e9565b945061022f602087016101e9565b935061023d604087016101e9565b925061024b606087016101e9565b9150610259608087016101e9565b90509295509295909350565b6116e4806102725f395ff3fe608060405234801561000f575f80fd5b50600436106101d0575f3560e01c806375b238fc116100fe578063b190d8a31161009e578063d270e7ab1161006e578063d270e7ab14610411578063d547741f14610429578063e63ab1e91461043c578063e74b981b14610463575f80fd5b8063b190d8a3146103c6578063c5494ffb146103d8578063c6400657146103eb578063d19fad37146103fe575f80fd5b80639ea4f3a4116100d95780639ea4f3a414610377578063a217fddf14610399578063a2519ae4146103a0578063a62e1b3e146103b3575f80fd5b806375b238fc146103485780638456cb591461035c57806391d1485414610364575f80fd5b80632f2ff15d116101745780633f4ba83a116101445780633f4ba83a1461030157806346904840146103095780635badbe4c146103345780635c975abb1461033d575f80fd5b80632f2ff15d146102925780632f92893c146102a557806336568abe146102c757806337174202146102da575f80fd5b80631008776f116101af5780631008776f146102285780631e7502d71461023b5780631f2245641461025d578063248a9ca314610270575f80fd5b8062677016146101d457806301ffc9a7146101f05780630bd31a5714610213575b5f80fd5b6101dd60045481565b6040519081526020015b60405180910390f35b6102036101fe366004611370565b610476565b60405190151581526020016101e7565b6102266102213660046113b2565b6104ac565b005b6102266102363660046113e4565b6107b0565b6102036102493660046113fd565b5f9081526007602052604090205460ff1690565b61022661026b366004611414565b610810565b6101dd61027e3660046113fd565b5f9081526020819052604090206001015490565b6102266102a0366004611450565b610a73565b6102036102b33660046113fd565b60076020525f908152604090205460ff1681565b6102266102d5366004611450565b610a9d565b6101dd7f41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd4370481565b610226610ad5565b60055461031c906001600160a01b031681565b6040516001600160a01b0390911681526020016101e7565b6101dd60035481565b60015460ff16610203565b6101dd5f8051602061168f83398151915281565b610226610b0a565b610203610372366004611450565b610b3c565b6102036103853660046113e4565b60066020525f908152604090205460ff1681565b6101dd5f81565b6102266103ae36600461147a565b610b64565b60025461031c906001600160a01b031681565b6003544260401b4660801b17176101dd565b6102266103e63660046113fd565b610db0565b6102266103f93660046113e4565b610dcd565b61022661040c36600461147a565b610e30565b60015461031c9061010090046001600160a01b031681565b610226610437366004611450565b611015565b6101dd7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6102266104713660046113e4565b611039565b5f6001600160e01b03198216637965db0b60e01b14806104a657506301ffc9a760e01b6001600160e01b03198316145b92915050565b4683036105195760405162461bcd60e51b815260206004820152603060248201527f54617267657420636861696e206d75737420626520646966666572656e74206660448201526f3937b69039b7bab931b29031b430b4b760811b60648201526084015b60405180910390fd5b60045482116105755760405162461bcd60e51b815260206004820152602260248201527f416d6f756e74206d7573742062652067726561746572207468616e2067617366604482015261656560f01b6064820152608401610510565b6001600160a01b0381166105cb5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207461726765742075736572206164647265737300000000006044820152606401610510565b5f4690505f60035f81546105de906114b6565b918290555042604090811b608085901b179091175f8181526007602052919091205490915060ff161561064d5760405162461bcd60e51b815260206004820152601760248201527614995c5d595cdd08125108185b1c9958591e481d5cd959604a1b6044820152606401610510565b5f818152600760205260408120805460ff1916600117905560045461067290866114ce565b600254600554600480546040516323b872dd60e01b815233928101929092526001600160a01b039283166024830152604482015292935016906323b872dd906064016020604051808303815f875af11580156106d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f491906114e1565b5060025460405163079cc67960e41b8152336004820152602481018390526001600160a01b03909116906379cc6790906044015f604051808303815f87803b15801561073e575f80fd5b505af1158015610750573d5f803e3d5ffd5b505060408051868152602081018a90529081018490526001600160a01b03871660608201523392508491507f26c32cc5ff12981b55681844f2fb47d52c5e521c58d5288b1325f3304a7e88529060800160405180910390a3505050505050565b5f8051602061168f8339815191526107c781611073565b6001600160a01b0382165f81815260066020526040808220805460ff19169055517f0fa63555fe68cad70e08233633567493a3c74afdc8c7fb9f0c03a8e74f1a137a9190a25050565b7f41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd4370461083a81611073565b5f8581526007602052604090205460ff16156108925760405162461bcd60e51b815260206004820152601760248201527614995c5d595cdd08125108185b1c9958591e481d5cd959604a1b6044820152606401610510565b4684036108fa5760405162461bcd60e51b815260206004820152603060248201527f536f7572636520636861696e206d75737420626520646966666572656e74206660448201526f3937b6903a30b933b2ba1031b430b4b760811b6064820152608401610510565b5f83116109495760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610510565b6001600160a01b03821661099f5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207461726765742075736572206164647265737300000000006044820152606401610510565b5f8581526007602052604090819020805460ff1916600117905560025490516340c10f1960e01b81526001600160a01b03848116600483015260248201869052909116906340c10f19906044015f604051808303815f87803b158015610a03575f80fd5b505af1158015610a15573d5f803e3d5ffd5b5050604080518781524660208201529081018690526001600160a01b03851660608201523392508791507f7690d9cedf96f067bda7114c24bba31be184ae045d199979a0a373862e70d46b9060800160405180910390a35050505050565b5f82815260208190526040902060010154610a8d81611073565b610a97838361107d565b50505050565b6001600160a01b0381163314610ac65760405163334bd91960e11b815260040160405180910390fd5b610ad0828261110c565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610aff81611073565b610b07611175565b50565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b3481611073565b610b076111c7565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6001600160a01b0382165f9081526006602052604090205460ff16610bc75760405162461bcd60e51b815260206004820152601960248201527814dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959603a1b6044820152606401610510565b5f826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c04573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c289190611500565b90505f610c3783836006611202565b6001546040516323b872dd60e01b81523360048201526001600160a01b0361010090920482166024820152604481018690529192508516906323b872dd906064016020604051808303815f875af1158015610c94573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cb891906114e1565b610d045760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c65640000000000006044820152606401610510565b6002546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044015f604051808303815f87803b158015610d4d575f80fd5b505af1158015610d5f573d5f803e3d5ffd5b505060408051868152602081018590526001600160a01b03881693503392507f66c62f0863782653c5c44e10bf21d9def60984ce20d9f75549575a891089658791015b60405180910390a350505050565b5f8051602061168f833981519152610dc781611073565b50600455565b5f8051602061168f833981519152610de481611073565b6001600160a01b0382165f81815260066020526040808220805460ff19166001179055517fd8b2dc62b787ec8afbc8a664cf2fd7c1e7851721acc9e0069132cece3c529c2e9190a25050565b6001600160a01b0382165f9081526006602052604090205460ff16610e935760405162461bcd60e51b815260206004820152601960248201527814dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959603a1b6044820152606401610510565b5f826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ed0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ef49190611500565b90505f610f0383600684611274565b600154604051631795588d60e21b81526001600160a01b0387811660048301523360248301526044820184905292935061010090910490911690635e556234906064015f604051808303815f87803b158015610f5d575f80fd5b505af1158015610f6f573d5f803e3d5ffd5b505060025460405163079cc67960e41b8152336004820152602481018790526001600160a01b0390911692506379cc679091506044015f604051808303815f87803b158015610fbc575f80fd5b505af1158015610fce573d5f803e3d5ffd5b505060408051868152602081018590526001600160a01b03881693503392507f3d9842cbdfa603ab9534d6e362bf28b3061318f57fed5e7087dfc956a9d744429101610da2565b5f8281526020819052604090206001015461102f81611073565b610a97838361110c565b5f8051602061168f83398151915261105081611073565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b610b0781336112ea565b5f6110888383610b3c565b611105575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556110bd3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104a6565b505f6104a6565b5f6111178383610b3c565b15611105575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104a6565b61117d611327565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6111cf61134c565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336111aa565b5f8160ff168360ff160361121757508261126d565b8160ff168360ff16101561124b5761122f8383611520565b61123a90600a61161c565b611244908561162a565b905061126d565b6112558284611520565b61126090600a61161c565b61126a9085611655565b90505b9392505050565b5f8160ff168360ff160361128957508261126d565b8160ff168360ff1610156112a15761122f8383611520565b5f6112ac8385611520565b6112b790600a61161c565b90506112c38186611655565b91506112cf8186611668565b156112e2576112df60018361167b565b91505b509392505050565b6112f48282610b3c565b6113235760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610510565b5050565b60015460ff1661134a57604051638dfc202b60e01b815260040160405180910390fd5b565b60015460ff161561134a5760405163d93c066560e01b815260040160405180910390fd5b5f60208284031215611380575f80fd5b81356001600160e01b03198116811461126d575f80fd5b80356001600160a01b03811681146113ad575f80fd5b919050565b5f805f606084860312156113c4575f80fd5b83359250602084013591506113db60408501611397565b90509250925092565b5f602082840312156113f4575f80fd5b61126d82611397565b5f6020828403121561140d575f80fd5b5035919050565b5f805f8060808587031215611427575f80fd5b84359350602085013592506040850135915061144560608601611397565b905092959194509250565b5f8060408385031215611461575f80fd5b8235915061147160208401611397565b90509250929050565b5f806040838503121561148b575f80fd5b61149483611397565b946020939093013593505050565b634e487b7160e01b5f52601160045260245ffd5b5f600182016114c7576114c76114a2565b5060010190565b818103818111156104a6576104a66114a2565b5f602082840312156114f1575f80fd5b8151801515811461126d575f80fd5b5f60208284031215611510575f80fd5b815160ff8116811461126d575f80fd5b60ff82811682821603908111156104a6576104a66114a2565b6001815b600184111561157457808504811115611558576115586114a2565b600184161561156657908102905b60019390931c92800261153d565b935093915050565b5f8261158a575060016104a6565b8161159657505f6104a6565b81600181146115ac57600281146115b6576115d2565b60019150506104a6565b60ff8411156115c7576115c76114a2565b50506001821b6104a6565b5060208310610133831016604e8410600b84101617156115f5575081810a6104a6565b6116015f198484611539565b805f1904821115611614576116146114a2565b029392505050565b5f61126d60ff84168361157c565b80820281158282048414176104a6576104a66114a2565b634e487b7160e01b5f52601260045260245ffd5b5f8261166357611663611641565b500490565b5f8261167657611676611641565b500690565b808201808211156104a6576104a66114a256fea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220dc48af6984076926f7567d87875765c8f5b6d6f8080d4c3ed3f97c9b3a8c067e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x7A120 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1956 CODESIZE SUB DUP1 PUSH2 0x1956 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x35 SWAP2 PUSH2 0x204 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP5 AND PUSH2 0x100 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x7A PUSH0 CALLER PUSH2 0x140 JUMP JUMPDEST POP PUSH2 0xA5 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x140 JUMP JUMPDEST POP PUSH2 0xD0 PUSH32 0x41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704 DUP5 PUSH2 0x140 JUMP JUMPDEST POP PUSH2 0xFB PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP5 PUSH2 0x140 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SWAP3 SSTORE POP PUSH2 0x265 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1E0 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x198 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x1E3 JUMP JUMPDEST POP PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x221 DUP7 PUSH2 0x1E9 JUMP JUMPDEST SWAP5 POP PUSH2 0x22F PUSH1 0x20 DUP8 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP4 POP PUSH2 0x23D PUSH1 0x40 DUP8 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP3 POP PUSH2 0x24B PUSH1 0x60 DUP8 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x259 PUSH1 0x80 DUP8 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x16E4 DUP1 PUSH2 0x272 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xB190D8A3 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xD270E7AB GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD270E7AB EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x463 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB190D8A3 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xC5494FFB EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xC6400657 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xD19FAD37 EQ PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EA4F3A4 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x9EA4F3A4 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xA2519AE4 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA62E1B3E EQ PUSH2 0x3B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x364 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x5BADBE4C EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x33D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x2F92893C EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x37174202 EQ PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1008776F GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1008776F EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x1E7502D7 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x1F224564 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x270 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x677016 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xBD31A57 EQ PUSH2 0x213 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FD JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x13FD JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x1DD PUSH32 0x41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704 DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x1DD PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x203 JUMP JUMPDEST PUSH2 0x1DD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x168F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x203 PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0xB3C JUMP JUMPDEST PUSH2 0x203 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1DD PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x147A JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP PUSH1 0x40 SHL CHAINID PUSH1 0x80 SHL OR OR PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x226 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FD JUMP JUMPDEST PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST PUSH2 0x226 PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x147A JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x31C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0x1015 JUMP JUMPDEST PUSH2 0x1DD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x471 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x1039 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4A6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CHAINID DUP4 SUB PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420636861696E206D75737420626520646966666572656E742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3937B69039B7BAB931B29031B430B4B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2067617366 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746172676574207573657220616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 CHAINID SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP2 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x40 SWAP1 DUP2 SHL PUSH1 0x80 DUP6 SWAP1 SHL OR SWAP1 SWAP2 OR PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14995C5D595CDD08125108185B1C9958591E481D5CD959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH2 0x672 SWAP1 DUP7 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x73E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP11 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP3 POP DUP5 SWAP2 POP PUSH32 0x26C32CC5FF12981B55681844F2FB47D52C5E521C58D5288B1325F3304A7E8852 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x168F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x7C7 DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xFA63555FE68CAD70E08233633567493A3C74AFDC8C7FB9F0C03A8E74F1A137A SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704 PUSH2 0x83A DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14995C5D595CDD08125108185B1C9958591E481D5CD959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST CHAINID DUP5 SUB PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7572636520636861696E206D75737420626520646966666572656E742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3937B6903A30B933B2BA1031B430B4B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746172676574207573657220616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA03 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA15 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE CHAINID PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP3 POP DUP8 SWAP2 POP PUSH32 0x7690D9CEDF96F067BDA7114C24BBA31BE184AE045D199979A0A373862E70D46B SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA8D DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0xA97 DUP4 DUP4 PUSH2 0x107D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD0 DUP3 DUP3 PUSH2 0x110C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xAFF DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0xB07 PUSH2 0x1175 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB34 DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0xB07 PUSH2 0x11C7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC04 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC28 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC37 DUP4 DUP4 PUSH1 0x6 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP3 DIV DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC94 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0xD04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD5F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP4 POP CALLER SWAP3 POP PUSH32 0x66C62F0863782653C5C44E10BF21D9DEF60984CE20D9F75549575A8910896587 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x168F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDC7 DUP2 PUSH2 0x1073 JUMP JUMPDEST POP PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x168F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDE4 DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xD8B2DC62B787EC8AFBC8A664CF2FD7C1E7851721ACC9E0069132CECE3C529C2E SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF4 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF03 DUP4 PUSH1 0x6 DUP5 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1795588D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP PUSH2 0x100 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0x5E556234 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x79CC6790 SWAP2 POP PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFCE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP4 POP CALLER SWAP3 POP PUSH32 0x3D9842CBDFA603AB9534D6E362BF28B3061318F57FED5E7087DFC956A9D74442 SWAP2 ADD PUSH2 0xDA2 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x102F DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0xA97 DUP4 DUP4 PUSH2 0x110C JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x168F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1050 DUP2 PUSH2 0x1073 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB07 DUP2 CALLER PUSH2 0x12EA JUMP JUMPDEST PUSH0 PUSH2 0x1088 DUP4 DUP4 PUSH2 0xB3C JUMP JUMPDEST PUSH2 0x1105 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x10BD CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4A6 JUMP JUMPDEST POP PUSH0 PUSH2 0x4A6 JUMP JUMPDEST PUSH0 PUSH2 0x1117 DUP4 DUP4 PUSH2 0xB3C JUMP JUMPDEST ISZERO PUSH2 0x1105 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x117D PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x11CF PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x11AA JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x1217 JUMPI POP DUP3 PUSH2 0x126D JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO PUSH2 0x124B JUMPI PUSH2 0x122F DUP4 DUP4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x123A SWAP1 PUSH1 0xA PUSH2 0x161C JUMP JUMPDEST PUSH2 0x1244 SWAP1 DUP6 PUSH2 0x162A JUMP JUMPDEST SWAP1 POP PUSH2 0x126D JUMP JUMPDEST PUSH2 0x1255 DUP3 DUP5 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x1260 SWAP1 PUSH1 0xA PUSH2 0x161C JUMP JUMPDEST PUSH2 0x126A SWAP1 DUP6 PUSH2 0x1655 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x1289 JUMPI POP DUP3 PUSH2 0x126D JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x122F DUP4 DUP4 PUSH2 0x1520 JUMP JUMPDEST PUSH0 PUSH2 0x12AC DUP4 DUP6 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x12B7 SWAP1 PUSH1 0xA PUSH2 0x161C JUMP JUMPDEST SWAP1 POP PUSH2 0x12C3 DUP2 DUP7 PUSH2 0x1655 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CF DUP2 DUP7 PUSH2 0x1668 JUMP JUMPDEST ISZERO PUSH2 0x12E2 JUMPI PUSH2 0x12DF PUSH1 0x1 DUP4 PUSH2 0x167B JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12F4 DUP3 DUP3 PUSH2 0xB3C JUMP JUMPDEST PUSH2 0x1323 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x510 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1380 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13AD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x13DB PUSH1 0x40 DUP6 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x126D DUP3 PUSH2 0x1397 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1445 PUSH1 0x60 DUP7 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1461 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1471 PUSH1 0x20 DUP5 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1494 DUP4 PUSH2 0x1397 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x14C7 JUMPI PUSH2 0x14C7 PUSH2 0x14A2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0x14A2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x126D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1510 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x126D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1574 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x1558 JUMPI PUSH2 0x1558 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1566 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x153D JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x158A JUMPI POP PUSH1 0x1 PUSH2 0x4A6 JUMP JUMPDEST DUP2 PUSH2 0x1596 JUMPI POP PUSH0 PUSH2 0x4A6 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15AC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15B6 JUMPI PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15C7 JUMPI PUSH2 0x15C7 PUSH2 0x14A2 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x4A6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x15F5 JUMPI POP DUP2 DUP2 EXP PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x1601 PUSH0 NOT DUP5 DUP5 PUSH2 0x1539 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1614 JUMPI PUSH2 0x1614 PUSH2 0x14A2 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x126D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x157C JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0x14A2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1663 JUMPI PUSH2 0x1663 PUSH2 0x1641 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1676 JUMPI PUSH2 0x1676 PUSH2 0x1641 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0x14A2 JUMP INVALID LOG4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220DC48AF6984076926F7567D87 DUP8 JUMPI PUSH6 0xC8F5B6D6F808 0xD 0x4C RETURNDATACOPY 0xD3 0xF9 PUSH29 0x9B3A8C067E64736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "370:6697:10:-:0;;;782:10;758:34;;1629:511;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1231:7:5;:15;;1754:5:10;:25;;-1:-1:-1;;;;;1754:25:10;;;-1:-1:-1;;;;;;1754:25:10;;;;;;;;;;1790:35;;1231:15:5;1790:35:10;-1:-1:-1;;;;;;1790:35:10;;;;;;1836:42;1241:5:5;1867:10:10;1836;:42::i;:::-;-1:-1:-1;1889:34:10;503:23;1912:10;1889;:34::i;:::-;-1:-1:-1;1934:54:10;652:36;1970:17;1934:10;:54::i;:::-;-1:-1:-1;1999:42:10;571:24;2023:17;1999:10;:42::i;:::-;-1:-1:-1;;;;;;2052:34:10;;;;;;;:21;:34;;;;;:41;;-1:-1:-1;;2052:41:10;2089:4;2052:41;;;2104:12;:28;;;;;;-1:-1:-1;;;;;;2104:28:10;;;;;;;-1:-1:-1;370:6697:10;;-1:-1:-1;;370:6697:10;6179:316:0;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:4;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;14:177:11:-;93:13;;-1:-1:-1;;;;;135:31:11;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:550::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:50;735:3;724:9;720:19;690:50;:::i;:::-;680:60;;196:550;;;;;;;;:::o;:::-;370:6697:10;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_717": {
									"entryPoint": null,
									"id": 717,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CROSS_CHAIN_MINTER_ROLE_727": {
									"entryPoint": null,
									"id": 727,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_722": {
									"entryPoint": null,
									"id": 722,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 4842,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 4211,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 4221,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_494": {
									"entryPoint": null,
									"id": 494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_612": {
									"entryPoint": 4551,
									"id": 612,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_583": {
									"entryPoint": 4940,
									"id": 583,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_596": {
									"entryPoint": 4903,
									"id": 596,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 4364,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_unpause_628": {
									"entryPoint": 4469,
									"id": 628,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnWeUSDCrossChain_1171": {
									"entryPoint": 1196,
									"id": 1171,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burnWeUSD_1068": {
									"entryPoint": 3632,
									"id": 1068,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@convertDecimalsCeil_1391": {
									"entryPoint": 4724,
									"id": 1391,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@convertDecimals_1326": {
									"entryPoint": 4610,
									"id": 1326,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@deleteStablecoin_949": {
									"entryPoint": 1968,
									"id": 949,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@feeRecipient_743": {
									"entryPoint": null,
									"id": 743,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gasfee_741": {
									"entryPoint": null,
									"id": 741,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getLatestRequestId_1275": {
									"entryPoint": null,
									"id": 1275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2675,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 2876,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isRequestIdUsed_1255": {
									"entryPoint": null,
									"id": 1255,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mainContract_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintWeUSDCrossChain_1243": {
									"entryPoint": 2064,
									"id": 1243,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mintWeUSD_1012": {
									"entryPoint": 2916,
									"id": 1012,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@pause_875": {
									"entryPoint": 2826,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_571": {
									"entryPoint": null,
									"id": 571,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerStablecoin_930": {
									"entryPoint": 3533,
									"id": 930,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@registeredStablecoins_747": {
									"entryPoint": null,
									"id": 747,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 2717,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@requestCount_732": {
									"entryPoint": null,
									"id": 732,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4117,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setFeeRecipient_911": {
									"entryPoint": 4153,
									"id": 911,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setGasfee_898": {
									"entryPoint": 3504,
									"id": 898,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_62": {
									"entryPoint": 1142,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_652": {
									"entryPoint": null,
									"id": 652,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unpause_885": {
									"entryPoint": 2773,
									"id": 885,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usedRequestIds_751": {
									"entryPoint": null,
									"id": 751,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weUSD_730": {
									"entryPoint": null,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 5042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_address": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMainContract_$677__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IPicweUSD_$697__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c0027d5c68fee309a77bba84ffa4dfde426eb995b832c16d5a3e1fecf1f55f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6796245fd06a0237ef78dc4b92ce228b2aeb991d0e4ff61774e8fc1ef736486c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aeff32d03aaba9710cd0ccac9240922a41d8498df078f913fb5acb94e4444254__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cef094ec419a8d26f0cee0bf6ca74c12da636e63d15d6aaf6bbddcac6380238e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5433,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 5408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 5736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11783:11",
										"nodeType": "YulBlock",
										"src": "0:11783:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:11",
													"nodeType": "YulBlock",
													"src": "115:76:11",
													"statements": [
														{
															"nativeSrc": "125:26:11",
															"nodeType": "YulAssignment",
															"src": "125:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:11",
																		"nodeType": "YulLiteral",
																		"src": "148:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:11"
																},
																"nativeSrc": "133:18:11",
																"nodeType": "YulFunctionCall",
																"src": "133:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:11"
																},
																"nativeSrc": "160:25:11",
																"nodeType": "YulFunctionCall",
																"src": "160:25:11"
															},
															"nativeSrc": "160:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:11",
														"nodeType": "YulTypedName",
														"src": "84:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:11",
														"nodeType": "YulTypedName",
														"src": "95:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:11",
														"nodeType": "YulTypedName",
														"src": "106:4:11",
														"type": ""
													}
												],
												"src": "14:177:11"
											},
											{
												"body": {
													"nativeSrc": "265:217:11",
													"nodeType": "YulBlock",
													"src": "265:217:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "311:16:11",
																"nodeType": "YulBlock",
																"src": "311:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:11",
																					"nodeType": "YulLiteral",
																					"src": "320:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "323:1:11",
																					"nodeType": "YulLiteral",
																					"src": "323:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "313:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:11"
																			},
																			"nativeSrc": "313:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:11"
																		},
																		"nativeSrc": "313:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "286:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "295:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "282:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:11"
																		},
																		"nativeSrc": "282:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "307:2:11",
																		"nodeType": "YulLiteral",
																		"src": "307:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "278:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:11"
																},
																"nativeSrc": "278:32:11",
																"nodeType": "YulFunctionCall",
																"src": "278:32:11"
															},
															"nativeSrc": "275:52:11",
															"nodeType": "YulIf",
															"src": "275:52:11"
														},
														{
															"nativeSrc": "336:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "349:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:11"
																},
																"nativeSrc": "349:23:11",
																"nodeType": "YulFunctionCall",
																"src": "349:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "340:5:11",
																	"nodeType": "YulTypedName",
																	"src": "340:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "436:16:11",
																"nodeType": "YulBlock",
																"src": "436:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "445:1:11",
																					"nodeType": "YulLiteral",
																					"src": "445:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "448:1:11",
																					"nodeType": "YulLiteral",
																					"src": "448:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "438:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "438:6:11"
																			},
																			"nativeSrc": "438:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "438:12:11"
																		},
																		"nativeSrc": "438:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "438:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "394:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "394:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "405:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "405:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:3:11",
																								"nodeType": "YulLiteral",
																								"src": "416:3:11",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "421:10:11",
																								"nodeType": "YulLiteral",
																								"src": "421:10:11",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "412:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:11"
																						},
																						"nativeSrc": "412:20:11",
																						"nodeType": "YulFunctionCall",
																						"src": "412:20:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "401:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "401:3:11"
																				},
																				"nativeSrc": "401:32:11",
																				"nodeType": "YulFunctionCall",
																				"src": "401:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "391:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "391:2:11"
																		},
																		"nativeSrc": "391:43:11",
																		"nodeType": "YulFunctionCall",
																		"src": "391:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "384:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "384:6:11"
																},
																"nativeSrc": "384:51:11",
																"nodeType": "YulFunctionCall",
																"src": "384:51:11"
															},
															"nativeSrc": "381:71:11",
															"nodeType": "YulIf",
															"src": "381:71:11"
														},
														{
															"nativeSrc": "461:15:11",
															"nodeType": "YulAssignment",
															"src": "461:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "471:5:11",
																"nodeType": "YulIdentifier",
																"src": "471:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "461:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "461:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "196:286:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "231:9:11",
														"nodeType": "YulTypedName",
														"src": "231:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "242:7:11",
														"nodeType": "YulTypedName",
														"src": "242:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "254:6:11",
														"nodeType": "YulTypedName",
														"src": "254:6:11",
														"type": ""
													}
												],
												"src": "196:286:11"
											},
											{
												"body": {
													"nativeSrc": "582:92:11",
													"nodeType": "YulBlock",
													"src": "582:92:11",
													"statements": [
														{
															"nativeSrc": "592:26:11",
															"nodeType": "YulAssignment",
															"src": "592:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "604:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:11",
																		"nodeType": "YulLiteral",
																		"src": "615:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "600:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "600:3:11"
																},
																"nativeSrc": "600:18:11",
																"nodeType": "YulFunctionCall",
																"src": "600:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "592:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "592:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "634:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "634:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "659:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "652:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "652:6:11"
																				},
																				"nativeSrc": "652:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "652:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "645:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "645:6:11"
																		},
																		"nativeSrc": "645:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "645:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "627:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "627:6:11"
																},
																"nativeSrc": "627:41:11",
																"nodeType": "YulFunctionCall",
																"src": "627:41:11"
															},
															"nativeSrc": "627:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "627:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "487:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "551:9:11",
														"nodeType": "YulTypedName",
														"src": "551:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "562:6:11",
														"nodeType": "YulTypedName",
														"src": "562:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "573:4:11",
														"nodeType": "YulTypedName",
														"src": "573:4:11",
														"type": ""
													}
												],
												"src": "487:187:11"
											},
											{
												"body": {
													"nativeSrc": "728:124:11",
													"nodeType": "YulBlock",
													"src": "728:124:11",
													"statements": [
														{
															"nativeSrc": "738:29:11",
															"nodeType": "YulAssignment",
															"src": "738:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "760:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "760:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "747:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "747:12:11"
																},
																"nativeSrc": "747:20:11",
																"nodeType": "YulFunctionCall",
																"src": "747:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "738:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "830:16:11",
																"nodeType": "YulBlock",
																"src": "830:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:11",
																					"nodeType": "YulLiteral",
																					"src": "839:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "842:1:11",
																					"nodeType": "YulLiteral",
																					"src": "842:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "832:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:11"
																			},
																			"nativeSrc": "832:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "832:12:11"
																		},
																		"nativeSrc": "832:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "832:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "789:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "789:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "815:3:11",
																										"nodeType": "YulLiteral",
																										"src": "815:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "820:1:11",
																										"nodeType": "YulLiteral",
																										"src": "820:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "811:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "811:3:11"
																								},
																								"nativeSrc": "811:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "811:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "824:1:11",
																								"nodeType": "YulLiteral",
																								"src": "824:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "807:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "807:3:11"
																						},
																						"nativeSrc": "807:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "807:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "796:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "796:3:11"
																				},
																				"nativeSrc": "796:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "796:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "786:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "786:2:11"
																		},
																		"nativeSrc": "786:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "786:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "779:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "779:6:11"
																},
																"nativeSrc": "779:50:11",
																"nodeType": "YulFunctionCall",
																"src": "779:50:11"
															},
															"nativeSrc": "776:70:11",
															"nodeType": "YulIf",
															"src": "776:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "679:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "707:6:11",
														"nodeType": "YulTypedName",
														"src": "707:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "718:5:11",
														"nodeType": "YulTypedName",
														"src": "718:5:11",
														"type": ""
													}
												],
												"src": "679:173:11"
											},
											{
												"body": {
													"nativeSrc": "961:316:11",
													"nodeType": "YulBlock",
													"src": "961:316:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1007:16:11",
																"nodeType": "YulBlock",
																"src": "1007:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1016:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1016:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1019:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1019:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1009:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:11"
																			},
																			"nativeSrc": "1009:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1009:12:11"
																		},
																		"nativeSrc": "1009:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1009:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "982:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "982:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "991:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "991:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "978:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:11"
																		},
																		"nativeSrc": "978:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "978:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1003:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1003:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "974:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:11"
																},
																"nativeSrc": "974:32:11",
																"nodeType": "YulFunctionCall",
																"src": "974:32:11"
															},
															"nativeSrc": "971:52:11",
															"nodeType": "YulIf",
															"src": "971:52:11"
														},
														{
															"nativeSrc": "1032:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1032:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1045:1:11",
																"nodeType": "YulLiteral",
																"src": "1045:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1036:5:11",
																	"nodeType": "YulTypedName",
																	"src": "1036:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1055:32:11",
															"nodeType": "YulAssignment",
															"src": "1055:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1077:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1077:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1064:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1064:12:11"
																},
																"nativeSrc": "1064:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1064:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1055:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1055:5:11"
																}
															]
														},
														{
															"nativeSrc": "1096:15:11",
															"nodeType": "YulAssignment",
															"src": "1096:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "1106:5:11",
																"nodeType": "YulIdentifier",
																"src": "1106:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1096:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1096:6:11"
																}
															]
														},
														{
															"nativeSrc": "1120:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1120:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1135:1:11",
																"nodeType": "YulLiteral",
																"src": "1135:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1124:7:11",
																	"nodeType": "YulTypedName",
																	"src": "1124:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1145:43:11",
															"nodeType": "YulAssignment",
															"src": "1145:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1173:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1173:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1184:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1184:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1169:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1169:3:11"
																		},
																		"nativeSrc": "1169:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1169:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1156:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1156:12:11"
																},
																"nativeSrc": "1156:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1156:32:11"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1145:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1145:7:11"
																}
															]
														},
														{
															"nativeSrc": "1197:17:11",
															"nodeType": "YulAssignment",
															"src": "1197:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "1207:7:11",
																"nodeType": "YulIdentifier",
																"src": "1207:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1197:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:11"
																}
															]
														},
														{
															"nativeSrc": "1223:48:11",
															"nodeType": "YulAssignment",
															"src": "1223:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1256:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1256:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1267:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1267:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1252:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1252:3:11"
																		},
																		"nativeSrc": "1252:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1252:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1233:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1233:18:11"
																},
																"nativeSrc": "1233:38:11",
																"nodeType": "YulFunctionCall",
																"src": "1233:38:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1223:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1223:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nativeSrc": "857:420:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "911:9:11",
														"nodeType": "YulTypedName",
														"src": "911:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "922:7:11",
														"nodeType": "YulTypedName",
														"src": "922:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "934:6:11",
														"nodeType": "YulTypedName",
														"src": "934:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "942:6:11",
														"nodeType": "YulTypedName",
														"src": "942:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "950:6:11",
														"nodeType": "YulTypedName",
														"src": "950:6:11",
														"type": ""
													}
												],
												"src": "857:420:11"
											},
											{
												"body": {
													"nativeSrc": "1352:116:11",
													"nodeType": "YulBlock",
													"src": "1352:116:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1398:16:11",
																"nodeType": "YulBlock",
																"src": "1398:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1407:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1407:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1410:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1400:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1400:6:11"
																			},
																			"nativeSrc": "1400:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1400:12:11"
																		},
																		"nativeSrc": "1400:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1400:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1373:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1373:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1382:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1382:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1369:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1369:3:11"
																		},
																		"nativeSrc": "1369:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1369:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1394:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1394:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1365:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1365:3:11"
																},
																"nativeSrc": "1365:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1365:32:11"
															},
															"nativeSrc": "1362:52:11",
															"nodeType": "YulIf",
															"src": "1362:52:11"
														},
														{
															"nativeSrc": "1423:39:11",
															"nodeType": "YulAssignment",
															"src": "1423:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1452:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1433:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1433:18:11"
																},
																"nativeSrc": "1433:29:11",
																"nodeType": "YulFunctionCall",
																"src": "1433:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1423:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1423:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1282:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1318:9:11",
														"nodeType": "YulTypedName",
														"src": "1318:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1329:7:11",
														"nodeType": "YulTypedName",
														"src": "1329:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1341:6:11",
														"nodeType": "YulTypedName",
														"src": "1341:6:11",
														"type": ""
													}
												],
												"src": "1282:186:11"
											},
											{
												"body": {
													"nativeSrc": "1543:156:11",
													"nodeType": "YulBlock",
													"src": "1543:156:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1589:16:11",
																"nodeType": "YulBlock",
																"src": "1589:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1598:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1598:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1601:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1601:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1591:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1591:6:11"
																			},
																			"nativeSrc": "1591:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1591:12:11"
																		},
																		"nativeSrc": "1591:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1591:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1564:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1564:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1573:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1573:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1560:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1560:3:11"
																		},
																		"nativeSrc": "1560:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1560:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1585:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1585:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1556:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1556:3:11"
																},
																"nativeSrc": "1556:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1556:32:11"
															},
															"nativeSrc": "1553:52:11",
															"nodeType": "YulIf",
															"src": "1553:52:11"
														},
														{
															"nativeSrc": "1614:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1614:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1627:1:11",
																"nodeType": "YulLiteral",
																"src": "1627:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1618:5:11",
																	"nodeType": "YulTypedName",
																	"src": "1618:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1637:32:11",
															"nodeType": "YulAssignment",
															"src": "1637:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1659:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1659:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1646:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1646:12:11"
																},
																"nativeSrc": "1646:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1646:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1637:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1637:5:11"
																}
															]
														},
														{
															"nativeSrc": "1678:15:11",
															"nodeType": "YulAssignment",
															"src": "1678:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "1688:5:11",
																"nodeType": "YulIdentifier",
																"src": "1688:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1678:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1473:226:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1509:9:11",
														"nodeType": "YulTypedName",
														"src": "1509:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1520:7:11",
														"nodeType": "YulTypedName",
														"src": "1520:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1532:6:11",
														"nodeType": "YulTypedName",
														"src": "1532:6:11",
														"type": ""
													}
												],
												"src": "1473:226:11"
											},
											{
												"body": {
													"nativeSrc": "1825:420:11",
													"nodeType": "YulBlock",
													"src": "1825:420:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1872:16:11",
																"nodeType": "YulBlock",
																"src": "1872:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1881:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1881:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1874:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:11"
																			},
																			"nativeSrc": "1874:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1874:12:11"
																		},
																		"nativeSrc": "1874:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1846:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1846:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1855:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1855:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1842:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1842:3:11"
																		},
																		"nativeSrc": "1842:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1842:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:3:11",
																		"nodeType": "YulLiteral",
																		"src": "1867:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1838:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1838:3:11"
																},
																"nativeSrc": "1838:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1838:33:11"
															},
															"nativeSrc": "1835:53:11",
															"nodeType": "YulIf",
															"src": "1835:53:11"
														},
														{
															"nativeSrc": "1897:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1897:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1910:1:11",
																"nodeType": "YulLiteral",
																"src": "1910:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1901:5:11",
																	"nodeType": "YulTypedName",
																	"src": "1901:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1920:32:11",
															"nodeType": "YulAssignment",
															"src": "1920:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1942:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1942:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1929:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1929:12:11"
																},
																"nativeSrc": "1929:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1929:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1920:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1920:5:11"
																}
															]
														},
														{
															"nativeSrc": "1961:15:11",
															"nodeType": "YulAssignment",
															"src": "1961:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "1971:5:11",
																"nodeType": "YulIdentifier",
																"src": "1971:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1961:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:11"
																}
															]
														},
														{
															"nativeSrc": "1985:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1985:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2000:1:11",
																"nodeType": "YulLiteral",
																"src": "2000:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1989:7:11",
																	"nodeType": "YulTypedName",
																	"src": "1989:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2010:43:11",
															"nodeType": "YulAssignment",
															"src": "2010:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2038:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2038:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2049:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2049:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2034:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2034:3:11"
																		},
																		"nativeSrc": "2034:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2034:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2021:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2021:12:11"
																},
																"nativeSrc": "2021:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2021:32:11"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2010:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2010:7:11"
																}
															]
														},
														{
															"nativeSrc": "2062:17:11",
															"nodeType": "YulAssignment",
															"src": "2062:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "2072:7:11",
																"nodeType": "YulIdentifier",
																"src": "2072:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2062:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:11"
																}
															]
														},
														{
															"nativeSrc": "2088:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2088:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2103:1:11",
																"nodeType": "YulLiteral",
																"src": "2103:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2092:7:11",
																	"nodeType": "YulTypedName",
																	"src": "2092:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2113:43:11",
															"nodeType": "YulAssignment",
															"src": "2113:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2141:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2141:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2152:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2152:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2137:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2137:3:11"
																		},
																		"nativeSrc": "2137:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2137:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2124:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2124:12:11"
																},
																"nativeSrc": "2124:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2124:32:11"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2113:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2113:7:11"
																}
															]
														},
														{
															"nativeSrc": "2165:17:11",
															"nodeType": "YulAssignment",
															"src": "2165:17:11",
															"value": {
																"name": "value_2",
																"nativeSrc": "2175:7:11",
																"nodeType": "YulIdentifier",
																"src": "2175:7:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2165:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:11"
																}
															]
														},
														{
															"nativeSrc": "2191:48:11",
															"nodeType": "YulAssignment",
															"src": "2191:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2224:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2224:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2235:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2235:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:11"
																		},
																		"nativeSrc": "2220:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2201:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2201:18:11"
																},
																"nativeSrc": "2201:38:11",
																"nodeType": "YulFunctionCall",
																"src": "2201:38:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2191:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2191:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_address",
												"nativeSrc": "1704:541:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1767:9:11",
														"nodeType": "YulTypedName",
														"src": "1767:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1778:7:11",
														"nodeType": "YulTypedName",
														"src": "1778:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1790:6:11",
														"nodeType": "YulTypedName",
														"src": "1790:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1798:6:11",
														"nodeType": "YulTypedName",
														"src": "1798:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1806:6:11",
														"nodeType": "YulTypedName",
														"src": "1806:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1814:6:11",
														"nodeType": "YulTypedName",
														"src": "1814:6:11",
														"type": ""
													}
												],
												"src": "1704:541:11"
											},
											{
												"body": {
													"nativeSrc": "2320:156:11",
													"nodeType": "YulBlock",
													"src": "2320:156:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:11",
																"nodeType": "YulBlock",
																"src": "2366:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:11"
																			},
																			"nativeSrc": "2368:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:11"
																		},
																		"nativeSrc": "2368:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2341:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2341:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2350:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2350:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2337:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:11"
																		},
																		"nativeSrc": "2337:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2362:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2362:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2333:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2333:3:11"
																},
																"nativeSrc": "2333:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2333:32:11"
															},
															"nativeSrc": "2330:52:11",
															"nodeType": "YulIf",
															"src": "2330:52:11"
														},
														{
															"nativeSrc": "2391:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2391:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2404:1:11",
																"nodeType": "YulLiteral",
																"src": "2404:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2395:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2395:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2414:32:11",
															"nodeType": "YulAssignment",
															"src": "2414:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2436:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2436:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2423:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2423:12:11"
																},
																"nativeSrc": "2423:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2423:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2414:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2414:5:11"
																}
															]
														},
														{
															"nativeSrc": "2455:15:11",
															"nodeType": "YulAssignment",
															"src": "2455:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2465:5:11",
																"nodeType": "YulIdentifier",
																"src": "2465:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2455:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2455:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2250:226:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2286:9:11",
														"nodeType": "YulTypedName",
														"src": "2286:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2297:7:11",
														"nodeType": "YulTypedName",
														"src": "2297:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2309:6:11",
														"nodeType": "YulTypedName",
														"src": "2309:6:11",
														"type": ""
													}
												],
												"src": "2250:226:11"
											},
											{
												"body": {
													"nativeSrc": "2582:76:11",
													"nodeType": "YulBlock",
													"src": "2582:76:11",
													"statements": [
														{
															"nativeSrc": "2592:26:11",
															"nodeType": "YulAssignment",
															"src": "2592:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2604:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2604:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2615:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2615:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2600:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:11"
																},
																"nativeSrc": "2600:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2600:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2592:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2592:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2634:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2634:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2645:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2645:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2627:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2627:6:11"
																},
																"nativeSrc": "2627:25:11",
																"nodeType": "YulFunctionCall",
																"src": "2627:25:11"
															},
															"nativeSrc": "2627:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "2627:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2481:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2551:9:11",
														"nodeType": "YulTypedName",
														"src": "2551:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2562:6:11",
														"nodeType": "YulTypedName",
														"src": "2562:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2573:4:11",
														"nodeType": "YulTypedName",
														"src": "2573:4:11",
														"type": ""
													}
												],
												"src": "2481:177:11"
											},
											{
												"body": {
													"nativeSrc": "2750:213:11",
													"nodeType": "YulBlock",
													"src": "2750:213:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2796:16:11",
																"nodeType": "YulBlock",
																"src": "2796:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2805:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2805:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2808:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2808:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2798:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2798:6:11"
																			},
																			"nativeSrc": "2798:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2798:12:11"
																		},
																		"nativeSrc": "2798:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2798:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2771:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2771:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2780:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2780:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2767:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:11"
																		},
																		"nativeSrc": "2767:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2792:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2792:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2763:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2763:3:11"
																},
																"nativeSrc": "2763:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2763:32:11"
															},
															"nativeSrc": "2760:52:11",
															"nodeType": "YulIf",
															"src": "2760:52:11"
														},
														{
															"nativeSrc": "2821:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2821:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2834:1:11",
																"nodeType": "YulLiteral",
																"src": "2834:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2825:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2825:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2844:32:11",
															"nodeType": "YulAssignment",
															"src": "2844:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2866:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2866:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2853:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2853:12:11"
																},
																"nativeSrc": "2853:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2853:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2844:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2844:5:11"
																}
															]
														},
														{
															"nativeSrc": "2885:15:11",
															"nodeType": "YulAssignment",
															"src": "2885:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:11",
																"nodeType": "YulIdentifier",
																"src": "2895:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2885:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2885:6:11"
																}
															]
														},
														{
															"nativeSrc": "2909:48:11",
															"nodeType": "YulAssignment",
															"src": "2909:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2942:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2942:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2953:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2953:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2938:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2938:3:11"
																		},
																		"nativeSrc": "2938:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2938:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2919:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2919:18:11"
																},
																"nativeSrc": "2919:38:11",
																"nodeType": "YulFunctionCall",
																"src": "2919:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2909:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2909:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2663:300:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2708:9:11",
														"nodeType": "YulTypedName",
														"src": "2708:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2719:7:11",
														"nodeType": "YulTypedName",
														"src": "2719:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2731:6:11",
														"nodeType": "YulTypedName",
														"src": "2731:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2739:6:11",
														"nodeType": "YulTypedName",
														"src": "2739:6:11",
														"type": ""
													}
												],
												"src": "2663:300:11"
											},
											{
												"body": {
													"nativeSrc": "3069:102:11",
													"nodeType": "YulBlock",
													"src": "3069:102:11",
													"statements": [
														{
															"nativeSrc": "3079:26:11",
															"nodeType": "YulAssignment",
															"src": "3079:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3091:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3091:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3102:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3102:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3087:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3087:3:11"
																},
																"nativeSrc": "3087:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3087:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3079:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3079:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3136:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3136:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3152:3:11",
																								"nodeType": "YulLiteral",
																								"src": "3152:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3157:1:11",
																								"nodeType": "YulLiteral",
																								"src": "3157:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3148:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3148:3:11"
																						},
																						"nativeSrc": "3148:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3148:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3161:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3161:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3144:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3144:3:11"
																				},
																				"nativeSrc": "3144:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3144:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3132:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3132:3:11"
																		},
																		"nativeSrc": "3132:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3132:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:11"
																},
																"nativeSrc": "3114:51:11",
																"nodeType": "YulFunctionCall",
																"src": "3114:51:11"
															},
															"nativeSrc": "3114:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "3114:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2968:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3038:9:11",
														"nodeType": "YulTypedName",
														"src": "3038:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3049:6:11",
														"nodeType": "YulTypedName",
														"src": "3049:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3060:4:11",
														"nodeType": "YulTypedName",
														"src": "3060:4:11",
														"type": ""
													}
												],
												"src": "2968:203:11"
											},
											{
												"body": {
													"nativeSrc": "3263:213:11",
													"nodeType": "YulBlock",
													"src": "3263:213:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3309:16:11",
																"nodeType": "YulBlock",
																"src": "3309:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3318:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3318:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3321:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3321:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3311:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3311:6:11"
																			},
																			"nativeSrc": "3311:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3311:12:11"
																		},
																		"nativeSrc": "3311:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3311:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3284:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3284:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3293:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3293:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3280:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:11"
																		},
																		"nativeSrc": "3280:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3280:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3305:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3305:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3276:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3276:3:11"
																},
																"nativeSrc": "3276:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3276:32:11"
															},
															"nativeSrc": "3273:52:11",
															"nodeType": "YulIf",
															"src": "3273:52:11"
														},
														{
															"nativeSrc": "3334:39:11",
															"nodeType": "YulAssignment",
															"src": "3334:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3363:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3363:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3344:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "3344:18:11"
																},
																"nativeSrc": "3344:29:11",
																"nodeType": "YulFunctionCall",
																"src": "3344:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3334:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:11"
																}
															]
														},
														{
															"nativeSrc": "3382:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3382:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3395:1:11",
																"nodeType": "YulLiteral",
																"src": "3395:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3386:5:11",
																	"nodeType": "YulTypedName",
																	"src": "3386:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3405:41:11",
															"nodeType": "YulAssignment",
															"src": "3405:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3431:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3431:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3442:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3442:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3427:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3427:3:11"
																		},
																		"nativeSrc": "3427:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3427:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3414:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3414:12:11"
																},
																"nativeSrc": "3414:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3414:32:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3405:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3405:5:11"
																}
															]
														},
														{
															"nativeSrc": "3455:15:11",
															"nodeType": "YulAssignment",
															"src": "3455:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "3465:5:11",
																"nodeType": "YulIdentifier",
																"src": "3465:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3455:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3176:300:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3221:9:11",
														"nodeType": "YulTypedName",
														"src": "3221:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3232:7:11",
														"nodeType": "YulTypedName",
														"src": "3232:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3244:6:11",
														"nodeType": "YulTypedName",
														"src": "3244:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3252:6:11",
														"nodeType": "YulTypedName",
														"src": "3252:6:11",
														"type": ""
													}
												],
												"src": "3176:300:11"
											},
											{
												"body": {
													"nativeSrc": "3599:102:11",
													"nodeType": "YulBlock",
													"src": "3599:102:11",
													"statements": [
														{
															"nativeSrc": "3609:26:11",
															"nodeType": "YulAssignment",
															"src": "3609:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3621:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3621:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3632:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3632:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3617:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:11"
																},
																"nativeSrc": "3617:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3617:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3609:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3609:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3651:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3651:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3666:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3666:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3682:3:11",
																								"nodeType": "YulLiteral",
																								"src": "3682:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3687:1:11",
																								"nodeType": "YulLiteral",
																								"src": "3687:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3678:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3678:3:11"
																						},
																						"nativeSrc": "3678:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3678:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3691:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3691:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3674:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3674:3:11"
																				},
																				"nativeSrc": "3674:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3674:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3662:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3662:3:11"
																		},
																		"nativeSrc": "3662:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3662:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3644:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3644:6:11"
																},
																"nativeSrc": "3644:51:11",
																"nodeType": "YulFunctionCall",
																"src": "3644:51:11"
															},
															"nativeSrc": "3644:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "3644:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPicweUSD_$697__to_t_address__fromStack_reversed",
												"nativeSrc": "3481:220:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3568:9:11",
														"nodeType": "YulTypedName",
														"src": "3568:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3579:6:11",
														"nodeType": "YulTypedName",
														"src": "3579:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3590:4:11",
														"nodeType": "YulTypedName",
														"src": "3590:4:11",
														"type": ""
													}
												],
												"src": "3481:220:11"
											},
											{
												"body": {
													"nativeSrc": "3828:102:11",
													"nodeType": "YulBlock",
													"src": "3828:102:11",
													"statements": [
														{
															"nativeSrc": "3838:26:11",
															"nodeType": "YulAssignment",
															"src": "3838:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3850:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3850:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3861:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3861:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3846:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3846:3:11"
																},
																"nativeSrc": "3846:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3846:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3838:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3838:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3880:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3880:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3895:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3895:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3911:3:11",
																								"nodeType": "YulLiteral",
																								"src": "3911:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3916:1:11",
																								"nodeType": "YulLiteral",
																								"src": "3916:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3907:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3907:3:11"
																						},
																						"nativeSrc": "3907:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3907:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3920:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3920:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3903:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3903:3:11"
																				},
																				"nativeSrc": "3903:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3903:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3891:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3891:3:11"
																		},
																		"nativeSrc": "3891:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3891:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3873:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:11"
																},
																"nativeSrc": "3873:51:11",
																"nodeType": "YulFunctionCall",
																"src": "3873:51:11"
															},
															"nativeSrc": "3873:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "3873:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMainContract_$677__to_t_address__fromStack_reversed",
												"nativeSrc": "3706:224:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3797:9:11",
														"nodeType": "YulTypedName",
														"src": "3797:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3808:6:11",
														"nodeType": "YulTypedName",
														"src": "3808:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3819:4:11",
														"nodeType": "YulTypedName",
														"src": "3819:4:11",
														"type": ""
													}
												],
												"src": "3706:224:11"
											},
											{
												"body": {
													"nativeSrc": "4109:238:11",
													"nodeType": "YulBlock",
													"src": "4109:238:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4126:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4126:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4137:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4137:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4119:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4119:6:11"
																},
																"nativeSrc": "4119:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4119:21:11"
															},
															"nativeSrc": "4119:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4119:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4160:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4160:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4171:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4171:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4156:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4156:3:11"
																		},
																		"nativeSrc": "4156:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4156:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4176:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4176:2:11",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4149:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:11"
																},
																"nativeSrc": "4149:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4149:30:11"
															},
															"nativeSrc": "4149:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4149:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4199:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4199:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4210:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4210:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4195:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4195:3:11"
																		},
																		"nativeSrc": "4195:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4195:18:11"
																	},
																	{
																		"hexValue": "54617267657420636861696e206d75737420626520646966666572656e742066",
																		"kind": "string",
																		"nativeSrc": "4215:34:11",
																		"nodeType": "YulLiteral",
																		"src": "4215:34:11",
																		"type": "",
																		"value": "Target chain must be different f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4188:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4188:6:11"
																},
																"nativeSrc": "4188:62:11",
																"nodeType": "YulFunctionCall",
																"src": "4188:62:11"
															},
															"nativeSrc": "4188:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "4188:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4270:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4270:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4281:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4281:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4266:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4266:3:11"
																		},
																		"nativeSrc": "4266:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4266:18:11"
																	},
																	{
																		"hexValue": "726f6d20736f7572636520636861696e",
																		"kind": "string",
																		"nativeSrc": "4286:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4286:18:11",
																		"type": "",
																		"value": "rom source chain"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4259:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4259:6:11"
																},
																"nativeSrc": "4259:46:11",
																"nodeType": "YulFunctionCall",
																"src": "4259:46:11"
															},
															"nativeSrc": "4259:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "4259:46:11"
														},
														{
															"nativeSrc": "4314:27:11",
															"nodeType": "YulAssignment",
															"src": "4314:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4326:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4326:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4337:3:11",
																		"nodeType": "YulLiteral",
																		"src": "4337:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4322:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4322:3:11"
																},
																"nativeSrc": "4322:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4322:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4314:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4314:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cef094ec419a8d26f0cee0bf6ca74c12da636e63d15d6aaf6bbddcac6380238e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3935:412:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4086:9:11",
														"nodeType": "YulTypedName",
														"src": "4086:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4100:4:11",
														"nodeType": "YulTypedName",
														"src": "4100:4:11",
														"type": ""
													}
												],
												"src": "3935:412:11"
											},
											{
												"body": {
													"nativeSrc": "4526:224:11",
													"nodeType": "YulBlock",
													"src": "4526:224:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4543:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4543:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4554:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4554:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4536:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4536:6:11"
																},
																"nativeSrc": "4536:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4536:21:11"
															},
															"nativeSrc": "4536:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4536:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4577:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4577:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4588:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4588:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4573:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4573:3:11"
																		},
																		"nativeSrc": "4573:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4573:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4593:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4593:2:11",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4566:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4566:6:11"
																},
																"nativeSrc": "4566:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4566:30:11"
															},
															"nativeSrc": "4566:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4566:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4616:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4616:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4627:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4627:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4612:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4612:3:11"
																		},
																		"nativeSrc": "4612:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4612:18:11"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2067617366",
																		"kind": "string",
																		"nativeSrc": "4632:34:11",
																		"nodeType": "YulLiteral",
																		"src": "4632:34:11",
																		"type": "",
																		"value": "Amount must be greater than gasf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4605:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:11"
																},
																"nativeSrc": "4605:62:11",
																"nodeType": "YulFunctionCall",
																"src": "4605:62:11"
															},
															"nativeSrc": "4605:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "4605:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4687:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4698:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4698:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4683:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4683:3:11"
																		},
																		"nativeSrc": "4683:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4683:18:11"
																	},
																	{
																		"hexValue": "6565",
																		"kind": "string",
																		"nativeSrc": "4703:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4703:4:11",
																		"type": "",
																		"value": "ee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4676:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4676:6:11"
																},
																"nativeSrc": "4676:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4676:32:11"
															},
															"nativeSrc": "4676:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "4676:32:11"
														},
														{
															"nativeSrc": "4717:27:11",
															"nodeType": "YulAssignment",
															"src": "4717:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4729:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4729:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4740:3:11",
																		"nodeType": "YulLiteral",
																		"src": "4740:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4725:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:11"
																},
																"nativeSrc": "4725:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4725:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4717:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4717:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aeff32d03aaba9710cd0ccac9240922a41d8498df078f913fb5acb94e4444254__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4352:398:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4503:9:11",
														"nodeType": "YulTypedName",
														"src": "4503:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4517:4:11",
														"nodeType": "YulTypedName",
														"src": "4517:4:11",
														"type": ""
													}
												],
												"src": "4352:398:11"
											},
											{
												"body": {
													"nativeSrc": "4929:177:11",
													"nodeType": "YulBlock",
													"src": "4929:177:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4946:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4957:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4939:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4939:6:11"
																},
																"nativeSrc": "4939:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4939:21:11"
															},
															"nativeSrc": "4939:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4939:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4980:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4980:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4991:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4991:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4976:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4976:3:11"
																		},
																		"nativeSrc": "4976:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4996:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4996:2:11",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4969:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:11"
																},
																"nativeSrc": "4969:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4969:30:11"
															},
															"nativeSrc": "4969:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4969:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5019:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5019:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5030:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5030:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5015:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5015:3:11"
																		},
																		"nativeSrc": "5015:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:18:11"
																	},
																	{
																		"hexValue": "496e76616c69642074617267657420757365722061646472657373",
																		"kind": "string",
																		"nativeSrc": "5035:29:11",
																		"nodeType": "YulLiteral",
																		"src": "5035:29:11",
																		"type": "",
																		"value": "Invalid target user address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5008:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5008:6:11"
																},
																"nativeSrc": "5008:57:11",
																"nodeType": "YulFunctionCall",
																"src": "5008:57:11"
															},
															"nativeSrc": "5008:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "5008:57:11"
														},
														{
															"nativeSrc": "5074:26:11",
															"nodeType": "YulAssignment",
															"src": "5074:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5086:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5086:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5097:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5097:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5082:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5082:3:11"
																},
																"nativeSrc": "5082:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5082:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5074:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5074:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4755:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4906:9:11",
														"nodeType": "YulTypedName",
														"src": "4906:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4920:4:11",
														"nodeType": "YulTypedName",
														"src": "4920:4:11",
														"type": ""
													}
												],
												"src": "4755:351:11"
											},
											{
												"body": {
													"nativeSrc": "5143:95:11",
													"nodeType": "YulBlock",
													"src": "5143:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5160:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5160:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5167:3:11",
																				"nodeType": "YulLiteral",
																				"src": "5167:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5172:10:11",
																				"nodeType": "YulLiteral",
																				"src": "5172:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5163:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5163:3:11"
																		},
																		"nativeSrc": "5163:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5163:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5153:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5153:6:11"
																},
																"nativeSrc": "5153:31:11",
																"nodeType": "YulFunctionCall",
																"src": "5153:31:11"
															},
															"nativeSrc": "5153:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "5153:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5200:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5200:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5203:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5203:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5193:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5193:6:11"
																},
																"nativeSrc": "5193:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5193:15:11"
															},
															"nativeSrc": "5193:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5193:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5224:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5224:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5227:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5227:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5217:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:11"
																},
																"nativeSrc": "5217:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5217:15:11"
															},
															"nativeSrc": "5217:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5217:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5111:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5111:127:11"
											},
											{
												"body": {
													"nativeSrc": "5290:88:11",
													"nodeType": "YulBlock",
													"src": "5290:88:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5321:22:11",
																"nodeType": "YulBlock",
																"src": "5321:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5323:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5323:16:11"
																			},
																			"nativeSrc": "5323:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5323:18:11"
																		},
																		"nativeSrc": "5323:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5323:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5306:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5306:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5317:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5317:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5313:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5313:3:11"
																		},
																		"nativeSrc": "5313:6:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5313:6:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5303:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:11"
																},
																"nativeSrc": "5303:17:11",
																"nodeType": "YulFunctionCall",
																"src": "5303:17:11"
															},
															"nativeSrc": "5300:43:11",
															"nodeType": "YulIf",
															"src": "5300:43:11"
														},
														{
															"nativeSrc": "5352:20:11",
															"nodeType": "YulAssignment",
															"src": "5352:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5363:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5363:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5370:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5370:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5359:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5359:3:11"
																},
																"nativeSrc": "5359:13:11",
																"nodeType": "YulFunctionCall",
																"src": "5359:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5352:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5352:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "5243:135:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5272:5:11",
														"nodeType": "YulTypedName",
														"src": "5272:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5282:3:11",
														"nodeType": "YulTypedName",
														"src": "5282:3:11",
														"type": ""
													}
												],
												"src": "5243:135:11"
											},
											{
												"body": {
													"nativeSrc": "5557:173:11",
													"nodeType": "YulBlock",
													"src": "5557:173:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5574:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5574:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5585:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5585:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5567:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5567:6:11"
																},
																"nativeSrc": "5567:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5567:21:11"
															},
															"nativeSrc": "5567:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5567:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5608:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5608:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5619:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5619:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5604:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5604:3:11"
																		},
																		"nativeSrc": "5604:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5604:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5624:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5624:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5597:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5597:6:11"
																},
																"nativeSrc": "5597:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5597:30:11"
															},
															"nativeSrc": "5597:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5597:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:11"
																		},
																		"nativeSrc": "5643:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:11"
																	},
																	{
																		"hexValue": "5265717565737420494420616c72656164792075736564",
																		"kind": "string",
																		"nativeSrc": "5663:25:11",
																		"nodeType": "YulLiteral",
																		"src": "5663:25:11",
																		"type": "",
																		"value": "Request ID already used"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5636:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:11"
																},
																"nativeSrc": "5636:53:11",
																"nodeType": "YulFunctionCall",
																"src": "5636:53:11"
															},
															"nativeSrc": "5636:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "5636:53:11"
														},
														{
															"nativeSrc": "5698:26:11",
															"nodeType": "YulAssignment",
															"src": "5698:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5710:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5710:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5721:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5721:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5706:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5706:3:11"
																},
																"nativeSrc": "5706:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5706:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5698:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5698:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c0027d5c68fee309a77bba84ffa4dfde426eb995b832c16d5a3e1fecf1f55f3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5383:347:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5534:9:11",
														"nodeType": "YulTypedName",
														"src": "5534:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5548:4:11",
														"nodeType": "YulTypedName",
														"src": "5548:4:11",
														"type": ""
													}
												],
												"src": "5383:347:11"
											},
											{
												"body": {
													"nativeSrc": "5784:79:11",
													"nodeType": "YulBlock",
													"src": "5784:79:11",
													"statements": [
														{
															"nativeSrc": "5794:17:11",
															"nodeType": "YulAssignment",
															"src": "5794:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5806:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5806:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5809:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5809:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5802:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5802:3:11"
																},
																"nativeSrc": "5802:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5802:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5794:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5794:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5835:22:11",
																"nodeType": "YulBlock",
																"src": "5835:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5837:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5837:16:11"
																			},
																			"nativeSrc": "5837:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5837:18:11"
																		},
																		"nativeSrc": "5837:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5837:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5826:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5826:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5832:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5832:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5823:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5823:2:11"
																},
																"nativeSrc": "5823:11:11",
																"nodeType": "YulFunctionCall",
																"src": "5823:11:11"
															},
															"nativeSrc": "5820:37:11",
															"nodeType": "YulIf",
															"src": "5820:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5735:128:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5766:1:11",
														"nodeType": "YulTypedName",
														"src": "5766:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5769:1:11",
														"nodeType": "YulTypedName",
														"src": "5769:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5775:4:11",
														"nodeType": "YulTypedName",
														"src": "5775:4:11",
														"type": ""
													}
												],
												"src": "5735:128:11"
											},
											{
												"body": {
													"nativeSrc": "6025:214:11",
													"nodeType": "YulBlock",
													"src": "6025:214:11",
													"statements": [
														{
															"nativeSrc": "6035:26:11",
															"nodeType": "YulAssignment",
															"src": "6035:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6047:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6047:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6058:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6043:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6043:3:11"
																},
																"nativeSrc": "6043:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6043:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6035:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6035:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6077:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6077:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6092:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6092:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6108:3:11",
																								"nodeType": "YulLiteral",
																								"src": "6108:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6113:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6113:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6104:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6104:3:11"
																						},
																						"nativeSrc": "6104:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6104:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6117:1:11",
																						"nodeType": "YulLiteral",
																						"src": "6117:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6100:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6100:3:11"
																				},
																				"nativeSrc": "6100:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6100:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:11"
																		},
																		"nativeSrc": "6088:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6070:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6070:6:11"
																},
																"nativeSrc": "6070:51:11",
																"nodeType": "YulFunctionCall",
																"src": "6070:51:11"
															},
															"nativeSrc": "6070:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "6070:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6141:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6141:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6152:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6152:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6137:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6137:3:11"
																		},
																		"nativeSrc": "6137:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6137:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6161:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6161:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6177:3:11",
																								"nodeType": "YulLiteral",
																								"src": "6177:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6182:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6182:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6173:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6173:3:11"
																						},
																						"nativeSrc": "6173:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6173:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6186:1:11",
																						"nodeType": "YulLiteral",
																						"src": "6186:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6169:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6169:3:11"
																				},
																				"nativeSrc": "6169:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6169:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6157:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6157:3:11"
																		},
																		"nativeSrc": "6157:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6157:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6130:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6130:6:11"
																},
																"nativeSrc": "6130:60:11",
																"nodeType": "YulFunctionCall",
																"src": "6130:60:11"
															},
															"nativeSrc": "6130:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "6130:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6210:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6210:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6221:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6221:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6206:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6206:3:11"
																		},
																		"nativeSrc": "6206:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6206:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6226:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6226:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6199:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6199:6:11"
																},
																"nativeSrc": "6199:34:11",
																"nodeType": "YulFunctionCall",
																"src": "6199:34:11"
															},
															"nativeSrc": "6199:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "6199:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5868:371:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5978:9:11",
														"nodeType": "YulTypedName",
														"src": "5978:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5989:6:11",
														"nodeType": "YulTypedName",
														"src": "5989:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5997:6:11",
														"nodeType": "YulTypedName",
														"src": "5997:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6005:6:11",
														"nodeType": "YulTypedName",
														"src": "6005:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6016:4:11",
														"nodeType": "YulTypedName",
														"src": "6016:4:11",
														"type": ""
													}
												],
												"src": "5868:371:11"
											},
											{
												"body": {
													"nativeSrc": "6322:199:11",
													"nodeType": "YulBlock",
													"src": "6322:199:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6368:16:11",
																"nodeType": "YulBlock",
																"src": "6368:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6377:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6377:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6380:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6380:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6370:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6370:6:11"
																			},
																			"nativeSrc": "6370:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6370:12:11"
																		},
																		"nativeSrc": "6370:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6370:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6343:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6343:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6352:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6352:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6339:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6339:3:11"
																		},
																		"nativeSrc": "6339:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6339:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6364:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6364:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6335:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6335:3:11"
																},
																"nativeSrc": "6335:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6335:32:11"
															},
															"nativeSrc": "6332:52:11",
															"nodeType": "YulIf",
															"src": "6332:52:11"
														},
														{
															"nativeSrc": "6393:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6393:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6412:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6412:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6406:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6406:5:11"
																},
																"nativeSrc": "6406:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6406:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6397:5:11",
																	"nodeType": "YulTypedName",
																	"src": "6397:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6475:16:11",
																"nodeType": "YulBlock",
																"src": "6475:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6484:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6484:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6487:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6487:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6477:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6477:6:11"
																			},
																			"nativeSrc": "6477:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6477:12:11"
																		},
																		"nativeSrc": "6477:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6477:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6444:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6444:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "6465:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "6465:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "6458:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "6458:6:11"
																						},
																						"nativeSrc": "6458:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6458:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6451:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6451:6:11"
																				},
																				"nativeSrc": "6451:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6451:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6441:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6441:2:11"
																		},
																		"nativeSrc": "6441:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6441:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6434:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6434:6:11"
																},
																"nativeSrc": "6434:40:11",
																"nodeType": "YulFunctionCall",
																"src": "6434:40:11"
															},
															"nativeSrc": "6431:60:11",
															"nodeType": "YulIf",
															"src": "6431:60:11"
														},
														{
															"nativeSrc": "6500:15:11",
															"nodeType": "YulAssignment",
															"src": "6500:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "6510:5:11",
																"nodeType": "YulIdentifier",
																"src": "6510:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6500:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6500:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6244:277:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6288:9:11",
														"nodeType": "YulTypedName",
														"src": "6288:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6299:7:11",
														"nodeType": "YulTypedName",
														"src": "6299:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6311:6:11",
														"nodeType": "YulTypedName",
														"src": "6311:6:11",
														"type": ""
													}
												],
												"src": "6244:277:11"
											},
											{
												"body": {
													"nativeSrc": "6655:145:11",
													"nodeType": "YulBlock",
													"src": "6655:145:11",
													"statements": [
														{
															"nativeSrc": "6665:26:11",
															"nodeType": "YulAssignment",
															"src": "6665:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6677:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6677:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6688:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6688:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6673:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:11"
																},
																"nativeSrc": "6673:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6673:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6665:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6665:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6707:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6707:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6722:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6722:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6738:3:11",
																								"nodeType": "YulLiteral",
																								"src": "6738:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6743:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6743:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6734:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6734:3:11"
																						},
																						"nativeSrc": "6734:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6734:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6747:1:11",
																						"nodeType": "YulLiteral",
																						"src": "6747:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6730:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6730:3:11"
																				},
																				"nativeSrc": "6730:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6730:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6718:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6718:3:11"
																		},
																		"nativeSrc": "6718:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6718:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6700:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6700:6:11"
																},
																"nativeSrc": "6700:51:11",
																"nodeType": "YulFunctionCall",
																"src": "6700:51:11"
															},
															"nativeSrc": "6700:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "6700:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6771:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6771:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6782:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6782:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6767:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6767:3:11"
																		},
																		"nativeSrc": "6767:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6767:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6787:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6787:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6760:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6760:6:11"
																},
																"nativeSrc": "6760:34:11",
																"nodeType": "YulFunctionCall",
																"src": "6760:34:11"
															},
															"nativeSrc": "6760:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "6760:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6526:274:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6616:9:11",
														"nodeType": "YulTypedName",
														"src": "6616:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6627:6:11",
														"nodeType": "YulTypedName",
														"src": "6627:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:11",
														"nodeType": "YulTypedName",
														"src": "6635:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:11",
														"nodeType": "YulTypedName",
														"src": "6646:4:11",
														"type": ""
													}
												],
												"src": "6526:274:11"
											},
											{
												"body": {
													"nativeSrc": "6990:232:11",
													"nodeType": "YulBlock",
													"src": "6990:232:11",
													"statements": [
														{
															"nativeSrc": "7000:27:11",
															"nodeType": "YulAssignment",
															"src": "7000:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7012:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7012:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7023:3:11",
																		"nodeType": "YulLiteral",
																		"src": "7023:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7008:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7008:3:11"
																},
																"nativeSrc": "7008:19:11",
																"nodeType": "YulFunctionCall",
																"src": "7008:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7000:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7000:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7043:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7043:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7054:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7054:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7036:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:11"
																},
																"nativeSrc": "7036:25:11",
																"nodeType": "YulFunctionCall",
																"src": "7036:25:11"
															},
															"nativeSrc": "7036:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "7036:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7081:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7081:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7092:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7092:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7077:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7077:3:11"
																		},
																		"nativeSrc": "7077:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7077:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7097:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7097:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7070:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7070:6:11"
																},
																"nativeSrc": "7070:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7070:34:11"
															},
															"nativeSrc": "7070:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7070:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7124:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7124:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7135:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7135:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7120:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7120:3:11"
																		},
																		"nativeSrc": "7120:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7120:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7140:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7140:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7113:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7113:6:11"
																},
																"nativeSrc": "7113:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7113:34:11"
															},
															"nativeSrc": "7113:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7113:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7167:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7167:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7178:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7178:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7163:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7163:3:11"
																		},
																		"nativeSrc": "7163:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7163:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "7187:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7187:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7203:3:11",
																								"nodeType": "YulLiteral",
																								"src": "7203:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7208:1:11",
																								"nodeType": "YulLiteral",
																								"src": "7208:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7199:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "7199:3:11"
																						},
																						"nativeSrc": "7199:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "7199:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7212:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7212:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7195:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7195:3:11"
																				},
																				"nativeSrc": "7195:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7195:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7183:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:11"
																		},
																		"nativeSrc": "7183:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7183:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7156:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7156:6:11"
																},
																"nativeSrc": "7156:60:11",
																"nodeType": "YulFunctionCall",
																"src": "7156:60:11"
															},
															"nativeSrc": "7156:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "7156:60:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6805:417:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6935:9:11",
														"nodeType": "YulTypedName",
														"src": "6935:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6946:6:11",
														"nodeType": "YulTypedName",
														"src": "6946:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6954:6:11",
														"nodeType": "YulTypedName",
														"src": "6954:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6962:6:11",
														"nodeType": "YulTypedName",
														"src": "6962:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6970:6:11",
														"nodeType": "YulTypedName",
														"src": "6970:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6981:4:11",
														"nodeType": "YulTypedName",
														"src": "6981:4:11",
														"type": ""
													}
												],
												"src": "6805:417:11"
											},
											{
												"body": {
													"nativeSrc": "7401:238:11",
													"nodeType": "YulBlock",
													"src": "7401:238:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7418:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7418:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7429:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7429:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7411:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7411:6:11"
																},
																"nativeSrc": "7411:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7411:21:11"
															},
															"nativeSrc": "7411:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "7411:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7452:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7463:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7463:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7448:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7448:3:11"
																		},
																		"nativeSrc": "7448:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7448:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7468:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7468:2:11",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7441:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7441:6:11"
																},
																"nativeSrc": "7441:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7441:30:11"
															},
															"nativeSrc": "7441:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7441:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7502:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7502:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7487:3:11"
																		},
																		"nativeSrc": "7487:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7487:18:11"
																	},
																	{
																		"hexValue": "536f7572636520636861696e206d75737420626520646966666572656e742066",
																		"kind": "string",
																		"nativeSrc": "7507:34:11",
																		"nodeType": "YulLiteral",
																		"src": "7507:34:11",
																		"type": "",
																		"value": "Source chain must be different f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7480:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7480:6:11"
																},
																"nativeSrc": "7480:62:11",
																"nodeType": "YulFunctionCall",
																"src": "7480:62:11"
															},
															"nativeSrc": "7480:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "7480:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7562:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7562:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7573:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7573:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7558:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7558:3:11"
																		},
																		"nativeSrc": "7558:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7558:18:11"
																	},
																	{
																		"hexValue": "726f6d2074617267657420636861696e",
																		"kind": "string",
																		"nativeSrc": "7578:18:11",
																		"nodeType": "YulLiteral",
																		"src": "7578:18:11",
																		"type": "",
																		"value": "rom target chain"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7551:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7551:6:11"
																},
																"nativeSrc": "7551:46:11",
																"nodeType": "YulFunctionCall",
																"src": "7551:46:11"
															},
															"nativeSrc": "7551:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "7551:46:11"
														},
														{
															"nativeSrc": "7606:27:11",
															"nodeType": "YulAssignment",
															"src": "7606:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7618:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7618:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7629:3:11",
																		"nodeType": "YulLiteral",
																		"src": "7629:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7614:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7614:3:11"
																},
																"nativeSrc": "7614:19:11",
																"nodeType": "YulFunctionCall",
																"src": "7614:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7606:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7606:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6796245fd06a0237ef78dc4b92ce228b2aeb991d0e4ff61774e8fc1ef736486c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7227:412:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7378:9:11",
														"nodeType": "YulTypedName",
														"src": "7378:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7392:4:11",
														"nodeType": "YulTypedName",
														"src": "7392:4:11",
														"type": ""
													}
												],
												"src": "7227:412:11"
											},
											{
												"body": {
													"nativeSrc": "7818:179:11",
													"nodeType": "YulBlock",
													"src": "7818:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7835:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7835:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7846:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7846:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7828:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7828:6:11"
																},
																"nativeSrc": "7828:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7828:21:11"
															},
															"nativeSrc": "7828:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "7828:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7869:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7869:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7880:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7880:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7865:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7865:3:11"
																		},
																		"nativeSrc": "7865:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7865:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7885:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7885:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7858:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7858:6:11"
																},
																"nativeSrc": "7858:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7858:30:11"
															},
															"nativeSrc": "7858:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7858:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7908:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7908:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7919:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7919:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7904:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7904:3:11"
																		},
																		"nativeSrc": "7904:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7904:18:11"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "7924:31:11",
																		"nodeType": "YulLiteral",
																		"src": "7924:31:11",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7897:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7897:6:11"
																},
																"nativeSrc": "7897:59:11",
																"nodeType": "YulFunctionCall",
																"src": "7897:59:11"
															},
															"nativeSrc": "7897:59:11",
															"nodeType": "YulExpressionStatement",
															"src": "7897:59:11"
														},
														{
															"nativeSrc": "7965:26:11",
															"nodeType": "YulAssignment",
															"src": "7965:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7977:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7977:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7988:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7988:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7973:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7973:3:11"
																},
																"nativeSrc": "7973:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7973:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7965:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7965:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7644:353:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7795:9:11",
														"nodeType": "YulTypedName",
														"src": "7795:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7809:4:11",
														"nodeType": "YulTypedName",
														"src": "7809:4:11",
														"type": ""
													}
												],
												"src": "7644:353:11"
											},
											{
												"body": {
													"nativeSrc": "8176:175:11",
													"nodeType": "YulBlock",
													"src": "8176:175:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8193:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8193:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8204:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8204:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8186:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8186:6:11"
																},
																"nativeSrc": "8186:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8186:21:11"
															},
															"nativeSrc": "8186:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8186:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8227:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8227:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8238:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8238:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8223:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8223:3:11"
																		},
																		"nativeSrc": "8223:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8223:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8243:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8243:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8216:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:11"
																},
																"nativeSrc": "8216:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8216:30:11"
															},
															"nativeSrc": "8216:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8216:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8266:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8266:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8277:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8277:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8262:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8262:3:11"
																		},
																		"nativeSrc": "8262:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8262:18:11"
																	},
																	{
																		"hexValue": "537461626c65636f696e206e6f742072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "8282:27:11",
																		"nodeType": "YulLiteral",
																		"src": "8282:27:11",
																		"type": "",
																		"value": "Stablecoin not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8255:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8255:6:11"
																},
																"nativeSrc": "8255:55:11",
																"nodeType": "YulFunctionCall",
																"src": "8255:55:11"
															},
															"nativeSrc": "8255:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "8255:55:11"
														},
														{
															"nativeSrc": "8319:26:11",
															"nodeType": "YulAssignment",
															"src": "8319:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8331:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8331:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8342:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8342:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8327:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8327:3:11"
																},
																"nativeSrc": "8327:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8327:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8319:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8319:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8002:349:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8153:9:11",
														"nodeType": "YulTypedName",
														"src": "8153:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8167:4:11",
														"nodeType": "YulTypedName",
														"src": "8167:4:11",
														"type": ""
													}
												],
												"src": "8002:349:11"
											},
											{
												"body": {
													"nativeSrc": "8435:194:11",
													"nodeType": "YulBlock",
													"src": "8435:194:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8481:16:11",
																"nodeType": "YulBlock",
																"src": "8481:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8490:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8490:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8493:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8493:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8483:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8483:6:11"
																			},
																			"nativeSrc": "8483:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8483:12:11"
																		},
																		"nativeSrc": "8483:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8483:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8456:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8456:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8465:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8465:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8452:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8452:3:11"
																		},
																		"nativeSrc": "8452:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8452:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8477:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8477:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8448:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8448:3:11"
																},
																"nativeSrc": "8448:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8448:32:11"
															},
															"nativeSrc": "8445:52:11",
															"nodeType": "YulIf",
															"src": "8445:52:11"
														},
														{
															"nativeSrc": "8506:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8506:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8525:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8525:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8519:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8519:5:11"
																},
																"nativeSrc": "8519:16:11",
																"nodeType": "YulFunctionCall",
																"src": "8519:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8510:5:11",
																	"nodeType": "YulTypedName",
																	"src": "8510:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8583:16:11",
																"nodeType": "YulBlock",
																"src": "8583:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8592:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8592:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8595:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8595:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8585:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8585:6:11"
																			},
																			"nativeSrc": "8585:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8585:12:11"
																		},
																		"nativeSrc": "8585:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8557:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8557:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8568:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "8568:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8575:4:11",
																						"nodeType": "YulLiteral",
																						"src": "8575:4:11",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "8564:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8564:3:11"
																				},
																				"nativeSrc": "8564:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8564:16:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8554:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8554:2:11"
																		},
																		"nativeSrc": "8554:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8554:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8547:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8547:6:11"
																},
																"nativeSrc": "8547:35:11",
																"nodeType": "YulFunctionCall",
																"src": "8547:35:11"
															},
															"nativeSrc": "8544:55:11",
															"nodeType": "YulIf",
															"src": "8544:55:11"
														},
														{
															"nativeSrc": "8608:15:11",
															"nodeType": "YulAssignment",
															"src": "8608:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "8618:5:11",
																"nodeType": "YulIdentifier",
																"src": "8618:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8608:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "8356:273:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8401:9:11",
														"nodeType": "YulTypedName",
														"src": "8401:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8412:7:11",
														"nodeType": "YulTypedName",
														"src": "8412:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8424:6:11",
														"nodeType": "YulTypedName",
														"src": "8424:6:11",
														"type": ""
													}
												],
												"src": "8356:273:11"
											},
											{
												"body": {
													"nativeSrc": "8808:176:11",
													"nodeType": "YulBlock",
													"src": "8808:176:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8825:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8825:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8836:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8836:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8818:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8818:6:11"
																},
																"nativeSrc": "8818:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8818:21:11"
															},
															"nativeSrc": "8818:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8818:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8859:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8859:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8870:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8870:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8855:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8855:3:11"
																		},
																		"nativeSrc": "8855:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8855:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8875:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8875:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8848:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8848:6:11"
																},
																"nativeSrc": "8848:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8848:30:11"
															},
															"nativeSrc": "8848:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8848:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8898:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8898:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8909:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8909:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:11"
																		},
																		"nativeSrc": "8894:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:18:11"
																	},
																	{
																		"hexValue": "537461626c65636f696e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8914:28:11",
																		"nodeType": "YulLiteral",
																		"src": "8914:28:11",
																		"type": "",
																		"value": "Stablecoin transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8887:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8887:6:11"
																},
																"nativeSrc": "8887:56:11",
																"nodeType": "YulFunctionCall",
																"src": "8887:56:11"
															},
															"nativeSrc": "8887:56:11",
															"nodeType": "YulExpressionStatement",
															"src": "8887:56:11"
														},
														{
															"nativeSrc": "8952:26:11",
															"nodeType": "YulAssignment",
															"src": "8952:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8964:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8964:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8975:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8975:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8960:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8960:3:11"
																},
																"nativeSrc": "8960:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8960:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8952:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8952:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8634:350:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8785:9:11",
														"nodeType": "YulTypedName",
														"src": "8785:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8799:4:11",
														"nodeType": "YulTypedName",
														"src": "8799:4:11",
														"type": ""
													}
												],
												"src": "8634:350:11"
											},
											{
												"body": {
													"nativeSrc": "9118:119:11",
													"nodeType": "YulBlock",
													"src": "9118:119:11",
													"statements": [
														{
															"nativeSrc": "9128:26:11",
															"nodeType": "YulAssignment",
															"src": "9128:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9140:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9140:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9151:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9151:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9136:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9136:3:11"
																},
																"nativeSrc": "9136:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9136:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9128:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9128:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9170:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9170:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9181:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9181:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9163:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9163:6:11"
																},
																"nativeSrc": "9163:25:11",
																"nodeType": "YulFunctionCall",
																"src": "9163:25:11"
															},
															"nativeSrc": "9163:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "9163:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9208:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9208:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9219:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9219:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9204:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9204:3:11"
																		},
																		"nativeSrc": "9204:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9204:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9224:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9224:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9197:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9197:6:11"
																},
																"nativeSrc": "9197:34:11",
																"nodeType": "YulFunctionCall",
																"src": "9197:34:11"
															},
															"nativeSrc": "9197:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "9197:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8989:248:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9079:9:11",
														"nodeType": "YulTypedName",
														"src": "9079:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9090:6:11",
														"nodeType": "YulTypedName",
														"src": "9090:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9098:6:11",
														"nodeType": "YulTypedName",
														"src": "9098:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9109:4:11",
														"nodeType": "YulTypedName",
														"src": "9109:4:11",
														"type": ""
													}
												],
												"src": "8989:248:11"
											},
											{
												"body": {
													"nativeSrc": "9289:104:11",
													"nodeType": "YulBlock",
													"src": "9289:104:11",
													"statements": [
														{
															"nativeSrc": "9299:39:11",
															"nodeType": "YulAssignment",
															"src": "9299:39:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "9315:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "9315:1:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9318:4:11",
																				"nodeType": "YulLiteral",
																				"src": "9318:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9311:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9311:3:11"
																		},
																		"nativeSrc": "9311:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9311:12:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "9329:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "9329:1:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9332:4:11",
																				"nodeType": "YulLiteral",
																				"src": "9332:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9325:3:11"
																		},
																		"nativeSrc": "9325:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9325:12:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9307:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9307:3:11"
																},
																"nativeSrc": "9307:31:11",
																"nodeType": "YulFunctionCall",
																"src": "9307:31:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9299:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9299:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9365:22:11",
																"nodeType": "YulBlock",
																"src": "9365:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9367:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9367:16:11"
																			},
																			"nativeSrc": "9367:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9367:18:11"
																		},
																		"nativeSrc": "9367:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9367:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9353:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9353:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9359:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9359:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9350:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9350:2:11"
																},
																"nativeSrc": "9350:14:11",
																"nodeType": "YulFunctionCall",
																"src": "9350:14:11"
															},
															"nativeSrc": "9347:40:11",
															"nodeType": "YulIf",
															"src": "9347:40:11"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "9242:151:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9271:1:11",
														"nodeType": "YulTypedName",
														"src": "9271:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9274:1:11",
														"nodeType": "YulTypedName",
														"src": "9274:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9280:4:11",
														"nodeType": "YulTypedName",
														"src": "9280:4:11",
														"type": ""
													}
												],
												"src": "9242:151:11"
											},
											{
												"body": {
													"nativeSrc": "9467:306:11",
													"nodeType": "YulBlock",
													"src": "9467:306:11",
													"statements": [
														{
															"nativeSrc": "9477:10:11",
															"nodeType": "YulAssignment",
															"src": "9477:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "9486:1:11",
																"nodeType": "YulLiteral",
																"src": "9486:1:11",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9477:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9477:5:11"
																}
															]
														},
														{
															"nativeSrc": "9496:13:11",
															"nodeType": "YulAssignment",
															"src": "9496:13:11",
															"value": {
																"name": "_base",
																"nativeSrc": "9504:5:11",
																"nodeType": "YulIdentifier",
																"src": "9504:5:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9496:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9496:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9554:213:11",
																"nodeType": "YulBlock",
																"src": "9554:213:11",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9596:22:11",
																			"nodeType": "YulBlock",
																			"src": "9596:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9598:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "9598:16:11"
																						},
																						"nativeSrc": "9598:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9598:18:11"
																					},
																					"nativeSrc": "9598:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "9598:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9574:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "9574:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9584:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9584:3:11"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9589:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "9589:4:11"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9580:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9580:3:11"
																					},
																					"nativeSrc": "9580:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9580:14:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9571:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "9571:2:11"
																			},
																			"nativeSrc": "9571:24:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9571:24:11"
																		},
																		"nativeSrc": "9568:50:11",
																		"nodeType": "YulIf",
																		"src": "9568:50:11"
																	},
																	{
																		"body": {
																			"nativeSrc": "9651:29:11",
																			"nodeType": "YulBlock",
																			"src": "9651:29:11",
																			"statements": [
																				{
																					"nativeSrc": "9653:25:11",
																					"nodeType": "YulAssignment",
																					"src": "9653:25:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "9666:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "9666:5:11"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "9673:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "9673:4:11"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "9662:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9662:3:11"
																						},
																						"nativeSrc": "9662:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9662:16:11"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "9653:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "9653:5:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9638:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "9638:8:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9648:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9648:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9634:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "9634:3:11"
																			},
																			"nativeSrc": "9634:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9634:16:11"
																		},
																		"nativeSrc": "9631:49:11",
																		"nodeType": "YulIf",
																		"src": "9631:49:11"
																	},
																	{
																		"nativeSrc": "9693:23:11",
																		"nodeType": "YulAssignment",
																		"src": "9693:23:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9705:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "9705:4:11"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9711:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "9711:4:11"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9701:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "9701:3:11"
																			},
																			"nativeSrc": "9701:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9701:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9693:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9693:4:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9729:28:11",
																		"nodeType": "YulAssignment",
																		"src": "9729:28:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9745:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9745:1:11",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9748:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "9748:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "9741:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "9741:3:11"
																			},
																			"nativeSrc": "9741:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9741:16:11"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9729:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "9729:8:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9529:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "9529:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9539:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9539:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9526:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9526:2:11"
																},
																"nativeSrc": "9526:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9526:15:11"
															},
															"nativeSrc": "9518:249:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9542:3:11",
																"nodeType": "YulBlock",
																"src": "9542:3:11",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9522:3:11",
																"nodeType": "YulBlock",
																"src": "9522:3:11",
																"statements": []
															},
															"src": "9518:249:11"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9398:375:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "9426:5:11",
														"nodeType": "YulTypedName",
														"src": "9426:5:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9433:8:11",
														"nodeType": "YulTypedName",
														"src": "9433:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9443:3:11",
														"nodeType": "YulTypedName",
														"src": "9443:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9451:5:11",
														"nodeType": "YulTypedName",
														"src": "9451:5:11",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9458:4:11",
														"nodeType": "YulTypedName",
														"src": "9458:4:11",
														"type": ""
													}
												],
												"src": "9398:375:11"
											},
											{
												"body": {
													"nativeSrc": "9837:843:11",
													"nodeType": "YulBlock",
													"src": "9837:843:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9875:52:11",
																"nodeType": "YulBlock",
																"src": "9875:52:11",
																"statements": [
																	{
																		"nativeSrc": "9889:10:11",
																		"nodeType": "YulAssignment",
																		"src": "9889:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9898:1:11",
																			"nodeType": "YulLiteral",
																			"src": "9898:1:11",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9889:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9889:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9912:5:11",
																		"nodeType": "YulLeave",
																		"src": "9912:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9857:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "9857:8:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9850:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9850:6:11"
																},
																"nativeSrc": "9850:16:11",
																"nodeType": "YulFunctionCall",
																"src": "9850:16:11"
															},
															"nativeSrc": "9847:80:11",
															"nodeType": "YulIf",
															"src": "9847:80:11"
														},
														{
															"body": {
																"nativeSrc": "9960:52:11",
																"nodeType": "YulBlock",
																"src": "9960:52:11",
																"statements": [
																	{
																		"nativeSrc": "9974:10:11",
																		"nodeType": "YulAssignment",
																		"src": "9974:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9983:1:11",
																			"nodeType": "YulLiteral",
																			"src": "9983:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9974:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9974:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9997:5:11",
																		"nodeType": "YulLeave",
																		"src": "9997:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9946:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9946:4:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9939:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9939:6:11"
																},
																"nativeSrc": "9939:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9939:12:11"
															},
															"nativeSrc": "9936:76:11",
															"nodeType": "YulIf",
															"src": "9936:76:11"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10048:52:11",
																		"nodeType": "YulBlock",
																		"src": "10048:52:11",
																		"statements": [
																			{
																				"nativeSrc": "10062:10:11",
																				"nodeType": "YulAssignment",
																				"src": "10062:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10071:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10071:1:11",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10062:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "10062:5:11"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10085:5:11",
																				"nodeType": "YulLeave",
																				"src": "10085:5:11"
																			}
																		]
																	},
																	"nativeSrc": "10041:59:11",
																	"nodeType": "YulCase",
																	"src": "10041:59:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10046:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10046:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10116:167:11",
																		"nodeType": "YulBlock",
																		"src": "10116:167:11",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10151:22:11",
																					"nodeType": "YulBlock",
																					"src": "10151:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10153:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "10153:16:11"
																								},
																								"nativeSrc": "10153:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "10153:18:11"
																							},
																							"nativeSrc": "10153:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "10153:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10136:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "10136:8:11"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10146:3:11",
																							"nodeType": "YulLiteral",
																							"src": "10146:3:11",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10133:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "10133:2:11"
																					},
																					"nativeSrc": "10133:17:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10133:17:11"
																				},
																				"nativeSrc": "10130:43:11",
																				"nodeType": "YulIf",
																				"src": "10130:43:11"
																			},
																			{
																				"nativeSrc": "10186:25:11",
																				"nodeType": "YulAssignment",
																				"src": "10186:25:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10199:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "10199:8:11"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10209:1:11",
																							"nodeType": "YulLiteral",
																							"src": "10209:1:11",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10195:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "10195:3:11"
																					},
																					"nativeSrc": "10195:16:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10195:16:11"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10186:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "10186:5:11"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10224:11:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10224:11:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10234:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10234:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "10228:2:11",
																						"nodeType": "YulTypedName",
																						"src": "10228:2:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10248:7:11",
																				"nodeType": "YulAssignment",
																				"src": "10248:7:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10254:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10254:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "10248:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "10248:2:11"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10268:5:11",
																				"nodeType": "YulLeave",
																				"src": "10268:5:11"
																			}
																		]
																	},
																	"nativeSrc": "10109:174:11",
																	"nodeType": "YulCase",
																	"src": "10109:174:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10114:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10114:1:11",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10028:4:11",
																"nodeType": "YulIdentifier",
																"src": "10028:4:11"
															},
															"nativeSrc": "10021:262:11",
															"nodeType": "YulSwitch",
															"src": "10021:262:11"
														},
														{
															"body": {
																"nativeSrc": "10381:114:11",
																"nodeType": "YulBlock",
																"src": "10381:114:11",
																"statements": [
																	{
																		"nativeSrc": "10395:28:11",
																		"nodeType": "YulAssignment",
																		"src": "10395:28:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10408:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "10408:4:11"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10414:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "10414:8:11"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10404:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10404:3:11"
																			},
																			"nativeSrc": "10404:19:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10404:19:11"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10395:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10395:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10436:11:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10436:11:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10446:1:11",
																			"nodeType": "YulLiteral",
																			"src": "10446:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "10440:2:11",
																				"nodeType": "YulTypedName",
																				"src": "10440:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10460:7:11",
																		"nodeType": "YulAssignment",
																		"src": "10460:7:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10466:1:11",
																			"nodeType": "YulLiteral",
																			"src": "10466:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "10460:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "10460:2:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10480:5:11",
																		"nodeType": "YulLeave",
																		"src": "10480:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10305:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "10305:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10311:2:11",
																						"nodeType": "YulLiteral",
																						"src": "10311:2:11",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10302:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10302:2:11"
																				},
																				"nativeSrc": "10302:12:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10302:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10319:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "10319:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10329:2:11",
																						"nodeType": "YulLiteral",
																						"src": "10329:2:11",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10316:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10316:2:11"
																				},
																				"nativeSrc": "10316:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10316:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10298:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10298:3:11"
																		},
																		"nativeSrc": "10298:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10298:35:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10342:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "10342:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10348:3:11",
																						"nodeType": "YulLiteral",
																						"src": "10348:3:11",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10339:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10339:2:11"
																				},
																				"nativeSrc": "10339:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10339:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10357:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "10357:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10367:2:11",
																						"nodeType": "YulLiteral",
																						"src": "10367:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10354:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10354:2:11"
																				},
																				"nativeSrc": "10354:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10354:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10335:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10335:3:11"
																		},
																		"nativeSrc": "10335:36:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10335:36:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10295:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10295:2:11"
																},
																"nativeSrc": "10295:77:11",
																"nodeType": "YulFunctionCall",
																"src": "10295:77:11"
															},
															"nativeSrc": "10292:203:11",
															"nodeType": "YulIf",
															"src": "10292:203:11"
														},
														{
															"nativeSrc": "10504:65:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10504:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10546:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10546:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10552:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "10552:8:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10566:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10566:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10562:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10562:3:11"
																		},
																		"nativeSrc": "10562:6:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10562:6:11"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10527:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "10527:18:11"
																},
																"nativeSrc": "10527:42:11",
																"nodeType": "YulFunctionCall",
																"src": "10527:42:11"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "10508:7:11",
																	"nodeType": "YulTypedName",
																	"src": "10508:7:11",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "10517:6:11",
																	"nodeType": "YulTypedName",
																	"src": "10517:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10614:22:11",
																"nodeType": "YulBlock",
																"src": "10614:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10616:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10616:16:11"
																			},
																			"nativeSrc": "10616:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10616:18:11"
																		},
																		"nativeSrc": "10616:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10616:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "10584:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "10584:7:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10601:1:11",
																						"nodeType": "YulLiteral",
																						"src": "10601:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "10597:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10597:3:11"
																				},
																				"nativeSrc": "10597:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10597:6:11"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "10605:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10605:6:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10593:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10593:3:11"
																		},
																		"nativeSrc": "10593:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10593:19:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10581:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10581:2:11"
																},
																"nativeSrc": "10581:32:11",
																"nodeType": "YulFunctionCall",
																"src": "10581:32:11"
															},
															"nativeSrc": "10578:58:11",
															"nodeType": "YulIf",
															"src": "10578:58:11"
														},
														{
															"nativeSrc": "10645:29:11",
															"nodeType": "YulAssignment",
															"src": "10645:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "10658:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "10658:7:11"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "10667:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10667:6:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10654:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10654:3:11"
																},
																"nativeSrc": "10654:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10654:20:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10645:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10645:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9778:902:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9808:4:11",
														"nodeType": "YulTypedName",
														"src": "9808:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9814:8:11",
														"nodeType": "YulTypedName",
														"src": "9814:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9827:5:11",
														"nodeType": "YulTypedName",
														"src": "9827:5:11",
														"type": ""
													}
												],
												"src": "9778:902:11"
											},
											{
												"body": {
													"nativeSrc": "10753:72:11",
													"nodeType": "YulBlock",
													"src": "10753:72:11",
													"statements": [
														{
															"nativeSrc": "10763:56:11",
															"nodeType": "YulAssignment",
															"src": "10763:56:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10793:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10793:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10803:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "10803:8:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10813:4:11",
																				"nodeType": "YulLiteral",
																				"src": "10813:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10799:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10799:3:11"
																		},
																		"nativeSrc": "10799:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10799:19:11"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10772:20:11",
																	"nodeType": "YulIdentifier",
																	"src": "10772:20:11"
																},
																"nativeSrc": "10772:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10772:47:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10763:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10763:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "10685:140:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10724:4:11",
														"nodeType": "YulTypedName",
														"src": "10724:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10730:8:11",
														"nodeType": "YulTypedName",
														"src": "10730:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10743:5:11",
														"nodeType": "YulTypedName",
														"src": "10743:5:11",
														"type": ""
													}
												],
												"src": "10685:140:11"
											},
											{
												"body": {
													"nativeSrc": "10882:116:11",
													"nodeType": "YulBlock",
													"src": "10882:116:11",
													"statements": [
														{
															"nativeSrc": "10892:20:11",
															"nodeType": "YulAssignment",
															"src": "10892:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10907:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10907:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10910:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10910:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10903:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10903:3:11"
																},
																"nativeSrc": "10903:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10903:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10892:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "10892:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10970:22:11",
																"nodeType": "YulBlock",
																"src": "10970:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10972:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10972:16:11"
																			},
																			"nativeSrc": "10972:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10972:18:11"
																		},
																		"nativeSrc": "10972:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10972:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10941:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "10941:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10934:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "10934:6:11"
																				},
																				"nativeSrc": "10934:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10934:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10948:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "10948:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10955:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "10955:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10964:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "10964:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10951:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10951:3:11"
																						},
																						"nativeSrc": "10951:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10951:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10945:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10945:2:11"
																				},
																				"nativeSrc": "10945:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10945:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10931:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "10931:2:11"
																		},
																		"nativeSrc": "10931:37:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10931:37:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10924:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10924:6:11"
																},
																"nativeSrc": "10924:45:11",
																"nodeType": "YulFunctionCall",
																"src": "10924:45:11"
															},
															"nativeSrc": "10921:71:11",
															"nodeType": "YulIf",
															"src": "10921:71:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10830:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10861:1:11",
														"nodeType": "YulTypedName",
														"src": "10861:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10864:1:11",
														"nodeType": "YulTypedName",
														"src": "10864:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10870:7:11",
														"nodeType": "YulTypedName",
														"src": "10870:7:11",
														"type": ""
													}
												],
												"src": "10830:168:11"
											},
											{
												"body": {
													"nativeSrc": "11035:95:11",
													"nodeType": "YulBlock",
													"src": "11035:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11052:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11052:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11059:3:11",
																				"nodeType": "YulLiteral",
																				"src": "11059:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11064:10:11",
																				"nodeType": "YulLiteral",
																				"src": "11064:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11055:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11055:3:11"
																		},
																		"nativeSrc": "11055:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11055:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11045:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11045:6:11"
																},
																"nativeSrc": "11045:31:11",
																"nodeType": "YulFunctionCall",
																"src": "11045:31:11"
															},
															"nativeSrc": "11045:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "11045:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11092:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11092:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11095:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11095:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11085:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11085:6:11"
																},
																"nativeSrc": "11085:15:11",
																"nodeType": "YulFunctionCall",
																"src": "11085:15:11"
															},
															"nativeSrc": "11085:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "11085:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11116:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11116:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11119:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11119:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11109:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11109:6:11"
																},
																"nativeSrc": "11109:15:11",
																"nodeType": "YulFunctionCall",
																"src": "11109:15:11"
															},
															"nativeSrc": "11109:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "11109:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11003:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "11003:127:11"
											},
											{
												"body": {
													"nativeSrc": "11181:74:11",
													"nodeType": "YulBlock",
													"src": "11181:74:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "11204:22:11",
																"nodeType": "YulBlock",
																"src": "11204:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11206:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11206:16:11"
																			},
																			"nativeSrc": "11206:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11206:18:11"
																		},
																		"nativeSrc": "11206:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11206:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11201:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11201:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11194:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11194:6:11"
																},
																"nativeSrc": "11194:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11194:9:11"
															},
															"nativeSrc": "11191:35:11",
															"nodeType": "YulIf",
															"src": "11191:35:11"
														},
														{
															"nativeSrc": "11235:14:11",
															"nodeType": "YulAssignment",
															"src": "11235:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11244:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11244:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11247:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11247:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11240:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11240:3:11"
																},
																"nativeSrc": "11240:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11240:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11235:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11235:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11135:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11166:1:11",
														"nodeType": "YulTypedName",
														"src": "11166:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11169:1:11",
														"nodeType": "YulTypedName",
														"src": "11169:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11175:1:11",
														"nodeType": "YulTypedName",
														"src": "11175:1:11",
														"type": ""
													}
												],
												"src": "11135:120:11"
											},
											{
												"body": {
													"nativeSrc": "11298:74:11",
													"nodeType": "YulBlock",
													"src": "11298:74:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "11321:22:11",
																"nodeType": "YulBlock",
																"src": "11321:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11323:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11323:16:11"
																			},
																			"nativeSrc": "11323:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11323:18:11"
																		},
																		"nativeSrc": "11323:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11323:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11318:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11318:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11311:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11311:6:11"
																},
																"nativeSrc": "11311:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11311:9:11"
															},
															"nativeSrc": "11308:35:11",
															"nodeType": "YulIf",
															"src": "11308:35:11"
														},
														{
															"nativeSrc": "11352:14:11",
															"nodeType": "YulAssignment",
															"src": "11352:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11361:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11361:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11364:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11364:1:11"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "11357:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11357:3:11"
																},
																"nativeSrc": "11357:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11357:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11352:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11352:1:11"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "11260:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11283:1:11",
														"nodeType": "YulTypedName",
														"src": "11283:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11286:1:11",
														"nodeType": "YulTypedName",
														"src": "11286:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11292:1:11",
														"nodeType": "YulTypedName",
														"src": "11292:1:11",
														"type": ""
													}
												],
												"src": "11260:112:11"
											},
											{
												"body": {
													"nativeSrc": "11425:77:11",
													"nodeType": "YulBlock",
													"src": "11425:77:11",
													"statements": [
														{
															"nativeSrc": "11435:16:11",
															"nodeType": "YulAssignment",
															"src": "11435:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11446:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11446:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11449:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11449:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11442:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11442:3:11"
																},
																"nativeSrc": "11442:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11442:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11435:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11435:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11474:22:11",
																"nodeType": "YulBlock",
																"src": "11474:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11476:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11476:16:11"
																			},
																			"nativeSrc": "11476:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11476:18:11"
																		},
																		"nativeSrc": "11476:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11476:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11466:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11466:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11469:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11469:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11463:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11463:2:11"
																},
																"nativeSrc": "11463:10:11",
																"nodeType": "YulFunctionCall",
																"src": "11463:10:11"
															},
															"nativeSrc": "11460:36:11",
															"nodeType": "YulIf",
															"src": "11460:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11377:125:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11408:1:11",
														"nodeType": "YulTypedName",
														"src": "11408:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11411:1:11",
														"nodeType": "YulTypedName",
														"src": "11411:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11417:3:11",
														"nodeType": "YulTypedName",
														"src": "11417:3:11",
														"type": ""
													}
												],
												"src": "11377:125:11"
											},
											{
												"body": {
													"nativeSrc": "11636:145:11",
													"nodeType": "YulBlock",
													"src": "11636:145:11",
													"statements": [
														{
															"nativeSrc": "11646:26:11",
															"nodeType": "YulAssignment",
															"src": "11646:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11658:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11658:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11669:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11669:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11654:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11654:3:11"
																},
																"nativeSrc": "11654:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11654:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11646:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11646:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11688:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11688:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11703:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11703:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11719:3:11",
																								"nodeType": "YulLiteral",
																								"src": "11719:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11724:1:11",
																								"nodeType": "YulLiteral",
																								"src": "11724:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11715:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11715:3:11"
																						},
																						"nativeSrc": "11715:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11715:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11728:1:11",
																						"nodeType": "YulLiteral",
																						"src": "11728:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11711:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11711:3:11"
																				},
																				"nativeSrc": "11711:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11711:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11699:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11699:3:11"
																		},
																		"nativeSrc": "11699:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11699:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11681:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11681:6:11"
																},
																"nativeSrc": "11681:51:11",
																"nodeType": "YulFunctionCall",
																"src": "11681:51:11"
															},
															"nativeSrc": "11681:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "11681:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11752:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11752:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11763:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11763:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11748:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11748:3:11"
																		},
																		"nativeSrc": "11748:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11748:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11768:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11768:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11741:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11741:6:11"
																},
																"nativeSrc": "11741:34:11",
																"nodeType": "YulFunctionCall",
																"src": "11741:34:11"
															},
															"nativeSrc": "11741:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "11741:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "11507:274:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11597:9:11",
														"nodeType": "YulTypedName",
														"src": "11597:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11608:6:11",
														"nodeType": "YulTypedName",
														"src": "11608:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11616:6:11",
														"nodeType": "YulTypedName",
														"src": "11616:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11627:4:11",
														"nodeType": "YulTypedName",
														"src": "11627:4:11",
														"type": ""
													}
												],
												"src": "11507:274:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_contract$_IPicweUSD_$697__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IMainContract_$677__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_cef094ec419a8d26f0cee0bf6ca74c12da636e63d15d6aaf6bbddcac6380238e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Target chain must be different f\")\n        mstore(add(headStart, 96), \"rom source chain\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aeff32d03aaba9710cd0ccac9240922a41d8498df078f913fb5acb94e4444254__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Amount must be greater than gasf\")\n        mstore(add(headStart, 96), \"ee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid target user address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_3c0027d5c68fee309a77bba84ffa4dfde426eb995b832c16d5a3e1fecf1f55f3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Request ID already used\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_6796245fd06a0237ef78dc4b92ce228b2aeb991d0e4ff61774e8fc1ef736486c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Source chain must be different f\")\n        mstore(add(headStart, 96), \"rom target chain\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Stablecoin not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Stablecoin transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101d0575f3560e01c806375b238fc116100fe578063b190d8a31161009e578063d270e7ab1161006e578063d270e7ab14610411578063d547741f14610429578063e63ab1e91461043c578063e74b981b14610463575f80fd5b8063b190d8a3146103c6578063c5494ffb146103d8578063c6400657146103eb578063d19fad37146103fe575f80fd5b80639ea4f3a4116100d95780639ea4f3a414610377578063a217fddf14610399578063a2519ae4146103a0578063a62e1b3e146103b3575f80fd5b806375b238fc146103485780638456cb591461035c57806391d1485414610364575f80fd5b80632f2ff15d116101745780633f4ba83a116101445780633f4ba83a1461030157806346904840146103095780635badbe4c146103345780635c975abb1461033d575f80fd5b80632f2ff15d146102925780632f92893c146102a557806336568abe146102c757806337174202146102da575f80fd5b80631008776f116101af5780631008776f146102285780631e7502d71461023b5780631f2245641461025d578063248a9ca314610270575f80fd5b8062677016146101d457806301ffc9a7146101f05780630bd31a5714610213575b5f80fd5b6101dd60045481565b6040519081526020015b60405180910390f35b6102036101fe366004611370565b610476565b60405190151581526020016101e7565b6102266102213660046113b2565b6104ac565b005b6102266102363660046113e4565b6107b0565b6102036102493660046113fd565b5f9081526007602052604090205460ff1690565b61022661026b366004611414565b610810565b6101dd61027e3660046113fd565b5f9081526020819052604090206001015490565b6102266102a0366004611450565b610a73565b6102036102b33660046113fd565b60076020525f908152604090205460ff1681565b6102266102d5366004611450565b610a9d565b6101dd7f41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd4370481565b610226610ad5565b60055461031c906001600160a01b031681565b6040516001600160a01b0390911681526020016101e7565b6101dd60035481565b60015460ff16610203565b6101dd5f8051602061168f83398151915281565b610226610b0a565b610203610372366004611450565b610b3c565b6102036103853660046113e4565b60066020525f908152604090205460ff1681565b6101dd5f81565b6102266103ae36600461147a565b610b64565b60025461031c906001600160a01b031681565b6003544260401b4660801b17176101dd565b6102266103e63660046113fd565b610db0565b6102266103f93660046113e4565b610dcd565b61022661040c36600461147a565b610e30565b60015461031c9061010090046001600160a01b031681565b610226610437366004611450565b611015565b6101dd7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6102266104713660046113e4565b611039565b5f6001600160e01b03198216637965db0b60e01b14806104a657506301ffc9a760e01b6001600160e01b03198316145b92915050565b4683036105195760405162461bcd60e51b815260206004820152603060248201527f54617267657420636861696e206d75737420626520646966666572656e74206660448201526f3937b69039b7bab931b29031b430b4b760811b60648201526084015b60405180910390fd5b60045482116105755760405162461bcd60e51b815260206004820152602260248201527f416d6f756e74206d7573742062652067726561746572207468616e2067617366604482015261656560f01b6064820152608401610510565b6001600160a01b0381166105cb5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207461726765742075736572206164647265737300000000006044820152606401610510565b5f4690505f60035f81546105de906114b6565b918290555042604090811b608085901b179091175f8181526007602052919091205490915060ff161561064d5760405162461bcd60e51b815260206004820152601760248201527614995c5d595cdd08125108185b1c9958591e481d5cd959604a1b6044820152606401610510565b5f818152600760205260408120805460ff1916600117905560045461067290866114ce565b600254600554600480546040516323b872dd60e01b815233928101929092526001600160a01b039283166024830152604482015292935016906323b872dd906064016020604051808303815f875af11580156106d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f491906114e1565b5060025460405163079cc67960e41b8152336004820152602481018390526001600160a01b03909116906379cc6790906044015f604051808303815f87803b15801561073e575f80fd5b505af1158015610750573d5f803e3d5ffd5b505060408051868152602081018a90529081018490526001600160a01b03871660608201523392508491507f26c32cc5ff12981b55681844f2fb47d52c5e521c58d5288b1325f3304a7e88529060800160405180910390a3505050505050565b5f8051602061168f8339815191526107c781611073565b6001600160a01b0382165f81815260066020526040808220805460ff19169055517f0fa63555fe68cad70e08233633567493a3c74afdc8c7fb9f0c03a8e74f1a137a9190a25050565b7f41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd4370461083a81611073565b5f8581526007602052604090205460ff16156108925760405162461bcd60e51b815260206004820152601760248201527614995c5d595cdd08125108185b1c9958591e481d5cd959604a1b6044820152606401610510565b4684036108fa5760405162461bcd60e51b815260206004820152603060248201527f536f7572636520636861696e206d75737420626520646966666572656e74206660448201526f3937b6903a30b933b2ba1031b430b4b760811b6064820152608401610510565b5f83116109495760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610510565b6001600160a01b03821661099f5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207461726765742075736572206164647265737300000000006044820152606401610510565b5f8581526007602052604090819020805460ff1916600117905560025490516340c10f1960e01b81526001600160a01b03848116600483015260248201869052909116906340c10f19906044015f604051808303815f87803b158015610a03575f80fd5b505af1158015610a15573d5f803e3d5ffd5b5050604080518781524660208201529081018690526001600160a01b03851660608201523392508791507f7690d9cedf96f067bda7114c24bba31be184ae045d199979a0a373862e70d46b9060800160405180910390a35050505050565b5f82815260208190526040902060010154610a8d81611073565b610a97838361107d565b50505050565b6001600160a01b0381163314610ac65760405163334bd91960e11b815260040160405180910390fd5b610ad0828261110c565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610aff81611073565b610b07611175565b50565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b3481611073565b610b076111c7565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6001600160a01b0382165f9081526006602052604090205460ff16610bc75760405162461bcd60e51b815260206004820152601960248201527814dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959603a1b6044820152606401610510565b5f826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c04573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c289190611500565b90505f610c3783836006611202565b6001546040516323b872dd60e01b81523360048201526001600160a01b0361010090920482166024820152604481018690529192508516906323b872dd906064016020604051808303815f875af1158015610c94573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cb891906114e1565b610d045760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c65640000000000006044820152606401610510565b6002546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044015f604051808303815f87803b158015610d4d575f80fd5b505af1158015610d5f573d5f803e3d5ffd5b505060408051868152602081018590526001600160a01b03881693503392507f66c62f0863782653c5c44e10bf21d9def60984ce20d9f75549575a891089658791015b60405180910390a350505050565b5f8051602061168f833981519152610dc781611073565b50600455565b5f8051602061168f833981519152610de481611073565b6001600160a01b0382165f81815260066020526040808220805460ff19166001179055517fd8b2dc62b787ec8afbc8a664cf2fd7c1e7851721acc9e0069132cece3c529c2e9190a25050565b6001600160a01b0382165f9081526006602052604090205460ff16610e935760405162461bcd60e51b815260206004820152601960248201527814dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959603a1b6044820152606401610510565b5f826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ed0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ef49190611500565b90505f610f0383600684611274565b600154604051631795588d60e21b81526001600160a01b0387811660048301523360248301526044820184905292935061010090910490911690635e556234906064015f604051808303815f87803b158015610f5d575f80fd5b505af1158015610f6f573d5f803e3d5ffd5b505060025460405163079cc67960e41b8152336004820152602481018790526001600160a01b0390911692506379cc679091506044015f604051808303815f87803b158015610fbc575f80fd5b505af1158015610fce573d5f803e3d5ffd5b505060408051868152602081018590526001600160a01b03881693503392507f3d9842cbdfa603ab9534d6e362bf28b3061318f57fed5e7087dfc956a9d744429101610da2565b5f8281526020819052604090206001015461102f81611073565b610a97838361110c565b5f8051602061168f83398151915261105081611073565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b610b0781336112ea565b5f6110888383610b3c565b611105575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556110bd3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104a6565b505f6104a6565b5f6111178383610b3c565b15611105575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104a6565b61117d611327565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6111cf61134c565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336111aa565b5f8160ff168360ff160361121757508261126d565b8160ff168360ff16101561124b5761122f8383611520565b61123a90600a61161c565b611244908561162a565b905061126d565b6112558284611520565b61126090600a61161c565b61126a9085611655565b90505b9392505050565b5f8160ff168360ff160361128957508261126d565b8160ff168360ff1610156112a15761122f8383611520565b5f6112ac8385611520565b6112b790600a61161c565b90506112c38186611655565b91506112cf8186611668565b156112e2576112df60018361167b565b91505b509392505050565b6112f48282610b3c565b6113235760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610510565b5050565b60015460ff1661134a57604051638dfc202b60e01b815260040160405180910390fd5b565b60015460ff161561134a5760405163d93c066560e01b815260040160405180910390fd5b5f60208284031215611380575f80fd5b81356001600160e01b03198116811461126d575f80fd5b80356001600160a01b03811681146113ad575f80fd5b919050565b5f805f606084860312156113c4575f80fd5b83359250602084013591506113db60408501611397565b90509250925092565b5f602082840312156113f4575f80fd5b61126d82611397565b5f6020828403121561140d575f80fd5b5035919050565b5f805f8060808587031215611427575f80fd5b84359350602085013592506040850135915061144560608601611397565b905092959194509250565b5f8060408385031215611461575f80fd5b8235915061147160208401611397565b90509250929050565b5f806040838503121561148b575f80fd5b61149483611397565b946020939093013593505050565b634e487b7160e01b5f52601160045260245ffd5b5f600182016114c7576114c76114a2565b5060010190565b818103818111156104a6576104a66114a2565b5f602082840312156114f1575f80fd5b8151801515811461126d575f80fd5b5f60208284031215611510575f80fd5b815160ff8116811461126d575f80fd5b60ff82811682821603908111156104a6576104a66114a2565b6001815b600184111561157457808504811115611558576115586114a2565b600184161561156657908102905b60019390931c92800261153d565b935093915050565b5f8261158a575060016104a6565b8161159657505f6104a6565b81600181146115ac57600281146115b6576115d2565b60019150506104a6565b60ff8411156115c7576115c76114a2565b50506001821b6104a6565b5060208310610133831016604e8410600b84101617156115f5575081810a6104a6565b6116015f198484611539565b805f1904821115611614576116146114a2565b029392505050565b5f61126d60ff84168361157c565b80820281158282048414176104a6576104a66114a2565b634e487b7160e01b5f52601260045260245ffd5b5f8261166357611663611641565b500490565b5f8261167657611676611641565b500690565b808201808211156104a6576104a66114a256fea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220dc48af6984076926f7567d87875765c8f5b6d6f8080d4c3ed3f97c9b3a8c067e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xB190D8A3 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xD270E7AB GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD270E7AB EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x463 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB190D8A3 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xC5494FFB EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xC6400657 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xD19FAD37 EQ PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EA4F3A4 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x9EA4F3A4 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xA2519AE4 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA62E1B3E EQ PUSH2 0x3B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x364 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x5BADBE4C EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x33D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x2F92893C EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x37174202 EQ PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1008776F GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1008776F EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x1E7502D7 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x1F224564 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x270 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x677016 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xBD31A57 EQ PUSH2 0x213 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FD JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x13FD JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x1DD PUSH32 0x41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704 DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x1DD PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x203 JUMP JUMPDEST PUSH2 0x1DD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x168F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x203 PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0xB3C JUMP JUMPDEST PUSH2 0x203 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1DD PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x147A JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP PUSH1 0x40 SHL CHAINID PUSH1 0x80 SHL OR OR PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x226 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FD JUMP JUMPDEST PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST PUSH2 0x226 PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x147A JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x31C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0x1015 JUMP JUMPDEST PUSH2 0x1DD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x471 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x1039 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4A6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CHAINID DUP4 SUB PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420636861696E206D75737420626520646966666572656E742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3937B69039B7BAB931B29031B430B4B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2067617366 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746172676574207573657220616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 CHAINID SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP2 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x40 SWAP1 DUP2 SHL PUSH1 0x80 DUP6 SWAP1 SHL OR SWAP1 SWAP2 OR PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14995C5D595CDD08125108185B1C9958591E481D5CD959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH2 0x672 SWAP1 DUP7 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x73E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP11 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP3 POP DUP5 SWAP2 POP PUSH32 0x26C32CC5FF12981B55681844F2FB47D52C5E521C58D5288B1325F3304A7E8852 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x168F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x7C7 DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xFA63555FE68CAD70E08233633567493A3C74AFDC8C7FB9F0C03A8E74F1A137A SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704 PUSH2 0x83A DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14995C5D595CDD08125108185B1C9958591E481D5CD959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST CHAINID DUP5 SUB PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7572636520636861696E206D75737420626520646966666572656E742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3937B6903A30B933B2BA1031B430B4B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746172676574207573657220616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA03 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA15 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE CHAINID PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP3 POP DUP8 SWAP2 POP PUSH32 0x7690D9CEDF96F067BDA7114C24BBA31BE184AE045D199979A0A373862E70D46B SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA8D DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0xA97 DUP4 DUP4 PUSH2 0x107D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD0 DUP3 DUP3 PUSH2 0x110C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xAFF DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0xB07 PUSH2 0x1175 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB34 DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0xB07 PUSH2 0x11C7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC04 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC28 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC37 DUP4 DUP4 PUSH1 0x6 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP3 DIV DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC94 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0xD04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD5F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP4 POP CALLER SWAP3 POP PUSH32 0x66C62F0863782653C5C44E10BF21D9DEF60984CE20D9F75549575A8910896587 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x168F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDC7 DUP2 PUSH2 0x1073 JUMP JUMPDEST POP PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x168F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDE4 DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xD8B2DC62B787EC8AFBC8A664CF2FD7C1E7851721ACC9E0069132CECE3C529C2E SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x510 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF4 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF03 DUP4 PUSH1 0x6 DUP5 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1795588D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP PUSH2 0x100 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0x5E556234 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x79CC6790 SWAP2 POP PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFCE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP4 POP CALLER SWAP3 POP PUSH32 0x3D9842CBDFA603AB9534D6E362BF28B3061318F57FED5E7087DFC956A9D74442 SWAP2 ADD PUSH2 0xDA2 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x102F DUP2 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0xA97 DUP4 DUP4 PUSH2 0x110C JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x168F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1050 DUP2 PUSH2 0x1073 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB07 DUP2 CALLER PUSH2 0x12EA JUMP JUMPDEST PUSH0 PUSH2 0x1088 DUP4 DUP4 PUSH2 0xB3C JUMP JUMPDEST PUSH2 0x1105 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x10BD CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4A6 JUMP JUMPDEST POP PUSH0 PUSH2 0x4A6 JUMP JUMPDEST PUSH0 PUSH2 0x1117 DUP4 DUP4 PUSH2 0xB3C JUMP JUMPDEST ISZERO PUSH2 0x1105 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x117D PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x11CF PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x11AA JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x1217 JUMPI POP DUP3 PUSH2 0x126D JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO PUSH2 0x124B JUMPI PUSH2 0x122F DUP4 DUP4 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x123A SWAP1 PUSH1 0xA PUSH2 0x161C JUMP JUMPDEST PUSH2 0x1244 SWAP1 DUP6 PUSH2 0x162A JUMP JUMPDEST SWAP1 POP PUSH2 0x126D JUMP JUMPDEST PUSH2 0x1255 DUP3 DUP5 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x1260 SWAP1 PUSH1 0xA PUSH2 0x161C JUMP JUMPDEST PUSH2 0x126A SWAP1 DUP6 PUSH2 0x1655 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x1289 JUMPI POP DUP3 PUSH2 0x126D JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x122F DUP4 DUP4 PUSH2 0x1520 JUMP JUMPDEST PUSH0 PUSH2 0x12AC DUP4 DUP6 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x12B7 SWAP1 PUSH1 0xA PUSH2 0x161C JUMP JUMPDEST SWAP1 POP PUSH2 0x12C3 DUP2 DUP7 PUSH2 0x1655 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CF DUP2 DUP7 PUSH2 0x1668 JUMP JUMPDEST ISZERO PUSH2 0x12E2 JUMPI PUSH2 0x12DF PUSH1 0x1 DUP4 PUSH2 0x167B JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12F4 DUP3 DUP3 PUSH2 0xB3C JUMP JUMPDEST PUSH2 0x1323 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x510 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1380 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13AD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x13DB PUSH1 0x40 DUP6 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x126D DUP3 PUSH2 0x1397 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1445 PUSH1 0x60 DUP7 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1461 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1471 PUSH1 0x20 DUP5 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1494 DUP4 PUSH2 0x1397 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x14C7 JUMPI PUSH2 0x14C7 PUSH2 0x14A2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0x14A2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x126D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1510 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x126D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1574 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x1558 JUMPI PUSH2 0x1558 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1566 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x153D JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x158A JUMPI POP PUSH1 0x1 PUSH2 0x4A6 JUMP JUMPDEST DUP2 PUSH2 0x1596 JUMPI POP PUSH0 PUSH2 0x4A6 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15AC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15B6 JUMPI PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15C7 JUMPI PUSH2 0x15C7 PUSH2 0x14A2 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x4A6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x15F5 JUMPI POP DUP2 DUP2 EXP PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x1601 PUSH0 NOT DUP5 DUP5 PUSH2 0x1539 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1614 JUMPI PUSH2 0x1614 PUSH2 0x14A2 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x126D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x157C JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0x14A2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1663 JUMPI PUSH2 0x1663 PUSH2 0x1641 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1676 JUMPI PUSH2 0x1676 PUSH2 0x1641 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0x14A2 JUMP INVALID LOG4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220DC48AF6984076926F7567D87 DUP8 JUMPI PUSH6 0xC8F5B6D6F808 0xD 0x4C RETURNDATACOPY 0xD3 0xF9 PUSH29 0x9B3A8C067E64736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "370:6697:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;758:34;;;;;;;;;160:25:11;;;148:2;133:18;758:34:10;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;652:14:11;;645:22;627:41;;615:2;600:18;2565:202:0;487:187:11;4155:881:10;;;;;;:::i;:::-;;:::i;:::-;;2749:181;;;;;;:::i;:::-;;:::i;5712:122::-;;;;;;:::i;:::-;5777:4;5801:25;;;:14;:25;;;;;;;;;5712:122;5044:660;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;4226:136;;;;;;:::i;:::-;;:::i;893:46:10:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5328:245:0;;;;;;:::i;:::-;;:::i;602:86:10:-;;652:36;602:86;;2229:77;;;:::i;799:27::-;;;;;-1:-1:-1;;;;;799:27:10;;;;;;-1:-1:-1;;;;;3132:32:11;;;3114:51;;3102:2;3087:18;799:27:10;2968:203:11;724:27:10;;;;;;1850:84:5;1920:7;;;;1850:84;;466:60:10;;-1:-1:-1;;;;;;;;;;;466:60:10;;2148:73;;;:::i;2854:136:0:-;;;;;;:::i;:::-;;:::i;833:53:10:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2187:49:0;;2232:4;2187:49;;2938:623:10;;;;;;:::i;:::-;;:::i;695:22::-;;;;;-1:-1:-1;;;;;695:22:10;;;5842:149;5971:12;;5946:15;5965:2;5946:21;5921:13;5938:3;5921:20;5920:48;:63;5842:149;;2314:101;;;;;;:::i;:::-;;:::i;2556:185::-;;;;;;:::i;:::-;;:::i;3569:578::-;;;;;;:::i;:::-;;:::i;426:33::-;;;;;;;;-1:-1:-1;;;;;426:33:10;;;4642:138:0;;;;;;:::i;:::-;;:::i;533:62:10:-;;571:24;533:62;;2423:125;;;;;;:::i;:::-;;:::i;2565:202:0:-;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;861:40:6;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;4155:881:10:-;4288:13;4271;:30;4263:91;;;;-1:-1:-1;;;4263:91:10;;4137:2:11;4263:91:10;;;4119:21:11;4176:2;4156:18;;;4149:30;4215:34;4195:18;;;4188:62;-1:-1:-1;;;4266:18:11;;;4259:46;4322:19;;4263:91:10;;;;;;;;;4382:6;;4373;:15;4365:62;;;;-1:-1:-1;;;4365:62:10;;4554:2:11;4365:62:10;;;4536:21:11;4593:2;4573:18;;;4566:30;4632:34;4612:18;;;4605:62;-1:-1:-1;;;4683:18:11;;;4676:32;4725:19;;4365:62:10;4352:398:11;4365:62:10;-1:-1:-1;;;;;4446:24:10;;4438:64;;;;-1:-1:-1;;;4438:64:10;;4957:2:11;4438:64:10;;;4939:21:11;4996:2;4976:18;;;4969:30;5035:29;5015:18;;;5008:57;5082:18;;4438:64:10;4755:351:11;4438:64:10;4513:21;4537:13;4513:37;;4561:17;4634:12;;4632:14;;;;;:::i;:::-;;;;;-1:-1:-1;4607:15:10;4626:2;4607:21;;;4599:3;4582:20;;;4581:48;:65;;;4666:25;;;;:14;:25;;;;;;;4581:65;;-1:-1:-1;4666:25:10;;4665:26;4657:62;;;;-1:-1:-1;;;4657:62:10;;5585:2:11;4657:62:10;;;5567:21:11;5624:2;5604:18;;;5597:30;-1:-1:-1;;;5643:18:11;;;5636:53;5706:18;;4657:62:10;5383:347:11;4657:62:10;4730:25;;;;:14;:25;;;;;:32;;-1:-1:-1;;4730:32:10;4758:4;4730:32;;;4803:6;;4794:15;;:6;:15;:::i;:::-;4820:5;;4851:12;;4865:6;;;4820:52;;-1:-1:-1;;;4820:52:10;;4839:10;4820:52;;;6070:51:11;;;;-1:-1:-1;;;;;4851:12:10;;;6137:18:11;;;6130:60;6206:18;;;6199:34;4773:36:10;;-1:-1:-1;4820:5:10;;:18;;6043::11;;4820:52:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4883:5:10;;:38;;-1:-1:-1;;;4883:38:10;;4898:10;4883:38;;;6700:51:11;6767:18;;;6760:34;;;-1:-1:-1;;;;;4883:5:10;;;;:14;;6673:18:11;;4883:38:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4937:91:10;;;7036:25:11;;;7092:2;7077:18;;7070:34;;;7120:18;;;7113:34;;;-1:-1:-1;;;;;7183:32:11;;7178:2;7163:18;;7156:60;4963:10:10;;-1:-1:-1;4952:9:10;;-1:-1:-1;4937:91:10;;7023:3:11;7008:19;4937:91:10;;;;;;;4252:784;;;4155:881;;;:::o;2749:181::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;2836:33:10;::::1;2872:5;2836:33:::0;;;:21:::1;:33;::::0;;;;;:41;;-1:-1:-1;;2836:41:10::1;::::0;;2893:29;::::1;::::0;2872:5;2893:29:::1;2749:181:::0;;:::o;5044:660::-;652:36;2464:16:0;2475:4;2464:10;:16::i;:::-;5214:25:10::1;::::0;;;:14:::1;:25;::::0;;;;;::::1;;5213:26;5205:62;;;::::0;-1:-1:-1;;;5205:62:10;;5585:2:11;5205:62:10::1;::::0;::::1;5567:21:11::0;5624:2;5604:18;;;5597:30;-1:-1:-1;;;5643:18:11;;;5636:53;5706:18;;5205:62:10::1;5383:347:11::0;5205:62:10::1;5303:13;5286;:30:::0;5278:91:::1;;;::::0;-1:-1:-1;;;5278:91:10;;7429:2:11;5278:91:10::1;::::0;::::1;7411:21:11::0;7468:2;7448:18;;;7441:30;7507:34;7487:18;;;7480:62;-1:-1:-1;;;7558:18:11;;;7551:46;7614:19;;5278:91:10::1;7227:412:11::0;5278:91:10::1;5397:1;5388:6;:10;5380:52;;;::::0;-1:-1:-1;;;5380:52:10;;7846:2:11;5380:52:10::1;::::0;::::1;7828:21:11::0;7885:2;7865:18;;;7858:30;7924:31;7904:18;;;7897:59;7973:18;;5380:52:10::1;7644:353:11::0;5380:52:10::1;-1:-1:-1::0;;;;;5451:24:10;::::1;5443:64;;;::::0;-1:-1:-1;;;5443:64:10;;4957:2:11;5443:64:10::1;::::0;::::1;4939:21:11::0;4996:2;4976:18;;;4969:30;5035:29;5015:18;;;5008:57;5082:18;;5443:64:10::1;4755:351:11::0;5443:64:10::1;5518:25;::::0;;;:14:::1;:25;::::0;;;;;;:32;;-1:-1:-1;;5518:32:10::1;5546:4;5518:32;::::0;;5561:5:::1;::::0;:30;;-1:-1:-1;;;5561:30:10;;-1:-1:-1;;;;;6718:32:11;;;5561:30:10::1;::::0;::::1;6700:51:11::0;6767:18;;;6760:34;;;5561:5:10;;::::1;::::0;:10:::1;::::0;6673:18:11;;5561:30:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5609:87:10::1;::::0;;7036:25:11;;;5662:13:10::1;7092:2:11::0;7077:18;;7070:34;7120:18;;;7113:34;;;-1:-1:-1;;;;;7183:32:11;;7178:2;7163:18;;7156:60;5635:10:10::1;::::0;-1:-1:-1;5624:9:10;;-1:-1:-1;5609:87:10::1;::::0;7023:3:11;7008:19;5609:87:10::1;;;;;;;5044:660:::0;;;;;:::o;4226:136:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:4;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2229:77:10:-;571:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2288:10:10::1;:8;:10::i;:::-;2229:77:::0;:::o;2148:73::-;571:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2205:8:10::1;:6;:8::i;2854:136:0:-:0;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;2938:623:10:-;-1:-1:-1;;;;;3031:33:10;;;;;;:21;:33;;;;;;;;3023:71;;;;-1:-1:-1;;;3023:71:10;;8204:2:11;3023:71:10;;;8186:21:11;8243:2;8223:18;;;8216:30;-1:-1:-1;;;8262:18:11;;;8255:55;8327:18;;3023:71:10;8002:349:11;3023:71:10;3105:24;3147:10;-1:-1:-1;;;;;3132:35:10;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3105:64;;3180:19;3202:56;3218:16;3236:18;3256:1;3202:15;:56::i;:::-;3362:12;;3310:84;;-1:-1:-1;;;3310:84:10;;3342:10;3310:84;;;6070:51:11;-1:-1:-1;;;;;3362:12:10;;;;;;6137:18:11;;;6130:60;6206:18;;;6199:34;;;3180:78:10;;-1:-1:-1;3310:31:10;;;;;6043:18:11;;3310:84:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3302:123;;;;-1:-1:-1;;;3302:123:10;;8836:2:11;3302:123:10;;;8818:21:11;8875:2;8855:18;;;8848:30;8914:28;8894:18;;;8887:56;8960:18;;3302:123:10;8634:350:11;3302:123:10;3436:5;;:35;;-1:-1:-1;;;3436:35:10;;3447:10;3436:35;;;6700:51:11;6767:18;;;6760:34;;;-1:-1:-1;;;;;3436:5:10;;;;:10;;6673:18:11;;3436:35:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3487:66:10;;;9163:25:11;;;9219:2;9204:18;;9197:34;;;-1:-1:-1;;;;;3487:66:10;;;-1:-1:-1;3499:10:10;;-1:-1:-1;3487:66:10;;9136:18:11;3487:66:10;;;;;;;;3012:549;;2938:623;;:::o;2314:101::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;2391:6:10::1;:16:::0;2314:101::o;2556:185::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;2645:33:10;::::1;;::::0;;;:21:::1;:33;::::0;;;;;:40;;-1:-1:-1;;2645:40:10::1;2681:4;2645:40;::::0;;2701:32;::::1;::::0;2645:33;2701:32:::1;2556:185:::0;;:::o;3569:578::-;-1:-1:-1;;;;;3657:33:10;;;;;;:21;:33;;;;;;;;3649:71;;;;-1:-1:-1;;;3649:71:10;;8204:2:11;3649:71:10;;;8186:21:11;8243:2;8223:18;;;8216:30;-1:-1:-1;;;8262:18:11;;;8255:55;8327:18;;3649:71:10;8002:349:11;3649:71:10;3731:24;3773:10;-1:-1:-1;;;;;3758:35:10;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3731:64;;3806:24;3833:55;3853:11;3866:1;3869:18;3833:19;:55::i;:::-;3934:12;;:73;;-1:-1:-1;;;3934:73:10;;-1:-1:-1;;;;;6088:32:11;;;3934:73:10;;;6070:51:11;3978:10:10;6137:18:11;;;6130:60;6206:18;;;6199:34;;;3806:82:10;;-1:-1:-1;3934:12:10;;;;;;;;:31;;6043:18:11;;3934:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4018:5:10;;:39;;-1:-1:-1;;;4018:39:10;;4033:10;4018:39;;;6700:51:11;6767:18;;;6760:34;;;-1:-1:-1;;;;;4018:5:10;;;;-1:-1:-1;4018:14:10;;-1:-1:-1;6673:18:11;;4018:39:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4073:66:10;;;9163:25:11;;;9219:2;9204:18;;9197:34;;;-1:-1:-1;;;;;4073:66:10;;;-1:-1:-1;4085:10:10;;-1:-1:-1;4073:66:10;;9136:18:11;4073:66:10;8989:248:11;4642:138:0;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;2423:125:10:-:0;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;2512:12:10::1;:28:::0;;-1:-1:-1;;;;;;2512:28:10::1;-1:-1:-1::0;;;;;2512:28:10;;;::::1;::::0;;;::::1;::::0;;2423:125::o;3199:103:0:-;3265:30;3276:4;735:10:4;3265::0;:30::i;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:4;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6730:317;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:12;;;;;;;;;;;-1:-1:-1;;;;;6866:29:0;;;;;;;;;;:37;;-1:-1:-1;;6866:37:0;;;6922:40;735:10:4;;6866:12:0;;6922:40;;6898:5;6922:40;-1:-1:-1;6983:4:0;6976:11;;2710:117:5;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:5::1;::::0;;2798:22:::1;735:10:4::0;2807:12:5::1;2798:22;::::0;-1:-1:-1;;;;;3132:32:11;;;3114:51;;3102:2;3087:18;2798:22:5::1;;;;;;;2710:117::o:0;2463:115::-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:14:::0;;-1:-1:-1;;2522:14:5::1;::::0;::::1;::::0;;2551:20:::1;735:10:4::0;2558:12:5::1;656:96:4::0;5999:469:10;6140:14;6189;6171:32;;:14;:32;;;6167:294;;-1:-1:-1;6229:5:10;6167:294;;;6273:14;6256:31;;:14;:31;;;6252:209;;;6327:31;6344:14;6327;:31;:::i;:::-;6322:37;;:2;:37;:::i;:::-;6313:47;;:5;:47;:::i;:::-;6304:56;;6252:209;;;6416:31;6433:14;6416;:31;:::i;:::-;6411:37;;:2;:37;:::i;:::-;6402:47;;:5;:47;:::i;:::-;6393:56;;6252:209;5999:469;;;;;:::o;6476:588::-;6621:14;6670;6652:32;;:14;:32;;;6648:409;;-1:-1:-1;6710:5:10;6648:409;;;6754:14;6737:31;;:14;:31;;;6733:324;;;6808:31;6825:14;6808;:31;:::i;6733:324::-;6874:12;6894:31;6911:14;6894;:31;:::i;:::-;6889:37;;:2;:37;:::i;:::-;6874:52;-1:-1:-1;6950:12:10;6874:52;6950:5;:12;:::i;:::-;6941:21;-1:-1:-1;6981:12:10;6989:4;6981:5;:12;:::i;:::-;:17;6977:69;;7019:11;7029:1;7019:11;;:::i;:::-;;;6977:69;6859:198;6476:588;;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;6718:32:11;;3565:47:0;;;6700:51:11;6767:18;;;6760:34;;;6673:18;;3565:47:0;6526:274:11;3515:108:0;3432:197;;:::o;2202:126:5:-;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:5;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:5;;;;;;;;;;;196:286:11;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;349:23;;-1:-1:-1;;;;;;401:32:11;;391:43;;381:71;;448:1;445;438:12;679:173;747:20;;-1:-1:-1;;;;;796:31:11;;786:42;;776:70;;842:1;839;832:12;776:70;679:173;;;:::o;857:420::-;934:6;942;950;1003:2;991:9;982:7;978:23;974:32;971:52;;;1019:1;1016;1009:12;971:52;1064:23;;;-1:-1:-1;1184:2:11;1169:18;;1156:32;;-1:-1:-1;1233:38:11;1267:2;1252:18;;1233:38;:::i;:::-;1223:48;;857:420;;;;;:::o;1282:186::-;1341:6;1394:2;1382:9;1373:7;1369:23;1365:32;1362:52;;;1410:1;1407;1400:12;1362:52;1433:29;1452:9;1433:29;:::i;1473:226::-;1532:6;1585:2;1573:9;1564:7;1560:23;1556:32;1553:52;;;1601:1;1598;1591:12;1553:52;-1:-1:-1;1646:23:11;;1473:226;-1:-1:-1;1473:226:11:o;1704:541::-;1790:6;1798;1806;1814;1867:3;1855:9;1846:7;1842:23;1838:33;1835:53;;;1884:1;1881;1874:12;1835:53;1929:23;;;-1:-1:-1;2049:2:11;2034:18;;2021:32;;-1:-1:-1;2152:2:11;2137:18;;2124:32;;-1:-1:-1;2201:38:11;2235:2;2220:18;;2201:38;:::i;:::-;2191:48;;1704:541;;;;;;;:::o;2663:300::-;2731:6;2739;2792:2;2780:9;2771:7;2767:23;2763:32;2760:52;;;2808:1;2805;2798:12;2760:52;2853:23;;;-1:-1:-1;2919:38:11;2953:2;2938:18;;2919:38;:::i;:::-;2909:48;;2663:300;;;;;:::o;3176:::-;3244:6;3252;3305:2;3293:9;3284:7;3280:23;3276:32;3273:52;;;3321:1;3318;3311:12;3273:52;3344:29;3363:9;3344:29;:::i;:::-;3334:39;3442:2;3427:18;;;;3414:32;;-1:-1:-1;;;3176:300:11:o;5111:127::-;5172:10;5167:3;5163:20;5160:1;5153:31;5203:4;5200:1;5193:15;5227:4;5224:1;5217:15;5243:135;5282:3;5303:17;;;5300:43;;5323:18;;:::i;:::-;-1:-1:-1;5370:1:11;5359:13;;5243:135::o;5735:128::-;5802:9;;;5823:11;;;5820:37;;;5837:18;;:::i;6244:277::-;6311:6;6364:2;6352:9;6343:7;6339:23;6335:32;6332:52;;;6380:1;6377;6370:12;6332:52;6412:9;6406:16;6465:5;6458:13;6451:21;6444:5;6441:32;6431:60;;6487:1;6484;6477:12;8356:273;8424:6;8477:2;8465:9;8456:7;8452:23;8448:32;8445:52;;;8493:1;8490;8483:12;8445:52;8525:9;8519:16;8575:4;8568:5;8564:16;8557:5;8554:27;8544:55;;8595:1;8592;8585:12;9242:151;9332:4;9325:12;;;9311;;;9307:31;;9350:14;;9347:40;;;9367:18;;:::i;9398:375::-;9486:1;9504:5;9518:249;9539:1;9529:8;9526:15;9518:249;;;9589:4;9584:3;9580:14;9574:4;9571:24;9568:50;;;9598:18;;:::i;:::-;9648:1;9638:8;9634:16;9631:49;;;9662:16;;;;9631:49;9745:1;9741:16;;;;;9701:15;;9518:249;;;9398:375;;;;;;:::o;9778:902::-;9827:5;9857:8;9847:80;;-1:-1:-1;9898:1:11;9912:5;;9847:80;9946:4;9936:76;;-1:-1:-1;9983:1:11;9997:5;;9936:76;10028:4;10046:1;10041:59;;;;10114:1;10109:174;;;;10021:262;;10041:59;10071:1;10062:10;;10085:5;;;10109:174;10146:3;10136:8;10133:17;10130:43;;;10153:18;;:::i;:::-;-1:-1:-1;;10209:1:11;10195:16;;10268:5;;10021:262;;10367:2;10357:8;10354:16;10348:3;10342:4;10339:13;10335:36;10329:2;10319:8;10316:16;10311:2;10305:4;10302:12;10298:35;10295:77;10292:203;;;-1:-1:-1;10404:19:11;;;10480:5;;10292:203;10527:42;-1:-1:-1;;10552:8:11;10546:4;10527:42;:::i;:::-;10605:6;10601:1;10597:6;10593:19;10584:7;10581:32;10578:58;;;10616:18;;:::i;:::-;10654:20;;9778:902;-1:-1:-1;;;9778:902:11:o;10685:140::-;10743:5;10772:47;10813:4;10803:8;10799:19;10793:4;10772:47;:::i;10830:168::-;10903:9;;;10934;;10951:15;;;10945:22;;10931:37;10921:71;;10972:18;;:::i;11003:127::-;11064:10;11059:3;11055:20;11052:1;11045:31;11095:4;11092:1;11085:15;11119:4;11116:1;11109:15;11135:120;11175:1;11201;11191:35;;11206:18;;:::i;:::-;-1:-1:-1;11240:9:11;;11135:120::o;11260:112::-;11292:1;11318;11308:35;;11323:18;;:::i;:::-;-1:-1:-1;11357:9:11;;11260:112::o;11377:125::-;11442:9;;;11463:10;;;11460:36;;;11476:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1172000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "infinite",
								"CROSS_CHAIN_MINTER_ROLE()": "295",
								"DEFAULT_ADMIN_ROLE()": "249",
								"PAUSER_ROLE()": "271",
								"burnWeUSD(address,uint256)": "infinite",
								"burnWeUSDCrossChain(uint256,uint256,address)": "infinite",
								"deleteStablecoin(address)": "infinite",
								"feeRecipient()": "2403",
								"gasfee()": "2330",
								"getLatestRequestId()": "2347",
								"getRoleAdmin(bytes32)": "2545",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2749",
								"isRequestIdUsed(uint256)": "2515",
								"mainContract()": "2391",
								"mintWeUSD(address,uint256)": "infinite",
								"mintWeUSDCrossChain(uint256,uint256,uint256,address)": "infinite",
								"pause()": "infinite",
								"paused()": "2414",
								"registerStablecoin(address)": "infinite",
								"registeredStablecoins(address)": "2573",
								"renounceRole(bytes32,address)": "29108",
								"requestCount()": "2372",
								"revokeRole(bytes32,address)": "infinite",
								"setFeeRecipient(address)": "infinite",
								"setGasfee(uint256)": "infinite",
								"supportsInterface(bytes4)": "503",
								"unpause()": "infinite",
								"usedRequestIds(uint256)": "2515",
								"weUSD()": "2447"
							},
							"internal": {
								"convertDecimals(uint256,uint8,uint8)": "infinite",
								"convertDecimalsCeil(uint256,uint8,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 370,
									"end": 7067,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 782,
									"end": 792,
									"name": "PUSH",
									"source": 10,
									"value": "7A120"
								},
								{
									"begin": 758,
									"end": 792,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 758,
									"end": 792,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1629,
									"end": 2140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1629,
									"end": 2140,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1754,
									"end": 1759,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "AND",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1779,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1790,
									"end": 1825,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1790,
									"end": 1825,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1790,
									"end": 1825,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1790,
									"end": 1825,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1790,
									"end": 1825,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1790,
									"end": 1825,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1790,
									"end": 1825,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1790,
									"end": 1825,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1790,
									"end": 1825,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1867,
									"end": 1877,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1846,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1836,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1878,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1836,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1889,
									"end": 1923,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 503,
									"end": 526,
									"name": "PUSH",
									"source": 10,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 1912,
									"end": 1922,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1889,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1889,
									"end": 1923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1889,
									"end": 1923,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1889,
									"end": 1923,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1934,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 652,
									"end": 688,
									"name": "PUSH",
									"source": 10,
									"value": "41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704"
								},
								{
									"begin": 1970,
									"end": 1987,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1934,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1934,
									"end": 1988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1934,
									"end": 1988,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1934,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1999,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 571,
									"end": 595,
									"name": "PUSH",
									"source": 10,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 2023,
									"end": 2040,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1999,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1999,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1999,
									"end": 2041,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1999,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2073,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2086,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2093,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2093,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2052,
									"end": 2093,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2089,
									"end": 2093,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2052,
									"end": 2093,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2093,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2052,
									"end": 2093,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2116,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "AND",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2132,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 355,
									"end": 408,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 355,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 404,
									"end": 405,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 402,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 394,
									"end": 406,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 355,
									"end": 408,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 457,
									"end": 466,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 427,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 427,
									"end": 467,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 427,
									"end": 467,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 417,
									"end": 467,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 417,
									"end": 467,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 516,
									"end": 534,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 486,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 486,
									"end": 535,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 486,
									"end": 535,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 476,
									"end": 535,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 476,
									"end": 535,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 588,
									"end": 597,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 584,
									"end": 602,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 554,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 554,
									"end": 603,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 554,
									"end": 603,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 544,
									"end": 603,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 667,
									"end": 669,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 656,
									"end": 665,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 652,
									"end": 670,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 622,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 622,
									"end": 671,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 622,
									"end": 671,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 612,
									"end": 671,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 612,
									"end": 671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 724,
									"end": 733,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 720,
									"end": 739,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 690,
									"end": 740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 690,
									"end": 740,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 690,
									"end": 740,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 680,
									"end": 740,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 680,
									"end": 740,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 7067,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc48af6984076926f7567d87875765c8f5b6d6f8080d4c3ed3f97c9b3a8c067e64736f6c634300081a0033",
									".code": [
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "75B238FC"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "B190D8A3"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "D270E7AB"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "D270E7AB"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "E63AB1E9"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "E74B981B"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "B190D8A3"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "C5494FFB"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "C6400657"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "D19FAD37"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "9EA4F3A4"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "9EA4F3A4"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "A2519AE4"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "A62E1B3E"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "75B238FC"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "46904840"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "5BADBE4C"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "2F92893C"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "37174202"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "1008776F"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "1008776F"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "1E7502D7"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "1F224564"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "677016"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "BD31A57"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 7067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 758,
											"end": 792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 758,
											"end": 792,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 792,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 758,
											"end": 792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 792,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 666,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 645,
											"end": 667,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 627,
											"end": 668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 627,
											"end": 668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 618,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 487,
											"end": 674,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4155,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4155,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2749,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2749,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5712,
											"end": 5834,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5712,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5712,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5712,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5712,
											"end": 5834,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5712,
											"end": 5834,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5712,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5712,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5712,
											"end": 5834,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5712,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5815,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5712,
											"end": 5834,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5044,
											"end": 5704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5044,
											"end": 5704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 939,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 893,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 688,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 602,
											"end": 688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 602,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 688,
											"name": "PUSH",
											"source": 10,
											"value": "41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704"
										},
										{
											"begin": 602,
											"end": 688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 602,
											"end": 688,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2306,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2229,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2229,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 2229,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 799,
											"end": 826,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 799,
											"end": 826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 799,
											"end": 826,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 799,
											"end": 826,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 799,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 799,
											"end": 826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 799,
											"end": 826,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 799,
											"end": 826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 799,
											"end": 826,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 799,
											"end": 826,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 799,
											"end": 826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 799,
											"end": 826,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 826,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3132,
											"end": 3164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3132,
											"end": 3164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3132,
											"end": 3164,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3114,
											"end": 3165,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3114,
											"end": 3165,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 799,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2968,
											"end": 3171,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 724,
											"end": 751,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 751,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 724,
											"end": 751,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 724,
											"end": 751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 724,
											"end": 751,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 526,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 466,
											"end": 526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 466,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 466,
											"end": 526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 526,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2221,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2148,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2148,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2148,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 833,
											"end": 886,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 833,
											"end": 886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 833,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 833,
											"end": 886,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 833,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 833,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 833,
											"end": 886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 833,
											"end": 886,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 833,
											"end": 886,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 833,
											"end": 886,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2938,
											"end": 3561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2938,
											"end": 3561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 695,
											"end": 717,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 695,
											"end": 717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 695,
											"end": 717,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 717,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 695,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 695,
											"end": 717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 695,
											"end": 717,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 695,
											"end": 717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 695,
											"end": 717,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5842,
											"end": 5991,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 5842,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5961,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 5967,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5946,
											"end": 5967,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "CHAINID",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 5941,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5968,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5983,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5842,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5991,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2314,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2314,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2556,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2556,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 3569,
											"end": 4147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3569,
											"end": 4147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 426,
											"end": 459,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 426,
											"end": 459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 426,
											"end": 459,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 426,
											"end": 459,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 426,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 426,
											"end": 459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 426,
											"end": 459,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 426,
											"end": 459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 426,
											"end": 459,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 426,
											"end": 459,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 426,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 426,
											"end": 459,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 595,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 533,
											"end": 595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 533,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 595,
											"name": "PUSH",
											"source": 10,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 533,
											"end": 595,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 533,
											"end": 595,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2423,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2423,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4301,
											"name": "CHAINID",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4301,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4140,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4178,
											"name": "PUSH",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4149,
											"end": 4179,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4215,
											"end": 4249,
											"name": "PUSH",
											"source": 11,
											"value": "54617267657420636861696E206D75737420626520646966666572656E742066"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3937B69039B7BAB931B29031B430B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4259,
											"end": 4305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4341,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4322,
											"end": 4341,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4263,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4556,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4536,
											"end": 4557,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 4573,
											"end": 4591,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4573,
											"end": 4591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4573,
											"end": 4591,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4596,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4666,
											"name": "PUSH",
											"source": 11,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2067617366"
										},
										{
											"begin": 4612,
											"end": 4630,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4612,
											"end": 4630,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4612,
											"end": 4630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4605,
											"end": 4667,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4683,
											"end": 4701,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4683,
											"end": 4701,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4701,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4676,
											"end": 4708,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4725,
											"end": 4744,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4725,
											"end": 4744,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4352,
											"end": 4750,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4446,
											"end": 4470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4470,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4939,
											"end": 4960,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4996,
											"end": 4998,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 4999,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5035,
											"end": 5064,
											"name": "PUSH",
											"source": 11,
											"value": "496E76616C696420746172676574207573657220616464726573730000000000"
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5008,
											"end": 5065,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4755,
											"end": 5106,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4438,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4550,
											"name": "CHAINID",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4646,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4634,
											"end": 4646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 4632,
											"end": 4646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4607,
											"end": 4622,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4628,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4628,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4599,
											"end": 4602,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4582,
											"end": 4602,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4582,
											"end": 4602,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4582,
											"end": 4602,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4629,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4646,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4680,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4666,
											"end": 4691,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4665,
											"end": 4691,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5588,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14995C5D595CDD08125108185B1C9958591E481D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5636,
											"end": 5689,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5706,
											"end": 5724,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5706,
											"end": 5724,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5383,
											"end": 5730,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4657,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4744,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4762,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4762,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4730,
											"end": 4762,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4730,
											"end": 4762,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4762,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4762,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 4809,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4803,
											"end": 4809,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4794,
											"end": 4809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 4794,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4809,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4794,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4849,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6121,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6121,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6121,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6121,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6130,
											"end": 6190,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6233,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4809,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4809,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 4820,
											"end": 4872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 4820,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4883,
											"end": 4888,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4883,
											"end": 4888,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79CC679"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4908,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4883,
											"end": 4888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4888,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4897,
											"name": "PUSH",
											"source": 10,
											"value": "79CC6790"
										},
										{
											"begin": 4883,
											"end": 4897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 4883,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7077,
											"end": 7095,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7077,
											"end": 7095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7070,
											"end": 7104,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 7070,
											"end": 7104,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7070,
											"end": 7104,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7147,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7147,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7183,
											"end": 7215,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7183,
											"end": 7215,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7178,
											"end": 7180,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7163,
											"end": 7181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7163,
											"end": 7181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7156,
											"end": 7216,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4963,
											"end": 4973,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4963,
											"end": 4973,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "PUSH",
											"source": 10,
											"value": "26C32CC5FF12981B55681844F2FB47D52C5E521C58D5288B1325F3304A7E8852"
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7026,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 5028,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 5036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 5036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 5036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 5036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 5036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2836,
											"end": 2869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2869,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2836,
											"end": 2869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2869,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2869,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2869,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2877,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2836,
											"end": 2877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2877,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2893,
											"end": 2922,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2893,
											"end": 2922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FA63555FE68CAD70E08233633567493A3C74AFDC8C7FB9F0C03A8E74F1A137A"
										},
										{
											"begin": 2893,
											"end": 2922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2893,
											"end": 2922,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 652,
											"end": 688,
											"name": "PUSH",
											"source": 10,
											"value": "41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5239,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5239,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5214,
											"end": 5239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5239,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5239,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5214,
											"end": 5239,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5239,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5239,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5214,
											"end": 5239,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5239,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5205,
											"end": 5267,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5267,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5205,
											"end": 5267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5205,
											"end": 5267,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5267,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5588,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14995C5D595CDD08125108185B1C9958591E481D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5636,
											"end": 5689,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5706,
											"end": 5724,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5706,
											"end": 5724,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5205,
											"end": 5267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5383,
											"end": 5730,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5205,
											"end": 5267,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5205,
											"end": 5267,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5316,
											"modifierDepth": 1,
											"name": "CHAINID",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5299,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5316,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5278,
											"end": 5369,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5278,
											"end": 5369,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5278,
											"end": 5369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5369,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7431,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5278,
											"end": 5369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5278,
											"end": 5369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7411,
											"end": 7432,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7470,
											"name": "PUSH",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7441,
											"end": 7471,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7507,
											"end": 7541,
											"name": "PUSH",
											"source": 11,
											"value": "536F7572636520636861696E206D75737420626520646966666572656E742066"
										},
										{
											"begin": 7487,
											"end": 7505,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7487,
											"end": 7505,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7505,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7480,
											"end": 7542,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3937B6903A30B933B2BA1031B430B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7551,
											"end": 7597,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7614,
											"end": 7633,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 7614,
											"end": 7633,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 7227,
											"end": 7639,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5278,
											"end": 5369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5394,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5388,
											"end": 5398,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5380,
											"end": 5432,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5380,
											"end": 5432,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5432,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7846,
											"end": 7848,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5380,
											"end": 5432,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5432,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7849,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7885,
											"end": 7887,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 7865,
											"end": 7883,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7865,
											"end": 7883,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7883,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7858,
											"end": 7888,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7924,
											"end": 7955,
											"name": "PUSH",
											"source": 11,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7897,
											"end": 7956,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5380,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 7644,
											"end": 7997,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5380,
											"end": 5432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5380,
											"end": 5432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5451,
											"end": 5475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5443,
											"end": 5507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 5443,
											"end": 5507,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5443,
											"end": 5507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5507,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5507,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5443,
											"end": 5507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5443,
											"end": 5507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5443,
											"end": 5507,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4939,
											"end": 4960,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4996,
											"end": 4998,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 4999,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5035,
											"end": 5064,
											"name": "PUSH",
											"source": 11,
											"value": "496E76616C696420746172676574207573657220616464726573730000000000"
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5008,
											"end": 5065,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4755,
											"end": 5106,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 5443,
											"end": 5507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5518,
											"end": 5543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5550,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5550,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5550,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5546,
											"end": 5550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5518,
											"end": 5550,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5550,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5561,
											"end": 5566,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5561,
											"end": 5591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6718,
											"end": 6750,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6718,
											"end": 6750,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6718,
											"end": 6750,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5561,
											"end": 5591,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5561,
											"end": 5566,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5566,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5566,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 5561,
											"end": 5571,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5591,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5591,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 5561,
											"end": 5591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5609,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5609,
											"end": 5696,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5696,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5662,
											"end": 5675,
											"modifierDepth": 1,
											"name": "CHAINID",
											"source": 10
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7077,
											"end": 7095,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7077,
											"end": 7095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7070,
											"end": 7104,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7147,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7147,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7183,
											"end": 7215,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7183,
											"end": 7215,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7178,
											"end": 7180,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7163,
											"end": 7181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7163,
											"end": 7181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7156,
											"end": 7216,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5645,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5624,
											"end": 5633,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5624,
											"end": 5633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5609,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7690D9CEDF96F067BDA7114C24BBA31BE184AE045D199979A0A373862E70D46B"
										},
										{
											"begin": 5609,
											"end": 5696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7026,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5609,
											"end": 5696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5696,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2306,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 2229,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 571,
											"end": 595,
											"name": "PUSH",
											"source": 10,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2288,
											"end": 2296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2288,
											"end": 2298,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2288,
											"end": 2298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2221,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2148,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 571,
											"end": 595,
											"name": "PUSH",
											"source": 10,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2205,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2205,
											"end": 2213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3052,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8204,
											"end": 8206,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8186,
											"end": 8207,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8243,
											"end": 8245,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8216,
											"end": 8246,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8310,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 8002,
											"end": 8351,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3132,
											"end": 3167,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3167,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3132,
											"end": 3169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 3132,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 3218,
											"end": 3234,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3254,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3257,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3202,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3202,
											"end": 3258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3202,
											"end": 3258,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 3202,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3362,
											"end": 3374,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3362,
											"end": 3374,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3352,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6121,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3362,
											"end": 3374,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3362,
											"end": 3374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3362,
											"end": 3374,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3362,
											"end": 3374,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3362,
											"end": 3374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3362,
											"end": 3374,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6130,
											"end": 6190,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6233,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6233,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6233,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3180,
											"end": 3258,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3258,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3310,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 3310,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8838,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8839,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8848,
											"end": 8878,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8942,
											"name": "PUSH",
											"source": 11,
											"value": "537461626C65636F696E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8887,
											"end": 8943,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8960,
											"end": 8978,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8960,
											"end": 8978,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 8634,
											"end": 8984,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3302,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3457,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3446,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 3436,
											"end": 3446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3436,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9188,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9163,
											"end": 9188,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9163,
											"end": 9188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9219,
											"end": 9221,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3509,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3509,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "PUSH",
											"source": 10,
											"value": "66C62F0863782653C5C44E10BF21D9DEF60984CE20D9F75549575A8910896587"
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9136,
											"end": 9154,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3553,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2391,
											"end": 2397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2391,
											"end": 2407,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2678,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2645,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2685,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2685,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2645,
											"end": 2685,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2645,
											"end": 2685,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2685,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2685,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2733,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D8B2DC62B787EC8AFBC8A664CF2FD7C1E7851721ACC9E0069132CECE3C529C2E"
										},
										{
											"begin": 2701,
											"end": 2733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2733,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3569,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3678,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8204,
											"end": 8206,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8186,
											"end": 8207,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8243,
											"end": 8245,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8216,
											"end": 8246,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8310,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 8002,
											"end": 8351,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3793,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3793,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3758,
											"end": 3795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3758,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3853,
											"end": 3864,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3866,
											"end": 3867,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3833,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3833,
											"end": 3888,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3833,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1795588D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6088,
											"end": 6120,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6120,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6121,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 3988,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6130,
											"end": 6190,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6233,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6233,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6233,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3806,
											"end": 3888,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3888,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3965,
											"name": "PUSH",
											"source": 10,
											"value": "5E556234"
										},
										{
											"begin": 3934,
											"end": 3965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3934,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4018,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4018,
											"end": 4023,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79CC679"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4043,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4018,
											"end": 4023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4023,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4018,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "79CC6790"
										},
										{
											"begin": 4018,
											"end": 4032,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4073,
											"end": 4139,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4073,
											"end": 4139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4139,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9188,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9163,
											"end": 9188,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9163,
											"end": 9188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9219,
											"end": 9221,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4073,
											"end": 4139,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4139,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4139,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4085,
											"end": 4095,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4095,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4073,
											"end": 4139,
											"name": "PUSH",
											"source": 10,
											"value": "3D9842CBDFA603AB9534D6E362BF28B3061318F57FED5E7087DFC956A9D74442"
										},
										{
											"begin": 4073,
											"end": 4139,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9136,
											"end": 9154,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 8989,
											"end": 9237,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2423,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2512,
											"end": 2540,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2540,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2512,
											"end": 2540,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2512,
											"end": 2540,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2540,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2540,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2540,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2540,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3132,
											"end": 3164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3132,
											"end": 3164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3132,
											"end": 3164,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3114,
											"end": 3165,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3114,
											"end": 3165,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5999,
											"end": 6468,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5999,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6140,
											"end": 6154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6203,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6185,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6167,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 6167,
											"end": 6461,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6229,
											"end": 6234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6167,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6167,
											"end": 6461,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6167,
											"end": 6461,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 6167,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6273,
											"end": 6287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6287,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6256,
											"end": 6287,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6270,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6287,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6256,
											"end": 6287,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6287,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6461,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 6252,
											"end": 6461,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6344,
											"end": 6358,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6341,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 6327,
											"end": 6358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6358,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6327,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6322,
											"end": 6359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6324,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 6322,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6322,
											"end": 6359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6359,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6322,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6313,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 6313,
											"end": 6360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6313,
											"end": 6318,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6313,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 6313,
											"end": 6360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6313,
											"end": 6360,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 6313,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6252,
											"end": 6461,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6461,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 6252,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 6433,
											"end": 6447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6430,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 6416,
											"end": 6447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6447,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 6416,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 6411,
											"end": 6448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6413,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 6411,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6411,
											"end": 6448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6448,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 6411,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 6402,
											"end": 6449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6407,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 6402,
											"end": 6449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6449,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 6402,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6393,
											"end": 6449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6393,
											"end": 6449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6461,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6252,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6468,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6468,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 7064,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 6476,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6621,
											"end": 6635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6684,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6684,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6652,
											"end": 6684,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6684,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6652,
											"end": 6684,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6684,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6648,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6648,
											"end": 7057,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6710,
											"end": 6715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6648,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6648,
											"end": 7057,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6648,
											"end": 7057,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6648,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6754,
											"end": 6768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6768,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6737,
											"end": 6768,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6751,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6768,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6737,
											"end": 6768,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6768,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 7057,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6733,
											"end": 7057,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6825,
											"end": 6839,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6822,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 6808,
											"end": 6839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 7057,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6733,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 6886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 6911,
											"end": 6925,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6894,
											"end": 6908,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6894,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 6894,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6894,
											"end": 6925,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 6894,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 6889,
											"end": 6926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 6891,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 6889,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6889,
											"end": 6926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 6926,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 6889,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 6926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6950,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 6874,
											"end": 6926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6955,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 6950,
											"end": 6962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6962,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 6950,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 6962,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6981,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 6989,
											"end": 6993,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 6986,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 6981,
											"end": 6993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 6993,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 6981,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 6998,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 6977,
											"end": 7046,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 7029,
											"end": 7030,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7019,
											"end": 7030,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 7019,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7030,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 7019,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7046,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 6977,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 7057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 7064,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 7064,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 7064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 7064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 7064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 7064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6718,
											"end": 6750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6718,
											"end": 6750,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6700,
											"end": 6751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6526,
											"end": 6800,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 196,
											"end": 482,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 196,
											"end": 482,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 349,
											"end": 372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 401,
											"end": 433,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 401,
											"end": 433,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 391,
											"end": 434,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 391,
											"end": 434,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 381,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 381,
											"end": 452,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 448,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 450,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 679,
											"end": 852,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 679,
											"end": 852,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 747,
											"end": 767,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 747,
											"end": 767,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 796,
											"end": 827,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 796,
											"end": 827,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 786,
											"end": 828,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 786,
											"end": 828,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 776,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 776,
											"end": 846,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 832,
											"end": 844,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 776,
											"end": 846,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 776,
											"end": 846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 679,
											"end": 852,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 679,
											"end": 852,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 679,
											"end": 852,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 679,
											"end": 852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 934,
											"end": 940,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 950,
											"end": 956,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1005,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 982,
											"end": 989,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 978,
											"end": 1001,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 974,
											"end": 1006,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 971,
											"end": 1023,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 971,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 971,
											"end": 1023,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1017,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1009,
											"end": 1021,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 971,
											"end": 1023,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 971,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1064,
											"end": 1087,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1064,
											"end": 1087,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1064,
											"end": 1087,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1184,
											"end": 1186,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1188,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1233,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 1233,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1233,
											"end": 1271,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 1233,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1271,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 857,
											"end": 1277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1468,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1282,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1396,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1391,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1369,
											"end": 1392,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1365,
											"end": 1397,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1412,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 1433,
											"end": 1462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1699,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1473,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1532,
											"end": 1538,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1582,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1571,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1556,
											"end": 1588,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1553,
											"end": 1605,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1553,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 1553,
											"end": 1605,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1591,
											"end": 1603,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1553,
											"end": 1605,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 1553,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1669,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1669,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1699,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1473,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1806,
											"end": 1812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1867,
											"end": 1870,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1853,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1842,
											"end": 1865,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1838,
											"end": 1871,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1888,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 1835,
											"end": 1888,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1882,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 1886,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1888,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 1835,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 1952,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 1952,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 1952,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2021,
											"end": 2053,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2021,
											"end": 2053,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2156,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2124,
											"end": 2156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2201,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 2201,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2239,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 2201,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2239,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2239,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2663,
											"end": 2963,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 2663,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2737,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2745,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2792,
											"end": 2794,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 2789,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2771,
											"end": 2778,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2767,
											"end": 2790,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2795,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2812,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 2760,
											"end": 2812,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2809,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2798,
											"end": 2810,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2812,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 2760,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2919,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 2953,
											"end": 2955,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 2956,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2938,
											"end": 2956,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2919,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 2919,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2919,
											"end": 2957,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 2919,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2909,
											"end": 2957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2909,
											"end": 2957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2663,
											"end": 2963,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2663,
											"end": 2963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2663,
											"end": 2963,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2663,
											"end": 2963,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2663,
											"end": 2963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2663,
											"end": 2963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 3476,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3176,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3307,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3291,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3280,
											"end": 3303,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3308,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3273,
											"end": 3325,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3273,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 3273,
											"end": 3325,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3273,
											"end": 3325,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 3273,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 3363,
											"end": 3372,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 3344,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3334,
											"end": 3373,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3442,
											"end": 3444,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3446,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3446,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3176,
											"end": 3476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5238,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 5111,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5172,
											"end": 5182,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 5167,
											"end": 5170,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5184,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5203,
											"end": 5207,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5200,
											"end": 5201,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5193,
											"end": 5208,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5227,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5224,
											"end": 5225,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5217,
											"end": 5232,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5378,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 5243,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5282,
											"end": 5285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5320,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5303,
											"end": 5320,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5320,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5300,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 5300,
											"end": 5343,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 5323,
											"end": 5341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5359,
											"end": 5372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5359,
											"end": 5372,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5735,
											"end": 5863,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 5735,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5802,
											"end": 5811,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5802,
											"end": 5811,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5802,
											"end": 5811,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5823,
											"end": 5834,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5823,
											"end": 5834,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5823,
											"end": 5834,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5857,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5820,
											"end": 5857,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5837,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5837,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 5837,
											"end": 5855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6244,
											"end": 6521,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 6244,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6311,
											"end": 6317,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6366,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6343,
											"end": 6350,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6339,
											"end": 6362,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6335,
											"end": 6367,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6384,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 6332,
											"end": 6384,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6380,
											"end": 6381,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6378,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6370,
											"end": 6382,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6384,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 6332,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6412,
											"end": 6421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6406,
											"end": 6422,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6465,
											"end": 6470,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6458,
											"end": 6471,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6472,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6441,
											"end": 6473,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6431,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 6431,
											"end": 6491,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6487,
											"end": 6488,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6485,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8356,
											"end": 8629,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 8356,
											"end": 8629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8424,
											"end": 8430,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8479,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8465,
											"end": 8474,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8456,
											"end": 8463,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8452,
											"end": 8475,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8448,
											"end": 8480,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8445,
											"end": 8497,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8445,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 8445,
											"end": 8497,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8493,
											"end": 8494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8490,
											"end": 8491,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8483,
											"end": 8495,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8445,
											"end": 8497,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 8445,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8525,
											"end": 8534,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8519,
											"end": 8535,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8575,
											"end": 8579,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8568,
											"end": 8573,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8564,
											"end": 8580,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 8562,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8554,
											"end": 8581,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 8544,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 8544,
											"end": 8599,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8592,
											"end": 8593,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8585,
											"end": 8597,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9242,
											"end": 9393,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 9242,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9336,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 9325,
											"end": 9337,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9325,
											"end": 9337,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9325,
											"end": 9337,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9311,
											"end": 9323,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9311,
											"end": 9323,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9311,
											"end": 9323,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9307,
											"end": 9338,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9307,
											"end": 9338,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9350,
											"end": 9364,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9350,
											"end": 9364,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9347,
											"end": 9387,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9347,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 9347,
											"end": 9387,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9367,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 9367,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 9367,
											"end": 9385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9773,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 9398,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9487,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9504,
											"end": 9509,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9518,
											"end": 9767,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 9518,
											"end": 9767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9539,
											"end": 9540,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9529,
											"end": 9537,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9526,
											"end": 9541,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9518,
											"end": 9767,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9518,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 9518,
											"end": 9767,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9589,
											"end": 9593,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9580,
											"end": 9594,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 9574,
											"end": 9578,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9595,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9568,
											"end": 9618,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9568,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 9568,
											"end": 9618,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9598,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 9598,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 9598,
											"end": 9616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9598,
											"end": 9616,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 9598,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9648,
											"end": 9649,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9638,
											"end": 9646,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9631,
											"end": 9680,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9631,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 9631,
											"end": 9680,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9662,
											"end": 9678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9662,
											"end": 9678,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9662,
											"end": 9678,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9662,
											"end": 9678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9631,
											"end": 9680,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 9631,
											"end": 9680,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9745,
											"end": 9746,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9741,
											"end": 9757,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 9757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 9757,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 9757,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 9757,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9701,
											"end": 9716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9701,
											"end": 9716,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9518,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 9518,
											"end": 9767,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9518,
											"end": 9767,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 9518,
											"end": 9767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9773,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9773,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9773,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9778,
											"end": 10680,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 9778,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9827,
											"end": 9832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9857,
											"end": 9865,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9847,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9847,
											"end": 9927,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9898,
											"end": 9899,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9912,
											"end": 9917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 9912,
											"end": 9917,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9847,
											"end": 9927,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9847,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9946,
											"end": 9950,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9936,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 9936,
											"end": 10012,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9997,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 9997,
											"end": 10002,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9936,
											"end": 10012,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 9936,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10028,
											"end": 10032,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10046,
											"end": 10047,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10041,
											"end": 10100,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10041,
											"end": 10100,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 10041,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 10041,
											"end": 10100,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10109,
											"end": 10283,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10283,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10109,
											"end": 10283,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10021,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 10021,
											"end": 10283,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10041,
											"end": 10100,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 10041,
											"end": 10100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10071,
											"end": 10072,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10062,
											"end": 10072,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10062,
											"end": 10072,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10085,
											"end": 10090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10085,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 10085,
											"end": 10090,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10283,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10109,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10146,
											"end": 10149,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 10136,
											"end": 10144,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10133,
											"end": 10150,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10130,
											"end": 10173,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10130,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 10130,
											"end": 10173,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 10153,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 10153,
											"end": 10171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10171,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 10153,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 10268,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 10268,
											"end": 10273,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10021,
											"end": 10283,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 10021,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10021,
											"end": 10283,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10367,
											"end": 10369,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10357,
											"end": 10365,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10354,
											"end": 10370,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10348,
											"end": 10351,
											"name": "PUSH",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 10342,
											"end": 10346,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10339,
											"end": 10352,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10335,
											"end": 10371,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10329,
											"end": 10331,
											"name": "PUSH",
											"source": 11,
											"value": "4E"
										},
										{
											"begin": 10319,
											"end": 10327,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10316,
											"end": 10332,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10311,
											"end": 10313,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 10305,
											"end": 10309,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10302,
											"end": 10314,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10298,
											"end": 10333,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10295,
											"end": 10372,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10292,
											"end": 10495,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10292,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 10292,
											"end": 10495,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10404,
											"end": 10423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10404,
											"end": 10423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10404,
											"end": 10423,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 10480,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 10480,
											"end": 10485,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10292,
											"end": 10495,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 10292,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10527,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10552,
											"end": 10560,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10546,
											"end": 10550,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10527,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 10527,
											"end": 10569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10527,
											"end": 10569,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 10527,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10605,
											"end": 10611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10601,
											"end": 10602,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10597,
											"end": 10603,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 10593,
											"end": 10612,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10584,
											"end": 10591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10581,
											"end": 10613,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10578,
											"end": 10636,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10578,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 10578,
											"end": 10636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 10616,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 10616,
											"end": 10634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10634,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 10616,
											"end": 10634,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10654,
											"end": 10674,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10654,
											"end": 10674,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9778,
											"end": 10680,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9778,
											"end": 10680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10685,
											"end": 10825,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 10685,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10743,
											"end": 10748,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 10813,
											"end": 10817,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10793,
											"end": 10797,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10772,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 10772,
											"end": 10819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10830,
											"end": 10998,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 10830,
											"end": 10998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10903,
											"end": 10912,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10903,
											"end": 10912,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10903,
											"end": 10912,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 10943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 10943,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 10966,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 10966,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 10966,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10945,
											"end": 10967,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10945,
											"end": 10967,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 10931,
											"end": 10968,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10921,
											"end": 10992,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 10921,
											"end": 10992,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10972,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 10972,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 10972,
											"end": 10990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11003,
											"end": 11130,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 11003,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11064,
											"end": 11074,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 11059,
											"end": 11062,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 11055,
											"end": 11075,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 11052,
											"end": 11053,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11076,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11095,
											"end": 11099,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 11092,
											"end": 11093,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11085,
											"end": 11100,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11119,
											"end": 11123,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11116,
											"end": 11117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11124,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11135,
											"end": 11255,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 11135,
											"end": 11255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11175,
											"end": 11176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11201,
											"end": 11202,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 11191,
											"end": 11226,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 11206,
											"end": 11224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11240,
											"end": 11249,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 11240,
											"end": 11249,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11135,
											"end": 11255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11260,
											"end": 11372,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 11260,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11318,
											"end": 11319,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11308,
											"end": 11343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 11308,
											"end": 11343,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 11323,
											"end": 11341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11357,
											"end": 11366,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 11357,
											"end": 11366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11260,
											"end": 11372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11377,
											"end": 11502,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 11377,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11451,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11451,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11451,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11463,
											"end": 11473,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11463,
											"end": 11473,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11463,
											"end": 11473,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11460,
											"end": 11496,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11460,
											"end": 11496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 11460,
											"end": 11496,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 11476,
											"end": 11494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/weusd/IMainContract.sol",
								"contracts/weusd/IPicweUSD.sol",
								"contracts/weusd/manageusd.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"CROSS_CHAIN_MINTER_ROLE()": "37174202",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"PAUSER_ROLE()": "e63ab1e9",
							"burnWeUSD(address,uint256)": "d19fad37",
							"burnWeUSDCrossChain(uint256,uint256,address)": "0bd31a57",
							"deleteStablecoin(address)": "1008776f",
							"feeRecipient()": "46904840",
							"gasfee()": "00677016",
							"getLatestRequestId()": "b190d8a3",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isRequestIdUsed(uint256)": "1e7502d7",
							"mainContract()": "d270e7ab",
							"mintWeUSD(address,uint256)": "a2519ae4",
							"mintWeUSDCrossChain(uint256,uint256,uint256,address)": "1f224564",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"registerStablecoin(address)": "c6400657",
							"registeredStablecoins(address)": "9ea4f3a4",
							"renounceRole(bytes32,address)": "36568abe",
							"requestCount()": "5badbe4c",
							"revokeRole(bytes32,address)": "d547741f",
							"setFeeRecipient(address)": "e74b981b",
							"setGasfee(uint256)": "c5494ffb",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unpause()": "3f4ba83a",
							"usedRequestIds(uint256)": "2f92893c",
							"weUSD()": "a62e1b3e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weUSD\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_crossChainMinter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_main\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weUSDAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stablecoinAmount\",\"type\":\"uint256\"}],\"name\":\"BurnedWeUSD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetUser\",\"type\":\"address\"}],\"name\":\"CrossChainBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetUser\",\"type\":\"address\"}],\"name\":\"CrossChainMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stablecoinAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weUSDAmount\",\"type\":\"uint256\"}],\"name\":\"MintedWeUSD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"}],\"name\":\"StablecoinDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"}],\"name\":\"StablecoinRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CROSS_CHAIN_MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weUSDAmount\",\"type\":\"uint256\"}],\"name\":\"burnWeUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"targetUser\",\"type\":\"address\"}],\"name\":\"burnWeUSDCrossChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"}],\"name\":\"deleteStablecoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"isRequestIdUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainContract\",\"outputs\":[{\"internalType\":\"contract IMainContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stablecoinAmount\",\"type\":\"uint256\"}],\"name\":\"mintWeUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"targetUser\",\"type\":\"address\"}],\"name\":\"mintWeUSDCrossChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"}],\"name\":\"registerStablecoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registeredStablecoins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasfee\",\"type\":\"uint256\"}],\"name\":\"setGasfee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedRequestIds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weUSD\",\"outputs\":[{\"internalType\":\"contract IPicweUSD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/weusd/manageusd.sol\":\"weUSD_manager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/weusd/IMainContract.sol\":{\"keccak256\":\"0x9b7ab6959d856e16823cde7e1e20a93fa5704ea016f41891cf462fb389224cf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b02e889d923d01ef0a0c3573b1e2b6383e44f12d64578b0b0c890caa4d2ded0\",\"dweb:/ipfs/QmbMZcqQZuV8rJgJMmmUp3xgTzQggRLx4FhQwLKyjKXLoJ\"]},\"contracts/weusd/IPicweUSD.sol\":{\"keccak256\":\"0xca916d69b6d6e91272bdbf75d78ab96a83c86f619d847916c4b1cd1c91830870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89fecb9f4008c4ee310666ddbc8d4a2d60736c0596bef739212c3f4cc418a01a\",\"dweb:/ipfs/QmWZP6ZFXAyk6KoXryvP8Cb5j9NuSKyZYFchsTXUZPVNiz\"]},\"contracts/weusd/manageusd.sol\":{\"keccak256\":\"0x24c9324d1e3961a89519493ce49570e79a040b0401630c994711e571a0062478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://338cd4ca51ec10114f5cdce07471db571961e3ed2ee4762296f354959c0b96d1\",\"dweb:/ipfs/QmesdPH3eq6aqsmQgKoUSJZXv3tVzrPdJ4Y15wQswLruXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 521,
								"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 712,
								"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
								"label": "mainContract",
								"offset": 1,
								"slot": "1",
								"type": "t_contract(IMainContract)677"
							},
							{
								"astId": 730,
								"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
								"label": "weUSD",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IPicweUSD)697"
							},
							{
								"astId": 732,
								"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
								"label": "requestCount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 741,
								"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
								"label": "gasfee",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 743,
								"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
								"label": "feeRecipient",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 747,
								"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
								"label": "registeredStablecoins",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 751,
								"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
								"label": "usedRequestIds",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMainContract)677": {
								"encoding": "inplace",
								"label": "contract IMainContract",
								"numberOfBytes": "20"
							},
							"t_contract(IPicweUSD)697": {
								"encoding": "inplace",
								"label": "contract IPicweUSD",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/weusd/manageusd.sol:weUSD_manager",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							512
						],
						"ERC165": [
							653
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 513,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 512,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 654,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 653,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 512,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 653,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								653,
								665,
								378,
								512
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										652
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 652,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 456,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 456,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 456,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 456,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 456,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 456,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						],
						"IERC20Metadata": [
							482
						]
					},
					"id": 483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 483,
							"sourceUnit": 457,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 459,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 456,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 462,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 456,
										"src": "305:6:3"
									},
									"id": 463,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 482,
							"linearizedBaseContracts": [
								482,
								456
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 482,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 482,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 482,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 483,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							512
						]
					},
					"id": 513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 484,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 485,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 490,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 489,
												"id": 492,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 512,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 499,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 498,
												"id": 501,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 512,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 507,
												"id": 509,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 512,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 513,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							512
						],
						"Pausable": [
							629
						]
					},
					"id": 630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 513,
							"src": "128:45:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 515,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 512,
										"src": "136:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 518,
										"name": "Context",
										"nameLocations": [
											"645:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 512,
										"src": "645:7:5"
									},
									"id": 519,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:5"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 517,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:5",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 629,
							"linearizedBaseContracts": [
								629,
								512
							],
							"name": "Pausable",
							"nameLocation": "633:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 521,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 629,
									"src": "659:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 520,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:5",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 526,
									"name": "Paused",
									"nameLocation": "770:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "777:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:5"
									},
									"src": "764:30:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:5",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 531,
									"name": "Unpaused",
									"nameLocation": "881:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "890:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:5"
									},
									"src": "875:32:5"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:5",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 534,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:5"
									},
									"src": "994:22:5"
								},
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:5",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 537,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:5"
									},
									"src": "1107:22:5"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "1221:32:5",
										"statements": [
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 541,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1231:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:5",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 546,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:5"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:5"
									},
									"scope": 629,
									"src": "1207:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "1464:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 549,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "1474:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:5"
											},
											{
												"id": 552,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:5"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:5",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 554,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:5"
									},
									"src": "1439:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1711:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 557,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "1721:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:5"
											},
											{
												"id": 560,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:5",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 562,
									"name": "whenPaused",
									"nameLocation": "1698:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:5"
									},
									"src": "1689:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "1903:31:5",
										"statements": [
											{
												"expression": {
													"id": 568,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 521,
													"src": "1920:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 567,
												"id": 569,
												"nodeType": "Return",
												"src": "1913:14:5"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:5",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1897:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:5"
									},
									"scope": 629,
									"src": "1850:84:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "2053:77:5",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 575,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "2067:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 581,
												"nodeType": "IfStatement",
												"src": "2063:61:5",
												"trueBody": {
													"id": 580,
													"nodeType": "Block",
													"src": "2077:47:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 577,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "2098:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 579,
															"nodeType": "RevertStatement",
															"src": "2091:22:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:5",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:5"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:5"
									},
									"scope": 629,
									"src": "2002:128:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "2250:78:5",
										"statements": [
											{
												"condition": {
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:5",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 587,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "2265:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "2260:62:5",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "2275:47:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 590,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "2296:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 592,
															"nodeType": "RevertStatement",
															"src": "2289:22:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:5",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:5"
									},
									"scope": 629,
									"src": "2202:126:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "2512:66:5",
										"statements": [
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 602,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2522:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 607,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "2558:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 606,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2551:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "EmitStatement",
												"src": "2546:25:5"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:5",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 600,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 599,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 554,
												"src": "2498:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:5"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:5"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:5"
									},
									"scope": 629,
									"src": "2463:115:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "2758:69:5",
										"statements": [
											{
												"expression": {
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 618,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2768:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 623,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "2807:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 622,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2798:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "EmitStatement",
												"src": "2793:27:5"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:5",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 616,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 615,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 562,
												"src": "2747:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:5"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:5"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:5"
									},
									"scope": 629,
									"src": "2710:117:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 630,
							"src": "615:2214:5",
							"usedErrors": [
								534,
								537
							],
							"usedEvents": [
								526,
								531
							]
						}
					],
					"src": "102:2728:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							653
						],
						"IERC165": [
							665
						]
					},
					"id": 654,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 654,
							"sourceUnit": 666,
							"src": "140:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 632,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 665,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 635,
										"name": "IERC165",
										"nameLocations": [
											"687:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "687:7:6"
									},
									"id": 636,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 653,
							"linearizedBaseContracts": [
								653,
								665
							],
							"name": "ERC165",
							"nameLocation": "677:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										664
									],
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "844:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "861:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 646,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "881:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$665_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$665_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 645,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$665",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 643,
												"id": 650,
												"nodeType": "Return",
												"src": "854:47:6"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "789:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 638,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:6"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "838:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:6"
									},
									"scope": 653,
									"src": "762:146:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 654,
							"src": "659:251:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							665
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 655,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 656,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 665,
							"linearizedBaseContracts": [
								665
							],
							"name": "IERC165",
							"nameLocation": "431:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "817:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 658,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:7"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "860:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:7"
									},
									"scope": 665,
									"src": "790:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 666,
							"src": "421:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:7"
				},
				"id": 7
			},
			"contracts/weusd/IMainContract.sol": {
				"ast": {
					"absolutePath": "contracts/weusd/IMainContract.sol",
					"exportedSymbols": {
						"IMainContract": [
							677
						]
					},
					"id": 678,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMainContract",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 677,
							"linearizedBaseContracts": [
								677
							],
							"name": "IMainContract",
							"nameLocation": "78:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5e556234",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferStableCoin",
									"nameLocation": "108:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "135:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "127:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "150:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "142:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "162:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "154:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:43:8"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:0:8"
									},
									"scope": 677,
									"src": "99:80:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 678,
							"src": "68:114:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:149:8"
				},
				"id": 8
			},
			"contracts/weusd/IPicweUSD.sol": {
				"ast": {
					"absolutePath": "contracts/weusd/IPicweUSD.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						],
						"IPicweUSD": [
							697
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 679,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 457,
							"src": "68:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 681,
										"name": "IERC20",
										"nameLocations": [
											"151:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 456,
										"src": "151:6:9"
									},
									"id": 682,
									"nodeType": "InheritanceSpecifier",
									"src": "151:6:9"
								}
							],
							"canonicalName": "IPicweUSD",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 697,
							"linearizedBaseContracts": [
								697,
								456
							],
							"name": "IPicweUSD",
							"nameLocation": "138:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "174:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "187:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "179:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "199:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "191:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "178:28:9"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:0:9"
									},
									"scope": 697,
									"src": "165:51:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "231:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "248:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "240:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "265:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "257:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "239:33:9"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:0:9"
									},
									"scope": 697,
									"src": "222:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 698,
							"src": "128:157:9",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "33:252:9"
				},
				"id": 9
			},
			"contracts/weusd/manageusd.sol": {
				"ast": {
					"absolutePath": "contracts/weusd/manageusd.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							512
						],
						"ERC165": [
							653
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						],
						"IERC20Metadata": [
							482
						],
						"IMainContract": [
							677
						],
						"IPicweUSD": [
							697
						],
						"Pausable": [
							629
						],
						"weUSD_manager": [
							1392
						]
					},
					"id": 1393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 700,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 457,
							"src": "61:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 701,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 483,
							"src": "119:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 702,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 296,
							"src": "196:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 703,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 630,
							"src": "256:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/weusd/IPicweUSD.sol",
							"file": "./IPicweUSD.sol",
							"id": 704,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 698,
							"src": "310:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/weusd/IMainContract.sol",
							"file": "./IMainContract.sol",
							"id": 705,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 678,
							"src": "337:29:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 706,
										"name": "AccessControl",
										"nameLocations": [
											"396:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "396:13:10"
									},
									"id": 707,
									"nodeType": "InheritanceSpecifier",
									"src": "396:13:10"
								},
								{
									"baseName": {
										"id": 708,
										"name": "Pausable",
										"nameLocations": [
											"411:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 629,
										"src": "411:8:10"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "411:8:10"
								}
							],
							"canonicalName": "weUSD_manager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1392,
							"linearizedBaseContracts": [
								1392,
								629,
								295,
								653,
								665,
								378,
								512
							],
							"name": "weUSD_manager",
							"nameLocation": "379:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d270e7ab",
									"id": 712,
									"mutability": "mutable",
									"name": "mainContract",
									"nameLocation": "447:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "426:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMainContract_$677",
										"typeString": "contract IMainContract"
									},
									"typeName": {
										"id": 711,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 710,
											"name": "IMainContract",
											"nameLocations": [
												"426:13:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 677,
											"src": "426:13:10"
										},
										"referencedDeclaration": 677,
										"src": "426:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMainContract_$677",
											"typeString": "contract IMainContract"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 717,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "490:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "466:60:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 713,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "466:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 715,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "513:12:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 714,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "503:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 716,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "503:23:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 722,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "557:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "533:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 718,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "533:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 720,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "581:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 719,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "571:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 721,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "571:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "37174202",
									"id": 727,
									"mutability": "constant",
									"name": "CROSS_CHAIN_MINTER_ROLE",
									"nameLocation": "626:23:10",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "602:86:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 723,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "43524f53535f434841494e5f4d494e5445525f524f4c45",
												"id": 725,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "662:25:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704",
													"typeString": "literal_string \"CROSS_CHAIN_MINTER_ROLE\""
												},
												"value": "CROSS_CHAIN_MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704",
													"typeString": "literal_string \"CROSS_CHAIN_MINTER_ROLE\""
												}
											],
											"id": 724,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "652:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 726,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "652:36:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a62e1b3e",
									"id": 730,
									"mutability": "mutable",
									"name": "weUSD",
									"nameLocation": "712:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "695:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPicweUSD_$697",
										"typeString": "contract IPicweUSD"
									},
									"typeName": {
										"id": 729,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 728,
											"name": "IPicweUSD",
											"nameLocations": [
												"695:9:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 697,
											"src": "695:9:10"
										},
										"referencedDeclaration": 697,
										"src": "695:9:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPicweUSD_$697",
											"typeString": "contract IPicweUSD"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5badbe4c",
									"id": 732,
									"mutability": "mutable",
									"name": "requestCount",
									"nameLocation": "739:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "724:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 731,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "724:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "00677016",
									"id": 741,
									"mutability": "mutable",
									"name": "gasfee",
									"nameLocation": "773:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "758:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 733,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "758:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000_by_1",
											"typeString": "int_const 500000"
										},
										"id": 740,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1_by_2",
												"typeString": "rational_const 1 / 2"
											},
											"id": 736,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "35",
												"id": 734,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "782:1:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											"nodeType": "BinaryOperation",
											"operator": "/",
											"rightExpression": {
												"hexValue": "3130",
												"id": 735,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "784:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"src": "782:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_2",
												"typeString": "rational_const 1 / 2"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"id": 739,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 737,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "787:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "36",
												"id": 738,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "791:1:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											"src": "787:5:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											}
										},
										"src": "782:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000_by_1",
											"typeString": "int_const 500000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "46904840",
									"id": 743,
									"mutability": "mutable",
									"name": "feeRecipient",
									"nameLocation": "814:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "799:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 742,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "799:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ea4f3a4",
									"id": 747,
									"mutability": "mutable",
									"name": "registeredStablecoins",
									"nameLocation": "865:21:10",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "833:53:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 746,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 744,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "841:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "833:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 745,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "852:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f92893c",
									"id": 751,
									"mutability": "mutable",
									"name": "usedRequestIds",
									"nameLocation": "925:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "893:46:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 750,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 748,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "901:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "893:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 749,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "912:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d8b2dc62b787ec8afbc8a664cf2fd7c1e7851721acc9e0069132cece3c529c2e",
									"id": 755,
									"name": "StablecoinRegistered",
									"nameLocation": "954:20:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"indexed": true,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "991:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "975:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:28:10"
									},
									"src": "948:55:10"
								},
								{
									"anonymous": false,
									"eventSelector": "0fa63555fe68cad70e08233633567493a3c74afdc8c7fb9f0c03a8e74f1a137a",
									"id": 759,
									"name": "StablecoinDeleted",
									"nameLocation": "1015:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"indexed": true,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "1049:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "1033:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:28:10"
									},
									"src": "1009:52:10"
								},
								{
									"anonymous": false,
									"eventSelector": "66c62f0863782653c5c44e10bf21d9def60984ce20d9f75549575a8910896587",
									"id": 769,
									"name": "MintedWeUSD",
									"nameLocation": "1073:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1101:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1085:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"indexed": true,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "1123:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1107:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"indexed": false,
												"mutability": "mutable",
												"name": "stablecoinAmount",
												"nameLocation": "1143:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1135:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"indexed": false,
												"mutability": "mutable",
												"name": "weUSDAmount",
												"nameLocation": "1169:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1161:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:97:10"
									},
									"src": "1067:115:10"
								},
								{
									"anonymous": false,
									"eventSelector": "3d9842cbdfa603ab9534d6e362bf28b3061318f57fed5e7087dfc956a9d74442",
									"id": 779,
									"name": "BurnedWeUSD",
									"nameLocation": "1194:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1222:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1206:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"indexed": true,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "1244:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1228:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"indexed": false,
												"mutability": "mutable",
												"name": "weUSDAmount",
												"nameLocation": "1264:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1256:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"indexed": false,
												"mutability": "mutable",
												"name": "stablecoinAmount",
												"nameLocation": "1285:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1277:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:97:10"
									},
									"src": "1188:115:10"
								},
								{
									"anonymous": false,
									"eventSelector": "26c32cc5ff12981b55681844f2fb47d52c5e521c58d5288b1325f3304a7e8852",
									"id": 793,
									"name": "CrossChainBurn",
									"nameLocation": "1315:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1346:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1330:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1373:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1357:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"indexed": false,
												"mutability": "mutable",
												"name": "sourceChainId",
												"nameLocation": "1387:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1379:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetChainId",
												"nameLocation": "1410:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1402:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1402:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1433:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1425:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetUser",
												"nameLocation": "1449:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1441:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1329:131:10"
									},
									"src": "1309:152:10"
								},
								{
									"anonymous": false,
									"eventSelector": "7690d9cedf96f067bda7114c24bba31be184ae045d199979a0a373862e70d46b",
									"id": 807,
									"name": "CrossChainMint",
									"nameLocation": "1473:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1504:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1488:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "1531:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1515:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"indexed": false,
												"mutability": "mutable",
												"name": "sourceChainId",
												"nameLocation": "1547:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1539:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetChainId",
												"nameLocation": "1570:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1562:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1593:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1585:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetUser",
												"nameLocation": "1609:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1601:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1487:133:10"
									},
									"src": "1467:154:10"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "1743:397:10",
										"statements": [
											{
												"expression": {
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 820,
														"name": "weUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "1754:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPicweUSD_$697",
															"typeString": "contract IPicweUSD"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 822,
																"name": "_weUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "1772:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 821,
															"name": "IPicweUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "1762:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPicweUSD_$697_$",
																"typeString": "type(contract IPicweUSD)"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1762:17:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPicweUSD_$697",
															"typeString": "contract IPicweUSD"
														}
													},
													"src": "1754:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPicweUSD_$697",
														"typeString": "contract IPicweUSD"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "1754:25:10"
											},
											{
												"expression": {
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 826,
														"name": "mainContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "1790:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMainContract_$677",
															"typeString": "contract IMainContract"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 828,
																"name": "_main",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "1819:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 827,
															"name": "IMainContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "1805:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IMainContract_$677_$",
																"typeString": "type(contract IMainContract)"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1805:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMainContract_$677",
															"typeString": "contract IMainContract"
														}
													},
													"src": "1790:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMainContract_$677",
														"typeString": "contract IMainContract"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "1790:35:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 833,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1847:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 834,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1867:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1871:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1867:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 832,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1836:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1836:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "1836:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "1900:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 840,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1912:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1916:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1912:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 838,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1889:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1889:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "1889:34:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 845,
															"name": "CROSS_CHAIN_MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1945:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 846,
															"name": "_crossChainMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "1970:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 844,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1934:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1934:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "1934:54:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 850,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "2010:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 851,
															"name": "_crossChainMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2023:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 849,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1999:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "1999:42:10"
											},
											{
												"expression": {
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 854,
															"name": "registeredStablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "2052:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 856,
														"indexExpression": {
															"id": 855,
															"name": "_stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "2074:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2052:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2089:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2052:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "2052:41:10"
											},
											{
												"expression": {
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 860,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "2104:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 861,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "2119:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2104:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "2104:28:10"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "_weUSD",
												"nameLocation": "1649:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1641:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "_stablecoin",
												"nameLocation": "1665:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1657:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "_crossChainMinter",
												"nameLocation": "1686:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1678:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1678:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "_main",
												"nameLocation": "1713:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1705:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "1728:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1720:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1640:102:10"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:0:10"
									},
									"scope": 1392,
									"src": "1629:511:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "2194:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 871,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "2205:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "2205:8:10"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 868,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 722,
													"src": "2181:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 869,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 867,
												"name": "onlyRole",
												"nameLocations": [
													"2172:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2172:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2172:21:10"
										}
									],
									"name": "pause",
									"nameLocation": "2157:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2162:2:10"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:0:10"
									},
									"scope": 1392,
									"src": "2148:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "2277:29:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 881,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2288:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2288:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "2288:10:10"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 878,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 722,
													"src": "2264:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 877,
												"name": "onlyRole",
												"nameLocations": [
													"2255:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2255:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2255:21:10"
										}
									],
									"name": "unpause",
									"nameLocation": "2238:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2245:2:10"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2277:0:10"
									},
									"scope": 1392,
									"src": "2229:77:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "2380:35:10",
										"statements": [
											{
												"expression": {
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 893,
														"name": "gasfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "2391:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 894,
														"name": "_gasfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "2400:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2391:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "2391:16:10"
											}
										]
									},
									"functionSelector": "c5494ffb",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 890,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "2368:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 891,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 889,
												"name": "onlyRole",
												"nameLocations": [
													"2359:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2359:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2359:20:10"
										}
									],
									"name": "setGasfee",
									"nameLocation": "2323:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "_gasfee",
												"nameLocation": "2341:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2333:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2332:17:10"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:0:10"
									},
									"scope": 1392,
									"src": "2314:101:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "2501:47:10",
										"statements": [
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "2512:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "2527:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2512:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "2512:28:10"
											}
										]
									},
									"functionSelector": "e74b981b",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 903,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "2489:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 904,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 902,
												"name": "onlyRole",
												"nameLocations": [
													"2480:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2480:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2480:20:10"
										}
									],
									"name": "setFeeRecipient",
									"nameLocation": "2432:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "2456:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "2448:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:23:10"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2501:0:10"
									},
									"scope": 1392,
									"src": "2423:125:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "2634:107:10",
										"statements": [
											{
												"expression": {
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 919,
															"name": "registeredStablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "2645:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 921,
														"indexExpression": {
															"id": 920,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "2667:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2645:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2681:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2645:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "2645:40:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 926,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "2722:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 925,
														"name": "StablecoinRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "2701:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "EmitStatement",
												"src": "2696:37:10"
											}
										]
									},
									"functionSelector": "c6400657",
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 916,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "2622:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 917,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 915,
												"name": "onlyRole",
												"nameLocations": [
													"2613:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2613:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2613:20:10"
										}
									],
									"name": "registerStablecoin",
									"nameLocation": "2565:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "2592:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2584:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2584:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2583:20:10"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:10"
									},
									"scope": 1392,
									"src": "2556:185:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "2825:105:10",
										"statements": [
											{
												"expression": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 938,
															"name": "registeredStablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "2836:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 940,
														"indexExpression": {
															"id": 939,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "2858:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2836:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2872:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2836:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "2836:41:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 945,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "2911:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 944,
														"name": "StablecoinDeleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "2893:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2893:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "EmitStatement",
												"src": "2888:34:10"
											}
										]
									},
									"functionSelector": "1008776f",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 935,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "2813:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 936,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 934,
												"name": "onlyRole",
												"nameLocations": [
													"2804:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2804:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2804:20:10"
										}
									],
									"name": "deleteStablecoin",
									"nameLocation": "2758:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "2783:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2775:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2775:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2774:20:10"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2825:0:10"
									},
									"scope": 1392,
									"src": "2749:181:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "3012:549:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 957,
																"name": "registeredStablecoins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "3031:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 959,
															"indexExpression": {
																"id": 958,
																"name": "stablecoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "3053:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3031:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c65636f696e206e6f742072656769737465726564",
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3066:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c",
																"typeString": "literal_string \"Stablecoin not registered\""
															},
															"value": "Stablecoin not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c",
																"typeString": "literal_string \"Stablecoin not registered\""
															}
														],
														"id": 956,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3023:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3023:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "3023:71:10"
											},
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "stablecoinDecimals",
														"nameLocation": "3111:18:10",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "3105:24:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 963,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3105:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 966,
																	"name": "stablecoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "3147:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 965,
																"name": "IERC20Metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "3132:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$482_$",
																	"typeString": "type(contract IERC20Metadata)"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3132:26:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$482",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3159:8:10",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 481,
														"src": "3132:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3132:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3105:64:10"
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "weUSDAmount",
														"nameLocation": "3188:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "3180:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3180:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"arguments": [
														{
															"id": 974,
															"name": "stablecoinAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3218:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 975,
															"name": "stablecoinDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "3236:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"hexValue": "36",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3256:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															}
														],
														"id": 973,
														"name": "convertDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "3202:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint8,uint8) pure returns (uint256)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3202:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3180:78:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 984,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3342:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3346:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3342:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 988,
																			"name": "mainContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "3362:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IMainContract_$677",
																				"typeString": "contract IMainContract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IMainContract_$677",
																				"typeString": "contract IMainContract"
																			}
																		],
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3354:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 986,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3354:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3354:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 990,
																	"name": "stablecoinAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "3377:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 981,
																			"name": "stablecoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 951,
																			"src": "3317:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 980,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "3310:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3310:18:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$456",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3329:12:10",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 455,
																"src": "3310:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3310:84:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c65636f696e207472616e73666572206661696c6564",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3396:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7",
																"typeString": "literal_string \"Stablecoin transfer failed\""
															},
															"value": "Stablecoin transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7",
																"typeString": "literal_string \"Stablecoin transfer failed\""
															}
														],
														"id": 979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3302:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3302:123:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "3302:123:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 998,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3447:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3451:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3447:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "weUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3459:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 995,
															"name": "weUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "3436:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPicweUSD_$697",
																"typeString": "contract IPicweUSD"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3442:4:10",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "3436:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3436:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "3436:35:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1004,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3499:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3503:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3499:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "3511:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "stablecoinAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3523:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1008,
															"name": "weUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3541:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "MintedWeUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "3487:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3487:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "EmitStatement",
												"src": "3482:71:10"
											}
										]
									},
									"functionSelector": "a2519ae4",
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintWeUSD",
									"nameLocation": "2947:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "2965:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "2957:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "stablecoinAmount",
												"nameLocation": "2985:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "2977:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:46:10"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3012:0:10"
									},
									"scope": 1392,
									"src": "2938:623:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "3638:509:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1020,
																"name": "registeredStablecoins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "3657:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1022,
															"indexExpression": {
																"id": 1021,
																"name": "stablecoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "3679:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3657:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c65636f696e206e6f742072656769737465726564",
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c",
																"typeString": "literal_string \"Stablecoin not registered\""
															},
															"value": "Stablecoin not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c",
																"typeString": "literal_string \"Stablecoin not registered\""
															}
														],
														"id": 1019,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3649:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "3649:71:10"
											},
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "stablecoinDecimals",
														"nameLocation": "3737:18:10",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "3731:24:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1026,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3731:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1029,
																	"name": "stablecoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "3773:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1028,
																"name": "IERC20Metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "3758:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$482_$",
																	"typeString": "type(contract IERC20Metadata)"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3758:26:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$482",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3785:8:10",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 481,
														"src": "3758:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3758:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3731:64:10"
											},
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "stablecoinAmount",
														"nameLocation": "3814:16:10",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "3806:24:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3806:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "weUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "3853:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "36",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3866:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														{
															"id": 1039,
															"name": "stablecoinDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3869:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1036,
														"name": "convertDecimalsCeil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "3833:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint8,uint8) pure returns (uint256)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3806:82:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "3966:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1046,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3978:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3982:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3978:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "stablecoinAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3990:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1042,
															"name": "mainContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "3934:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMainContract_$677",
																"typeString": "contract IMainContract"
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3947:18:10",
														"memberName": "transferStableCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 676,
														"src": "3934:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3934:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "3934:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1054,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4033:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4037:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4033:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "weUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "4045:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1051,
															"name": "weUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "4018:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPicweUSD_$697",
																"typeString": "contract IPicweUSD"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4024:8:10",
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "4018:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4018:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "4018:39:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1060,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4085:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4089:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4085:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "4097:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "weUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "4109:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1064,
															"name": "stablecoinAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "4122:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "BurnedWeUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "4073:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4073:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1066,
												"nodeType": "EmitStatement",
												"src": "4068:71:10"
											}
										]
									},
									"functionSelector": "d19fad37",
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnWeUSD",
									"nameLocation": "3578:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "3596:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3588:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "weUSDAmount",
												"nameLocation": "3616:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3608:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3587:41:10"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3638:0:10"
									},
									"scope": 1392,
									"src": "3569:578:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "4252:784:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1078,
																"name": "targetChainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "4271:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 1079,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4288:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4294:7:10",
																"memberName": "chainid",
																"nodeType": "MemberAccess",
																"src": "4288:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4271:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617267657420636861696e206d75737420626520646966666572656e742066726f6d20736f7572636520636861696e",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4303:50:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cef094ec419a8d26f0cee0bf6ca74c12da636e63d15d6aaf6bbddcac6380238e",
																"typeString": "literal_string \"Target chain must be different from source chain\""
															},
															"value": "Target chain must be different from source chain"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cef094ec419a8d26f0cee0bf6ca74c12da636e63d15d6aaf6bbddcac6380238e",
																"typeString": "literal_string \"Target chain must be different from source chain\""
															}
														],
														"id": 1077,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4263:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:91:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "4263:91:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "4373:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1087,
																"name": "gasfee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "4382:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4373:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e20676173666565",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4390:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aeff32d03aaba9710cd0ccac9240922a41d8498df078f913fb5acb94e4444254",
																"typeString": "literal_string \"Amount must be greater than gasfee\""
															},
															"value": "Amount must be greater than gasfee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aeff32d03aaba9710cd0ccac9240922a41d8498df078f913fb5acb94e4444254",
																"typeString": "literal_string \"Amount must be greater than gasfee\""
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4365:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4365:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "4365:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1093,
																"name": "targetUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "4446:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4468:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4460:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1094,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4460:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4460:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4446:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074617267657420757365722061646472657373",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4472:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96",
																"typeString": "literal_string \"Invalid target user address\""
															},
															"value": "Invalid target user address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96",
																"typeString": "literal_string \"Invalid target user address\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4438:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "4438:64:10"
											},
											{
												"assignments": [
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "sourceChainId",
														"nameLocation": "4521:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "4513:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4513:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"expression": {
														"id": 1104,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "4537:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4543:7:10",
													"memberName": "chainid",
													"nodeType": "MemberAccess",
													"src": "4537:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4513:37:10"
											},
											{
												"assignments": [
													1108
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "requestId",
														"nameLocation": "4569:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "4561:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4561:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1122,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1109,
																		"name": "sourceChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "4582:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4599:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "4582:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1112,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4581:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1113,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4607:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4613:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4607:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3634",
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4626:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4607:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1117,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4606:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4581:48:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4632:14:10",
														"subExpression": {
															"id": 1119,
															"name": "requestCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "4634:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4581:65:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4561:85:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4665:26:10",
															"subExpression": {
																"baseExpression": {
																	"id": 1124,
																	"name": "usedRequestIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4666:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1126,
																"indexExpression": {
																	"id": 1125,
																	"name": "requestId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "4681:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4666:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265717565737420494420616c72656164792075736564",
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4693:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c0027d5c68fee309a77bba84ffa4dfde426eb995b832c16d5a3e1fecf1f55f3",
																"typeString": "literal_string \"Request ID already used\""
															},
															"value": "Request ID already used"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c0027d5c68fee309a77bba84ffa4dfde426eb995b832c16d5a3e1fecf1f55f3",
																"typeString": "literal_string \"Request ID already used\""
															}
														],
														"id": 1123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4657:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4657:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "4657:62:10"
											},
											{
												"expression": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1131,
															"name": "usedRequestIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4730:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1133,
														"indexExpression": {
															"id": 1132,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "4745:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4730:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4758:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4730:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "4730:32:10"
											},
											{
												"assignments": [
													1138
												],
												"declarations": [
													{
														"constant": false,
														"id": 1138,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "4781:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "4773:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4773:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1139,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "4794:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1140,
														"name": "gasfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "4803:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4794:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4773:36:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1146,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4839:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4843:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4839:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1148,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "4851:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "gasfee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "4865:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1143,
															"name": "weUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "4820:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPicweUSD_$697",
																"typeString": "contract IPicweUSD"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4826:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 455,
														"src": "4820:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4820:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "4820:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1155,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4898:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4902:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4898:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "4910:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1152,
															"name": "weUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "4883:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPicweUSD_$697",
																"typeString": "contract IPicweUSD"
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4889:8:10",
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "4883:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "4883:38:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1161,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "4952:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1162,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4963:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4967:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4963:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "sourceChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "4975:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1165,
															"name": "targetChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "4990:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1166,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "5005:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1167,
															"name": "targetUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "5017:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1160,
														"name": "CrossChainBurn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "4937:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,uint256,address)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4937:91:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "EmitStatement",
												"src": "4932:96:10"
											}
										]
									},
									"functionSelector": "0bd31a57",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnWeUSDCrossChain",
									"nameLocation": "4164:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "targetChainId",
												"nameLocation": "4192:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4184:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4215:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4207:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "targetUser",
												"nameLocation": "4231:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4223:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4223:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:59:10"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4252:0:10"
									},
									"scope": 1392,
									"src": "4155:881:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "5194:510:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5213:26:10",
															"subExpression": {
																"baseExpression": {
																	"id": 1186,
																	"name": "usedRequestIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "5214:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1188,
																"indexExpression": {
																	"id": 1187,
																	"name": "requestId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "5229:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5214:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265717565737420494420616c72656164792075736564",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5241:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c0027d5c68fee309a77bba84ffa4dfde426eb995b832c16d5a3e1fecf1f55f3",
																"typeString": "literal_string \"Request ID already used\""
															},
															"value": "Request ID already used"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c0027d5c68fee309a77bba84ffa4dfde426eb995b832c16d5a3e1fecf1f55f3",
																"typeString": "literal_string \"Request ID already used\""
															}
														],
														"id": 1185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5205:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5205:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "5205:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1194,
																"name": "sourceChainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "5286:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 1195,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5303:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5309:7:10",
																"memberName": "chainid",
																"nodeType": "MemberAccess",
																"src": "5303:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5286:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f7572636520636861696e206d75737420626520646966666572656e742066726f6d2074617267657420636861696e",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5318:50:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6796245fd06a0237ef78dc4b92ce228b2aeb991d0e4ff61774e8fc1ef736486c",
																"typeString": "literal_string \"Source chain must be different from target chain\""
															},
															"value": "Source chain must be different from target chain"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6796245fd06a0237ef78dc4b92ce228b2aeb991d0e4ff61774e8fc1ef736486c",
																"typeString": "literal_string \"Source chain must be different from target chain\""
															}
														],
														"id": 1193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5278:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5278:91:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "5278:91:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1202,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "5388:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5397:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5388:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5400:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5380:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5380:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "5380:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1209,
																"name": "targetUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "5451:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5473:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5465:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1210,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5465:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5465:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5451:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074617267657420757365722061646472657373",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5477:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96",
																"typeString": "literal_string \"Invalid target user address\""
															},
															"value": "Invalid target user address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96",
																"typeString": "literal_string \"Invalid target user address\""
															}
														],
														"id": 1208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5443:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5443:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "5443:64:10"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1218,
															"name": "usedRequestIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "5518:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1219,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "5533:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5518:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5546:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5518:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "5518:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1227,
															"name": "targetUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "5572:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1228,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "5584:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1224,
															"name": "weUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "5561:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPicweUSD_$697",
																"typeString": "contract IPicweUSD"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5567:4:10",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "5561:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5561:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "5561:30:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1232,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "5624:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1233,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5635:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5639:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5635:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "sourceChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "5647:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1236,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5662:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5668:7:10",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5662:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1238,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "5677:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1239,
															"name": "targetUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "5685:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1231,
														"name": "CrossChainMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "5609:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,uint256,address)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5609:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "EmitStatement",
												"src": "5604:92:10"
											}
										]
									},
									"functionSelector": "1f224564",
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1182,
													"name": "CROSS_CHAIN_MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 727,
													"src": "5169:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1181,
												"name": "onlyRole",
												"nameLocations": [
													"5160:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5160:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5160:33:10"
										}
									],
									"name": "mintWeUSDCrossChain",
									"nameLocation": "5053:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "5081:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5073:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5073:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "sourceChainId",
												"nameLocation": "5100:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5092:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5092:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5123:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5115:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5115:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "targetUser",
												"nameLocation": "5139:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5131:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5131:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5072:78:10"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5194:0:10"
									},
									"scope": 1392,
									"src": "5044:660:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "5783:51:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1250,
														"name": "usedRequestIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "5801:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 1252,
													"indexExpression": {
														"id": 1251,
														"name": "requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "5816:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5801:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1253,
												"nodeType": "Return",
												"src": "5794:32:10"
											}
										]
									},
									"functionSelector": "1e7502d7",
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRequestIdUsed",
									"nameLocation": "5721:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "5745:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "5737:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5737:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5736:19:10"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "5777:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5777:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5776:6:10"
									},
									"scope": 1392,
									"src": "5712:122:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "5902:89:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1260,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5921:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5927:7:10",
																		"memberName": "chainid",
																		"nodeType": "MemberAccess",
																		"src": "5921:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5938:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5921:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1264,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5920:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1265,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5946:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5952:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5946:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3634",
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5965:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "5946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1269,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5945:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5920:48:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"id": 1271,
														"name": "requestCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "5971:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5920:63:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1259,
												"id": 1273,
												"nodeType": "Return",
												"src": "5913:70:10"
											}
										]
									},
									"functionSelector": "b190d8a3",
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestRequestId",
									"nameLocation": "5851:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5869:2:10"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "5893:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5892:9:10"
									},
									"scope": 1392,
									"src": "5842:149:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "6156:312:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1286,
														"name": "sourceDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "6171:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1287,
														"name": "targetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "6189:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6171:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1294,
															"name": "sourceDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "6256:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1295,
															"name": "targetDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "6273:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "6256:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1322,
														"nodeType": "Block",
														"src": "6378:83:10",
														"statements": [
															{
																"expression": {
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1310,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "6393:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1311,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1277,
																			"src": "6402:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1317,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1312,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6411:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1315,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1313,
																									"name": "sourceDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1279,
																									"src": "6416:14:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 1314,
																									"name": "targetDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1281,
																									"src": "6433:14:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "6416:31:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 1316,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "6415:33:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "6411:37:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1318,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6410:39:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6402:47:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6393:56:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1321,
																"nodeType": "ExpressionStatement",
																"src": "6393:56:10"
															}
														]
													},
													"id": 1323,
													"nodeType": "IfStatement",
													"src": "6252:209:10",
													"trueBody": {
														"id": 1309,
														"nodeType": "Block",
														"src": "6289:83:10",
														"statements": [
															{
																"expression": {
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1297,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "6304:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1277,
																			"src": "6313:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1304,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1299,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6322:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1302,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1300,
																									"name": "targetDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1281,
																									"src": "6327:14:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 1301,
																									"name": "sourceDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1279,
																									"src": "6344:14:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "6327:31:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 1303,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "6326:33:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "6322:37:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1305,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6321:39:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6313:47:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6304:56:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1308,
																"nodeType": "ExpressionStatement",
																"src": "6304:56:10"
															}
														]
													}
												},
												"id": 1324,
												"nodeType": "IfStatement",
												"src": "6167:294:10",
												"trueBody": {
													"id": 1293,
													"nodeType": "Block",
													"src": "6205:41:10",
													"statements": [
														{
															"expression": {
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1289,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "6220:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1290,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "6229:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6220:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1292,
															"nodeType": "ExpressionStatement",
															"src": "6220:14:10"
														}
													]
												}
											}
										]
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertDecimals",
									"nameLocation": "6008:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6042:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6034:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6034:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "sourceDecimals",
												"nameLocation": "6064:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6058:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1278,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6058:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "targetDecimals",
												"nameLocation": "6095:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6089:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1280,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6089:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6023:93:10"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6148:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6140:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6140:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6139:16:10"
									},
									"scope": 1392,
									"src": "5999:469:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "6637:427:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1337,
														"name": "sourceDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "6652:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1338,
														"name": "targetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "6670:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6652:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1345,
															"name": "sourceDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "6737:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1346,
															"name": "targetDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "6754:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "6737:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1387,
														"nodeType": "Block",
														"src": "6859:198:10",
														"statements": [
															{
																"assignments": [
																	1362
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1362,
																		"mutability": "mutable",
																		"name": "temp",
																		"nameLocation": "6882:4:10",
																		"nodeType": "VariableDeclaration",
																		"scope": 1387,
																		"src": "6874:12:10",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1361,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6874:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1369,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6889:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1364,
																					"name": "sourceDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1330,
																					"src": "6894:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1365,
																					"name": "targetDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1332,
																					"src": "6911:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "6894:31:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1367,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6893:33:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "6889:37:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6874:52:10"
															},
															{
																"expression": {
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1370,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "6941:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1371,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "6950:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1372,
																			"name": "temp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "6958:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6950:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6941:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1375,
																"nodeType": "ExpressionStatement",
																"src": "6941:21:10"
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1376,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "6981:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 1377,
																			"name": "temp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "6989:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6981:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6997:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6981:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1386,
																"nodeType": "IfStatement",
																"src": "6977:69:10",
																"trueBody": {
																	"id": 1385,
																	"nodeType": "Block",
																	"src": "7000:46:10",
																	"statements": [
																		{
																			"expression": {
																				"id": 1383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1381,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1335,
																					"src": "7019:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"hexValue": "31",
																					"id": 1382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7029:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "7019:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1384,
																			"nodeType": "ExpressionStatement",
																			"src": "7019:11:10"
																		}
																	]
																}
															}
														]
													},
													"id": 1388,
													"nodeType": "IfStatement",
													"src": "6733:324:10",
													"trueBody": {
														"id": 1360,
														"nodeType": "Block",
														"src": "6770:83:10",
														"statements": [
															{
																"expression": {
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1348,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "6785:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1349,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "6794:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1350,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6803:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1353,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1351,
																									"name": "targetDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1332,
																									"src": "6808:14:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 1352,
																									"name": "sourceDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1330,
																									"src": "6825:14:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "6808:31:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 1354,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "6807:33:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "6803:37:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1356,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6802:39:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:47:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6785:56:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1359,
																"nodeType": "ExpressionStatement",
																"src": "6785:56:10"
															}
														]
													}
												},
												"id": 1389,
												"nodeType": "IfStatement",
												"src": "6648:409:10",
												"trueBody": {
													"id": 1344,
													"nodeType": "Block",
													"src": "6686:41:10",
													"statements": [
														{
															"expression": {
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1340,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "6701:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "6710:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6701:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1343,
															"nodeType": "ExpressionStatement",
															"src": "6701:14:10"
														}
													]
												}
											}
										]
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertDecimalsCeil",
									"nameLocation": "6485:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6523:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "6515:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6515:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "sourceDecimals",
												"nameLocation": "6545:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "6539:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6539:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "targetDecimals",
												"nameLocation": "6576:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "6570:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1331,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6570:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6504:93:10"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6629:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "6621:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:16:10"
									},
									"scope": 1392,
									"src": "6476:588:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1393,
							"src": "370:6697:10",
							"usedErrors": [
								305,
								308,
								534,
								537
							],
							"usedEvents": [
								317,
								326,
								335,
								526,
								531,
								755,
								759,
								769,
								779,
								793,
								807
							]
						}
					],
					"src": "33:7034:10"
				},
				"id": 10
			}
		}
	}
}