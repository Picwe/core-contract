{
	"id": "21faee144a58bbaf9626d882633f2fb0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"weusd/manageusd.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"./IPicweUSD.sol\";\r\nimport \"./IMainContract.sol\";\r\n\r\nstruct RequestData {\r\n    uint256 requestId;\r\n    address user;\r\n    uint256 amount;\r\n    bool isburn;\r\n}\r\n\r\ncontract weUSD_manager is AccessControl, Pausable{\r\n    IMainContract public mainContract;\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\r\n    bytes32 public constant CROSS_CHAIN_MINTER_ROLE = keccak256(\"CROSS_CHAIN_MINTER_ROLE\");\r\n    IPicweUSD public weUSD;\r\n    uint256 public requestCount;\r\n    uint8 public constant WEUSD_DECIMALS = 6;\r\n    uint256 public gasfee = 5*10**(6-1);\r\n    address public feeRecipient;\r\n\r\n    uint256[] public activeSourceRequests;\r\n    uint256[] public activeTargetRequests;\r\n\r\n    mapping(address => bool) public registeredStablecoins;\r\n    mapping(uint256 => bool) public usedRequestIds;\r\n    mapping(uint256 => RequestData) private requests;\r\n\r\n    mapping(uint256 => uint256) public requestIdToSourceActiveIndex;\r\n    mapping(uint256 => uint256) public requestIdToTargetActiveIndex;\r\n\r\n    event StablecoinRegistered(address indexed stablecoin);\r\n    event StablecoinDeleted(address indexed stablecoin);\r\n    event MintedWeUSD(address indexed user, address indexed stablecoin, uint256 stablecoinAmount, uint256 weUSDAmount);\r\n    event BurnedWeUSD(address indexed user, address indexed stablecoin, uint256 weUSDAmount, uint256 stablecoinAmount);\r\n    event CrossChainBurn(uint256 indexed requestId, address indexed user, uint256 sourceChainId, uint256 targetChainId, uint256 amount, address targetUser);\r\n    event CrossChainMint(uint256 indexed requestId, address indexed minter, uint256 sourceChainId, uint256 targetChainId, uint256 amount, address targetUser);\r\n\r\n    constructor(address _weUSD, address _stablecoin, address _crossChainMinter, address _main, address _feeRecipient) {\r\n        weUSD = IPicweUSD(_weUSD);\r\n        mainContract = IMainContract(_main);\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(ADMIN_ROLE, msg.sender);\r\n        _grantRole(CROSS_CHAIN_MINTER_ROLE, _crossChainMinter);\r\n        _grantRole(PAUSER_ROLE, _crossChainMinter);\r\n        registeredStablecoins[_stablecoin] = true;\r\n        feeRecipient = _feeRecipient;\r\n    }\r\n\r\n    function pause() public onlyRole(PAUSER_ROLE) {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyRole(PAUSER_ROLE) {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the gas fee (gasfee).\r\n     * @param _gasfee The new gas fee amount.\r\n     * \r\n     * @notice This function can only be called by users with the ADMIN_ROLE.\r\n     * @notice A GasFeeSet event will be triggered after successful setting.\r\n     */\r\n    function setGasfee(uint256 _gasfee) external onlyRole(ADMIN_ROLE) {\r\n        gasfee = _gasfee;\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the fee recipient (feeRecipient).\r\n     * @param _feeRecipient The new fee recipient address.\r\n     * \r\n     * @notice This function can only be called by users with the ADMIN_ROLE.\r\n     * @notice A FeeRecipientSet event will be triggered after successful setting.\r\n     */\r\n    function setFeeRecipient(address _feeRecipient) external onlyRole(ADMIN_ROLE) {\r\n        feeRecipient = _feeRecipient;\r\n    }\r\n\r\n    /**\r\n     * @dev Registers a stablecoin (stablecoin).\r\n     * @param stablecoin The address of the stablecoin to be registered.\r\n     * \r\n     * @notice This function can only be called by users with the ADMIN_ROLE.\r\n     * @notice A StablecoinRegistered event will be triggered after successful registration.\r\n     */\r\n    function registerStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {\r\n        registeredStablecoins[stablecoin] = true;\r\n        emit StablecoinRegistered(stablecoin);\r\n    }\r\n\r\n    /**\r\n     * @dev Deletes a stablecoin (stablecoin).\r\n     * @param stablecoin The address of the stablecoin to be deleted.\r\n     * \r\n     * @notice This function can only be called by users with the ADMIN_ROLE.\r\n     * @notice A StablecoinDeleted event will be triggered after successful deletion.\r\n     */\r\n    function deleteStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {\r\n        registeredStablecoins[stablecoin] = false;\r\n        emit StablecoinDeleted(stablecoin);\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Mints weUSD tokens in exchange for stablecoins.\r\n     * @param stablecoin The address of the stablecoin to be exchanged.\r\n     * @param stablecoinAmount The amount of stablecoin to be exchanged.\r\n     *\r\n     * @notice This function can be called by any user.\r\n     * @notice The stablecoin must be registered.\r\n     * @notice The stablecoin amount is converted to weUSD based on the decimal difference.\r\n     * @notice A MintedWeUSD event will be emitted after successful minting.\r\n     */\r\n    function mintWeUSD(address stablecoin, uint256 stablecoinAmount) external {\r\n        require(registeredStablecoins[stablecoin], \"Stablecoin not registered\");\r\n        uint8 stablecoinDecimals = IERC20Metadata(stablecoin).decimals();\r\n        uint256 weUSDAmount = convertDecimals(stablecoinAmount, stablecoinDecimals, WEUSD_DECIMALS); // Convert to weUSD decimals (6)\r\n        require(IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount), \"Stablecoin transfer failed\");\r\n        weUSD.mint(msg.sender, weUSDAmount);\r\n        emit MintedWeUSD(msg.sender, stablecoin, stablecoinAmount, weUSDAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Burns weUSD tokens and returns stablecoins to the user.\r\n     * @param stablecoin The address of the stablecoin to be returned.\r\n     * @param weUSDAmount The amount of weUSD to be burned.\r\n     *\r\n     * @notice This function can be called by any user.\r\n     * @notice The stablecoin must be registered.\r\n     * @notice The weUSD amount is converted to stablecoin based on the decimal difference.\r\n     * @notice A BurnedWeUSD event will be emitted after successful burning.\r\n     */\r\n    function burnWeUSD(address stablecoin, uint256 weUSDAmount) external {\r\n        require(registeredStablecoins[stablecoin], \"Stablecoin not registered\");\r\n        uint8 stablecoinDecimals = IERC20Metadata(stablecoin).decimals();\r\n        uint256 stablecoinAmount = convertDecimalsCeil(weUSDAmount, WEUSD_DECIMALS, stablecoinDecimals); // Convert from weUSD decimals (6)\r\n        mainContract.transferStableCoin(stablecoin, msg.sender, stablecoinAmount);\r\n        weUSD.burnFrom(msg.sender, weUSDAmount);\r\n        emit BurnedWeUSD(msg.sender, stablecoin, weUSDAmount, stablecoinAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Burns weUSD tokens on the source chain for cross-chain transfer.\r\n     * @param targetChainId The ID of the target chain where weUSD will be minted.\r\n     * @param amount The total amount of weUSD to be burned (including gas fee).\r\n     * @param targetUser The address of the user on the target chain to receive the minted weUSD.\r\n     *\r\n     * @notice This function can be called by any user when the contract is not paused.\r\n     * @notice A portion of the amount is deducted as gas fee and transferred to the fee recipient.\r\n     * @notice The remaining amount is burned from the sender's balance.\r\n     * @notice A CrossChainBurn event is emitted after successful burning.\r\n     */\r\n    function burnWeUSDCrossChain(uint256 targetChainId, uint256 amount, address targetUser) external whenNotPaused {\r\n        require(targetChainId != block.chainid, \"Target chain must be different from source chain\");\r\n        require(amount > gasfee, \"Amount must be greater than gasfee\");\r\n        require(targetUser != address(0), \"Invalid target user address\");\r\n        uint256 sourceChainId = block.chainid;\r\n        uint256 requestId = (sourceChainId << 192) | (targetChainId << 128) | (block.timestamp << 64) | ++requestCount;\r\n        require(!requestExists(requestId), \"Request ID already exists\");\r\n        uint256 burnAmount = amount - gasfee;\r\n        weUSD.transferFrom(msg.sender, feeRecipient, gasfee);\r\n        weUSD.burnFrom(msg.sender, burnAmount);\r\n        _createRequest(requestId, msg.sender, burnAmount, true);\r\n        emit CrossChainBurn(requestId, msg.sender, sourceChainId, targetChainId, burnAmount, targetUser);\r\n    }\r\n    \r\n    /**\r\n     * @dev Mints weUSD tokens on the target chain for cross-chain transfer.\r\n     * @param requestId Unique request ID to prevent duplicate processing\r\n     * @param sourceChainId ID of the source chain\r\n     * @param amount Amount of weUSD to be minted\r\n     * @param targetUser Address of the target user to receive the minted weUSD\r\n     *\r\n     * @notice This function can only be called by addresses with the CROSS_CHAIN_MINTER_ROLE role when the contract is not paused\r\n     * @notice The requestId must not have been used before\r\n     * @notice The source chain must be different from the current chain\r\n     * @notice The minting amount must be greater than 0\r\n     * @notice The target user address cannot be the zero address\r\n     * @notice A CrossChainMint event will be emitted after successful minting\r\n     */\r\n    function mintWeUSDCrossChain(uint256 requestId, uint256 sourceChainId, uint256 amount, address targetUser) external onlyRole(CROSS_CHAIN_MINTER_ROLE) whenNotPaused {\r\n        require(sourceChainId != block.chainid, \"Source chain must be different from target chain\");\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        require(targetUser != address(0), \"Invalid target user address\");\r\n        require(!requestExists(requestId), \"Request ID already exists\");\r\n        weUSD.mint(targetUser, amount);\r\n        _createRequest(requestId, targetUser, amount, false);\r\n        emit CrossChainMint(requestId, msg.sender, sourceChainId, block.chainid, amount, targetUser);\r\n    }\r\n\r\n    function isRequestIdUsed(uint256 requestId) public view returns (bool) {\r\n        return usedRequestIds[requestId];\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the request data for a given request ID\r\n     * @param _requestId The unique identifier of the request\r\n     * @return RequestData struct containing the request details\r\n     * \r\n     * @notice This function can be called by any address\r\n     * @notice Returns a struct with default values if the request ID doesn't exist\r\n     */\r\n    function getRequestById(uint256 _requestId) public view returns (RequestData memory) {\r\n        return requests[_requestId];\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a request exists for a given request ID\r\n     * @param _requestId The unique identifier of the request\r\n     * @return bool indicating whether the request exists\r\n     * \r\n     * @notice This function can be called by any address\r\n     */\r\n    function requestExists(uint256 _requestId) public view returns (bool) {\r\n        return requests[_requestId].requestId != 0;\r\n    }\r\n    \r\n    /**\r\n     * @dev Get all source chain request IDs for a specific user\r\n     * @param _user User address\r\n     * @param _page Page number (starting from 1)\r\n     * @param _pageSize Number of items per page\r\n     * @return uint256[] Array containing source chain request IDs for the user's specified page\r\n     * @return uint256 Total number of source chain requests for the user\r\n     * \r\n     * @notice This function can be called by any address\r\n     * @notice If the user has no source chain requests, an empty array will be returned\r\n     * @notice If _page or _pageSize is 0, all requests will be returned\r\n     */\r\n    function getUserSourceRequests(address _user, uint256 _page, uint256 _pageSize) public view returns (uint256[] memory, uint256) {\r\n        require(_page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0), \"Invalid page or page size\");\r\n\r\n        uint256 totalRequests = 0;\r\n        for (uint256 i = 0; i < activeSourceRequests.length; i++) {\r\n            if (requests[activeSourceRequests[i]].user == _user) {\r\n                totalRequests++;\r\n            }\r\n        }\r\n\r\n        uint256 startIndex = 0;\r\n        uint256 endIndex = totalRequests;\r\n\r\n        if (_page > 0 && _pageSize > 0) {\r\n            startIndex = totalRequests - (_page * _pageSize);\r\n            if (startIndex > totalRequests) startIndex = 0;\r\n            endIndex = startIndex + _pageSize;\r\n            if (endIndex > totalRequests) endIndex = totalRequests;\r\n        }\r\n\r\n        uint256[] memory userSourceRequests = new uint256[](endIndex - startIndex);\r\n        uint256 count = 0;\r\n\r\n        for (uint256 i = activeSourceRequests.length; i > 0 && count < userSourceRequests.length; i--) {\r\n            uint256 requestId = activeSourceRequests[i-1];\r\n            if (requests[requestId].user == _user) {\r\n                if (totalRequests - count > startIndex) {\r\n                    userSourceRequests[count] = requestId;\r\n                    count++;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return (userSourceRequests, totalRequests);\r\n    }\r\n\r\n    /**\r\n     * @dev Get all target chain request IDs for a specific user\r\n     * @param _user User address\r\n     * @param _page Page number (starting from 1)\r\n     * @param _pageSize Number of items per page\r\n     * @return uint256[] Array containing target chain request IDs for the user's specified page\r\n     * @return uint256 Total number of target chain requests for the user\r\n     * \r\n     * @notice Any address can call this function\r\n     * @notice If the user has no target chain requests, an empty array will be returned\r\n     * @notice If _page or _pageSize is 0, all requests will be returned\r\n     */\r\n    function getUserTargetRequests(address _user, uint256 _page, uint256 _pageSize) public view returns (uint256[] memory, uint256) {\r\n        require(_page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0), \"Invalid page or page size\");\r\n\r\n        uint256 totalRequests = 0;\r\n        for (uint256 i = 0; i < activeTargetRequests.length; i++) {\r\n            if (requests[activeTargetRequests[i]].user == _user) {\r\n                totalRequests++;\r\n            }\r\n        }\r\n\r\n        uint256 startIndex = 0;\r\n        uint256 endIndex = totalRequests;\r\n\r\n        if (_page > 0 && _pageSize > 0) {\r\n            startIndex = totalRequests - (_page * _pageSize);\r\n            if (startIndex > totalRequests) startIndex = 0;\r\n            endIndex = startIndex + _pageSize;\r\n            if (endIndex > totalRequests) endIndex = totalRequests;\r\n        }\r\n\r\n        uint256[] memory userTargetRequests = new uint256[](endIndex - startIndex);\r\n        uint256 count = 0;\r\n\r\n        for (uint256 i = activeTargetRequests.length; i > 0 && count < userTargetRequests.length; i--) {\r\n            uint256 requestId = activeTargetRequests[i-1];\r\n            if (requests[requestId].user == _user) {\r\n                if (totalRequests - count > startIndex) {\r\n                    userTargetRequests[count] = requestId;\r\n                    count++;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return (userTargetRequests, totalRequests);\r\n    }\r\n\r\n    // internal functions\r\n\r\n\r\n    /**\r\n     * @dev Create a new request record\r\n     * @param _requestId Request ID\r\n     * @param _user User address\r\n     * @param _amount Request amount\r\n     * @param _isburn Whether it is a destruction operation\r\n     */\r\n    function _createRequest(uint256 _requestId, address _user, uint256 _amount, bool _isburn) internal {\r\n   \r\n        RequestData memory newRequest = RequestData({\r\n            requestId: _requestId,\r\n            user: _user,\r\n            amount: _amount,\r\n            isburn: _isburn\r\n        });\r\n        \r\n        requests[_requestId] = newRequest;\r\n        if(_isburn){\r\n            activeSourceRequests.push(_requestId);\r\n        }else{\r\n            activeTargetRequests.push(_requestId);\r\n        }\r\n        if(_isburn){\r\n            requestIdToSourceActiveIndex[_requestId] = activeSourceRequests.length - 1;\r\n        }else{\r\n            requestIdToTargetActiveIndex[_requestId] = activeTargetRequests.length - 1;\r\n        }\r\n    }\r\n\r\n\r\n    function convertDecimals(\r\n        uint256 value,\r\n        uint8 sourceDecimals,\r\n        uint8 targetDecimals\r\n    ) internal pure returns (uint256 result) {\r\n        if (sourceDecimals == targetDecimals) {\r\n            result = value;\r\n        } else if (sourceDecimals < targetDecimals) {\r\n            result = value * (10**(targetDecimals - sourceDecimals));\r\n        } else {\r\n            result = value / (10**(sourceDecimals - targetDecimals));\r\n        }\r\n    }\r\n\r\n    function convertDecimalsCeil(\r\n        uint256 value,\r\n        uint8 sourceDecimals,\r\n        uint8 targetDecimals\r\n    ) internal pure returns (uint256 result) {\r\n        if (sourceDecimals == targetDecimals) {\r\n            result = value;\r\n        } else if (sourceDecimals < targetDecimals) {\r\n            result = value * (10**(targetDecimals - sourceDecimals));\r\n        } else {\r\n            uint256 temp = 10**(sourceDecimals - targetDecimals);\r\n            result = value / temp;\r\n            if (value % temp != 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"weusd/IMainContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\ninterface IMainContract {\r\n    function transferStableCoin(address token, address to, uint256 amount) external;\r\n}"
			},
			"weusd/IPicweUSD.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IPicweUSD is IERC20 {\r\n    function mint(address to, uint256 amount) external;\r\n    function burnFrom(address account, uint256 amount) external;\r\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 521,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203cfdd47449eea188394cf3fafe88e8cef6e2c9fe1bffaa2ff66a356befaf47bd64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203cfdd47449eea188394cf3fafe88e8cef6e2c9fe1bffaa2ff66a356befaf47bd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY REVERT 0xD4 PUSH21 0x49EEA188394CF3FAFE88E8CEF6E2C9FE1BFFAA2FF6 PUSH11 0x356BEFAF47BD64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203cfdd47449eea188394cf3fafe88e8cef6e2c9fe1bffaa2ff66a356befaf47bd64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY REVERT 0xD4 PUSH21 0x49EEA188394CF3FAFE88E8CEF6E2C9FE1BFFAA2FF6 PUSH11 0x356BEFAF47BD64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cfdd47449eea188394cf3fafe88e8cef6e2c9fe1bffaa2ff66a356befaf47bd64736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"weusd/IMainContract.sol",
								"weusd/IPicweUSD.sol",
								"weusd/manageusd.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"weusd/IMainContract.sol": {
				"IMainContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferStableCoin(address,address,uint256)": "5e556234"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"weusd/IMainContract.sol\":\"IMainContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"weusd/IMainContract.sol\":{\"keccak256\":\"0x9b7ab6959d856e16823cde7e1e20a93fa5704ea016f41891cf462fb389224cf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b02e889d923d01ef0a0c3573b1e2b6383e44f12d64578b0b0c890caa4d2ded0\",\"dweb:/ipfs/QmbMZcqQZuV8rJgJMmmUp3xgTzQggRLx4FhQwLKyjKXLoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"weusd/IPicweUSD.sol": {
				"IPicweUSD": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnFrom(address,uint256)": "79cc6790",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"weusd/IPicweUSD.sol\":\"IPicweUSD\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"weusd/IPicweUSD.sol\":{\"keccak256\":\"0xca916d69b6d6e91272bdbf75d78ab96a83c86f619d847916c4b1cd1c91830870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89fecb9f4008c4ee310666ddbc8d4a2d60736c0596bef739212c3f4cc418a01a\",\"dweb:/ipfs/QmWZP6ZFXAyk6KoXryvP8Cb5j9NuSKyZYFchsTXUZPVNiz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"weusd/manageusd.sol": {
				"weUSD_manager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_weUSD",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stablecoin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_crossChainMinter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_main",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weUSDAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stablecoinAmount",
									"type": "uint256"
								}
							],
							"name": "BurnedWeUSD",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sourceChainId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "targetChainId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "targetUser",
									"type": "address"
								}
							],
							"name": "CrossChainBurn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sourceChainId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "targetChainId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "targetUser",
									"type": "address"
								}
							],
							"name": "CrossChainMint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stablecoinAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weUSDAmount",
									"type": "uint256"
								}
							],
							"name": "MintedWeUSD",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								}
							],
							"name": "StablecoinDeleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								}
							],
							"name": "StablecoinRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CROSS_CHAIN_MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEUSD_DECIMALS",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeSourceRequests",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeTargetRequests",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "weUSDAmount",
									"type": "uint256"
								}
							],
							"name": "burnWeUSD",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "targetChainId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "targetUser",
									"type": "address"
								}
							],
							"name": "burnWeUSDCrossChain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								}
							],
							"name": "deleteStablecoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gasfee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								}
							],
							"name": "getRequestById",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "requestId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isburn",
											"type": "bool"
										}
									],
									"internalType": "struct RequestData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_page",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_pageSize",
									"type": "uint256"
								}
							],
							"name": "getUserSourceRequests",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_page",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_pageSize",
									"type": "uint256"
								}
							],
							"name": "getUserTargetRequests",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "isRequestIdUsed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mainContract",
							"outputs": [
								{
									"internalType": "contract IMainContract",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stablecoinAmount",
									"type": "uint256"
								}
							],
							"name": "mintWeUSD",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sourceChainId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "targetUser",
									"type": "address"
								}
							],
							"name": "mintWeUSDCrossChain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								}
							],
							"name": "registerStablecoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "registeredStablecoins",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								}
							],
							"name": "requestExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "requestIdToSourceActiveIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "requestIdToTargetActiveIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"name": "setFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_gasfee",
									"type": "uint256"
								}
							],
							"name": "setGasfee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "usedRequestIds",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weUSD",
							"outputs": [
								{
									"internalType": "contract IPicweUSD",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"burnWeUSD(address,uint256)": {
								"details": "Burns weUSD tokens and returns stablecoins to the user.",
								"params": {
									"stablecoin": "The address of the stablecoin to be returned.",
									"weUSDAmount": "The amount of weUSD to be burned."
								}
							},
							"burnWeUSDCrossChain(uint256,uint256,address)": {
								"details": "Burns weUSD tokens on the source chain for cross-chain transfer.",
								"params": {
									"amount": "The total amount of weUSD to be burned (including gas fee).",
									"targetChainId": "The ID of the target chain where weUSD will be minted.",
									"targetUser": "The address of the user on the target chain to receive the minted weUSD."
								}
							},
							"deleteStablecoin(address)": {
								"details": "Deletes a stablecoin (stablecoin).",
								"params": {
									"stablecoin": "The address of the stablecoin to be deleted. "
								}
							},
							"getRequestById(uint256)": {
								"details": "Retrieves the request data for a given request ID",
								"params": {
									"_requestId": "The unique identifier of the request"
								},
								"returns": {
									"_0": "RequestData struct containing the request details "
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getUserSourceRequests(address,uint256,uint256)": {
								"details": "Get all source chain request IDs for a specific user",
								"params": {
									"_page": "Page number (starting from 1)",
									"_pageSize": "Number of items per page",
									"_user": "User address"
								},
								"returns": {
									"_0": "uint256[] Array containing source chain request IDs for the user's specified page",
									"_1": "uint256 Total number of source chain requests for the user "
								}
							},
							"getUserTargetRequests(address,uint256,uint256)": {
								"details": "Get all target chain request IDs for a specific user",
								"params": {
									"_page": "Page number (starting from 1)",
									"_pageSize": "Number of items per page",
									"_user": "User address"
								},
								"returns": {
									"_0": "uint256[] Array containing target chain request IDs for the user's specified page",
									"_1": "uint256 Total number of target chain requests for the user "
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"mintWeUSD(address,uint256)": {
								"details": "Mints weUSD tokens in exchange for stablecoins.",
								"params": {
									"stablecoin": "The address of the stablecoin to be exchanged.",
									"stablecoinAmount": "The amount of stablecoin to be exchanged."
								}
							},
							"mintWeUSDCrossChain(uint256,uint256,uint256,address)": {
								"details": "Mints weUSD tokens on the target chain for cross-chain transfer.",
								"params": {
									"amount": "Amount of weUSD to be minted",
									"requestId": "Unique request ID to prevent duplicate processing",
									"sourceChainId": "ID of the source chain",
									"targetUser": "Address of the target user to receive the minted weUSD"
								}
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"registerStablecoin(address)": {
								"details": "Registers a stablecoin (stablecoin).",
								"params": {
									"stablecoin": "The address of the stablecoin to be registered. "
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"requestExists(uint256)": {
								"details": "Checks if a request exists for a given request ID",
								"params": {
									"_requestId": "The unique identifier of the request"
								},
								"returns": {
									"_0": "bool indicating whether the request exists "
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setFeeRecipient(address)": {
								"details": "Sets the fee recipient (feeRecipient).",
								"params": {
									"_feeRecipient": "The new fee recipient address. "
								}
							},
							"setGasfee(uint256)": {
								"details": "Sets the gas fee (gasfee).",
								"params": {
									"_gasfee": "The new gas fee amount. "
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"weusd/manageusd.sol\":534:17479  contract weUSD_manager is AccessControl, Pausable{... */\n  mstore(0x40, 0x80)\n    /* \"weusd/manageusd.sol\":993:1004  5*10**(6-1) */\n  0x07a120\n    /* \"weusd/manageusd.sol\":969:1004  uint256 public gasfee = 5*10**(6-1) */\n  0x04\n  sstore\n    /* \"weusd/manageusd.sol\":2130:2641  constructor(address _weUSD, address _stablecoin, address _crossChainMinter, address _main, address _feeRecipient) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  dup1\n  sload\n    /* \"weusd/manageusd.sol\":2255:2260  weUSD */\n  0x02\n    /* \"weusd/manageusd.sol\":2255:2280  weUSD = IPicweUSD(_weUSD) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup1\n  dup11\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"weusd/manageusd.sol\":2291:2326  mainContract = IMainContract(_main) */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n    /* \"weusd/manageusd.sol\":2291:2326  mainContract = IMainContract(_main) */\n  mul\n  not(sub(shl(0xa8, 0x01), 0x01))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"weusd/manageusd.sol\":2337:2379  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"weusd/manageusd.sol\":2368:2378  msg.sender */\n  caller\n    /* \"weusd/manageusd.sol\":2337:2347  _grantRole */\n  tag_9\n    /* \"weusd/manageusd.sol\":2337:2379  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_8:\n  pop\n    /* \"weusd/manageusd.sol\":2390:2424  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_10\n    /* \"weusd/manageusd.sol\":667:690  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"weusd/manageusd.sol\":2413:2423  msg.sender */\n  caller\n    /* \"weusd/manageusd.sol\":2390:2400  _grantRole */\n  tag_9\n    /* \"weusd/manageusd.sol\":2390:2424  _grantRole(ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"weusd/manageusd.sol\":2435:2489  _grantRole(CROSS_CHAIN_MINTER_ROLE, _crossChainMinter) */\n  tag_11\n    /* \"weusd/manageusd.sol\":816:852  keccak256(\"CROSS_CHAIN_MINTER_ROLE\") */\n  0x41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704\n    /* \"weusd/manageusd.sol\":2471:2488  _crossChainMinter */\n  dup5\n    /* \"weusd/manageusd.sol\":2435:2445  _grantRole */\n  tag_9\n    /* \"weusd/manageusd.sol\":2435:2489  _grantRole(CROSS_CHAIN_MINTER_ROLE, _crossChainMinter) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"weusd/manageusd.sol\":2500:2542  _grantRole(PAUSER_ROLE, _crossChainMinter) */\n  tag_12\n    /* \"weusd/manageusd.sol\":735:759  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"weusd/manageusd.sol\":2524:2541  _crossChainMinter */\n  dup5\n    /* \"weusd/manageusd.sol\":2500:2510  _grantRole */\n  tag_9\n    /* \"weusd/manageusd.sol\":2500:2542  _grantRole(PAUSER_ROLE, _crossChainMinter) */\n  jump\t// in\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"weusd/manageusd.sol\":2553:2587  registeredStablecoins[_stablecoin] */\n  swap4\n  dup5\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"weusd/manageusd.sol\":2553:2574  registeredStablecoins */\n  0x08\n    /* \"weusd/manageusd.sol\":2553:2587  registeredStablecoins[_stablecoin] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"weusd/manageusd.sol\":2553:2594  registeredStablecoins[_stablecoin] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"weusd/manageusd.sol\":2590:2594  true */\n  0x01\n    /* \"weusd/manageusd.sol\":2553:2594  registeredStablecoins[_stablecoin] = true */\n  or\n  swap1\n  sstore\n    /* \"weusd/manageusd.sol\":2605:2617  feeRecipient */\n  0x05\n    /* \"weusd/manageusd.sol\":2605:2633  feeRecipient = _feeRecipient */\n  dup1\n  sload\n  swap2\n  swap1\n  swap5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  swap3\n  sstore\n  pop\n    /* \"weusd/manageusd.sol\":534:17479  contract weUSD_manager is AccessControl, Pausable{... */\n  tag_24\n  swap2\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_17\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_18\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_17:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_23:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_26:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:746   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:408   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":404:405   */\n  0x00\n    /* \"#utility.yul\":401:402   */\n  dup1\n    /* \"#utility.yul\":394:406   */\n  revert\n    /* \"#utility.yul\":355:408   */\ntag_28:\n    /* \"#utility.yul\":427:467   */\n  tag_29\n    /* \"#utility.yul\":457:466   */\n  dup7\n    /* \"#utility.yul\":427:467   */\n  tag_23\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":417:467   */\n  swap5\n  pop\n    /* \"#utility.yul\":486:535   */\n  tag_30\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":520:529   */\n  dup8\n    /* \"#utility.yul\":516:534   */\n  add\n    /* \"#utility.yul\":486:535   */\n  tag_23\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":476:535   */\n  swap4\n  pop\n    /* \"#utility.yul\":554:603   */\n  tag_31\n    /* \"#utility.yul\":599:601   */\n  0x40\n    /* \"#utility.yul\":588:597   */\n  dup8\n    /* \"#utility.yul\":584:602   */\n  add\n    /* \"#utility.yul\":554:603   */\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":544:603   */\n  swap3\n  pop\n    /* \"#utility.yul\":622:671   */\n  tag_32\n    /* \"#utility.yul\":667:669   */\n  0x60\n    /* \"#utility.yul\":656:665   */\n  dup8\n    /* \"#utility.yul\":652:670   */\n  add\n    /* \"#utility.yul\":622:671   */\n  tag_23\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":612:671   */\n  swap2\n  pop\n    /* \"#utility.yul\":690:740   */\n  tag_33\n    /* \"#utility.yul\":735:738   */\n  0x80\n    /* \"#utility.yul\":724:733   */\n  dup8\n    /* \"#utility.yul\":720:739   */\n  add\n    /* \"#utility.yul\":690:740   */\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":680:740   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:746   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\ntag_24:\n    /* \"weusd/manageusd.sol\":534:17479  contract weUSD_manager is AccessControl, Pausable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"weusd/manageusd.sol\":534:17479  contract weUSD_manager is AccessControl, Pausable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x854935f1\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xc5494ffb\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xe74b981b\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xea277eca\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xeda87eff\n      eq\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0xc5494ffb\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xc6400657\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xc99773ce\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd19fad37\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd270e7ab\n      eq\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0xa217fddf\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa2519ae4\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa62e1b3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xbb93ede0\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xbead8d26\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x854935f1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x973697bd\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9ea4f3a4\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x2f92893c\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x46904840\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5badbe4c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0x2f92893c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x34d8c7d5\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x37174202\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0x1e7502d7\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x1e7502d7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1f224564\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x26757b73\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup1\n      0x677016\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0bd31a57\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1008776f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"weusd/manageusd.sol\":969:1004  uint256 public gasfee = 5*10**(6-1) */\n    tag_3:\n      tag_48\n      sload(0x04)\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"weusd/manageusd.sol\":969:1004  uint256 public gasfee = 5*10**(6-1) */\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":652:666   */\n      swap1\n      iszero\n        /* \"#utility.yul\":645:667   */\n      iszero\n        /* \"#utility.yul\":627:668   */\n      dup2\n      mstore\n        /* \"#utility.yul\":615:617   */\n      0x20\n        /* \"#utility.yul\":600:618   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      tag_50\n        /* \"#utility.yul\":487:674   */\n      jump\n        /* \"weusd/manageusd.sol\":7622:8566  function burnWeUSDCrossChain(uint256 targetChainId, uint256 amount, address targetUser) external whenNotPaused {... */\n    tag_5:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"weusd/manageusd.sol\":4459:4640  function deleteStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n    tag_6:\n      tag_58\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"weusd/manageusd.sol\":10114:10236  function isRequestIdUsed(uint256 requestId) public view returns (bool) {... */\n    tag_7:\n      tag_52\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"weusd/manageusd.sol\":10179:10183  bool */\n      0x00\n        /* \"weusd/manageusd.sol\":10203:10228  usedRequestIds[requestId] */\n      swap1\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":10203:10217  usedRequestIds */\n      0x09\n        /* \"weusd/manageusd.sol\":10203:10228  usedRequestIds[requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"weusd/manageusd.sol\":10114:10236  function isRequestIdUsed(uint256 requestId) public view returns (bool) {... */\n      jump\n        /* \"weusd/manageusd.sol\":9413:10106  function mintWeUSDCrossChain(uint256 requestId, uint256 sourceChainId, uint256 amount, address targetUser) external onlyRole(CROSS_CHAIN_MINTER_ROLE) whenNotPaused {... */\n    tag_8:\n      tag_58\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_48\n      tag_76\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n        /* \"weusd/manageusd.sol\":10607:10738  function getRequestById(uint256 _requestId) public view returns (RequestData memory) {... */\n    tag_10:\n      tag_81\n      tag_82\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_82:\n      0x40\n      dup1\n      mload\n      0x80\n      dup1\n      dup3\n      add\n      dup4\n      mstore\n      0x00\n      dup1\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      add\n      dup3\n      swap1\n      mstore\n      dup4\n      dup6\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      swap4\n      dup5\n      add\n      dup3\n      swap1\n      mstore\n        /* \"weusd/manageusd.sol\":10710:10730  requests[_requestId] */\n      swap5\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":10710:10718  requests */\n      0x0a\n        /* \"weusd/manageusd.sol\":10710:10730  requests[_requestId] */\n      dup6\n      mstore\n      dup4\n      swap1\n      keccak256\n        /* \"weusd/manageusd.sol\":10703:10730  return requests[_requestId] */\n      dup4\n      mload\n      swap2\n      dup3\n      add\n      dup5\n      mstore\n      dup1\n      sload\n      dup3\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      dup5\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"weusd/manageusd.sol\":10607:10738  function getRequestById(uint256 _requestId) public view returns (RequestData memory) {... */\n      jump\n    tag_81:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n        /* \"#utility.yul\":2886:2899   */\n      dup2\n      mload\n        /* \"#utility.yul\":2868:2900   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2960:2964   */\n      0x20\n        /* \"#utility.yul\":2948:2965   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2942:2966   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2938:2988   */\n      and\n        /* \"#utility.yul\":2916:2936   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2909:2989   */\n      mstore\n        /* \"#utility.yul\":3045:3049   */\n      0x40\n        /* \"#utility.yul\":3033:3050   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":3027:3051   */\n      mload\n        /* \"#utility.yul\":3005:3025   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2998:3052   */\n      mstore\n        /* \"#utility.yul\":3122:3126   */\n      0x60\n        /* \"#utility.yul\":3110:3127   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":3104:3128   */\n      mload\n        /* \"#utility.yul\":3097:3129   */\n      iszero\n        /* \"#utility.yul\":3090:3130   */\n      iszero\n        /* \"#utility.yul\":3068:3088   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3061:3131   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2855:2858   */\n      0x80\n        /* \"#utility.yul\":2840:2859   */\n      add\n      swap1\n        /* \"#utility.yul\":2663:3137   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_58\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"weusd/manageusd.sol\":1197:1243  mapping(uint256 => bool) public usedRequestIds */\n    tag_12:\n      tag_52\n      tag_91\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_91:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"weusd/manageusd.sol\":1091:1128  uint256[] public activeTargetRequests */\n    tag_13:\n      tag_48\n      tag_95\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_14:\n      tag_58\n      tag_99\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"weusd/manageusd.sol\":766:852  bytes32 public constant CROSS_CHAIN_MINTER_ROLE = keccak256(\"CROSS_CHAIN_MINTER_ROLE\") */\n    tag_15:\n      tag_48\n        /* \"weusd/manageusd.sol\":816:852  keccak256(\"CROSS_CHAIN_MINTER_ROLE\") */\n      0x41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704\n        /* \"weusd/manageusd.sol\":766:852  bytes32 public constant CROSS_CHAIN_MINTER_ROLE = keccak256(\"CROSS_CHAIN_MINTER_ROLE\") */\n      dup2\n      jump\n        /* \"weusd/manageusd.sol\":2730:2807  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_16:\n      tag_58\n      tag_105\n      jump\t// in\n        /* \"weusd/manageusd.sol\":1011:1038  address public feeRecipient */\n    tag_17:\n      sload(0x05)\n      tag_106\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_106:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3611:3643   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3593:3644   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3581:3583   */\n      0x20\n        /* \"#utility.yul\":3566:3584   */\n      add\n        /* \"weusd/manageusd.sol\":1011:1038  address public feeRecipient */\n      tag_50\n        /* \"#utility.yul\":3447:3650   */\n      jump\n        /* \"weusd/manageusd.sol\":888:915  uint256 public requestCount */\n    tag_18:\n      tag_48\n      sload(0x03)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      jump(tag_52)\n        /* \"weusd/manageusd.sol\":630:690  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_20:\n      tag_48\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"weusd/manageusd.sol\":2649:2722  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_21:\n      tag_58\n      tag_120\n      jump\t// in\n        /* \"weusd/manageusd.sol\":1047:1084  uint256[] public activeSourceRequests */\n    tag_22:\n      tag_48\n      tag_122\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_23:\n      tag_52\n      tag_126\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"weusd/manageusd.sol\":11784:13279  function getUserSourceRequests(address _user, uint256 _page, uint256 _pageSize) public view returns (uint256[] memory, uint256) {... */\n    tag_24:\n      tag_129\n      tag_130\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_130:\n      tag_132\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_50\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n        /* \"weusd/manageusd.sol\":1137:1190  mapping(address => bool) public registeredStablecoins */\n    tag_25:\n      tag_52\n      tag_136\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_136:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_26:\n      tag_48\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"weusd/manageusd.sol\":5163:5799  function mintWeUSD(address stablecoin, uint256 stablecoinAmount) external {... */\n    tag_27:\n      tag_58\n      tag_143\n      calldatasize\n      0x04\n      tag_144\n      jump\t// in\n    tag_143:\n      tag_145\n      jump\t// in\n        /* \"weusd/manageusd.sol\":859:881  IPicweUSD public weUSD */\n    tag_28:\n      sload(0x02)\n      tag_106\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"weusd/manageusd.sol\":13903:15398  function getUserTargetRequests(address _user, uint256 _page, uint256 _pageSize) public view returns (uint256[] memory, uint256) {... */\n    tag_29:\n      tag_129\n      tag_151\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n        /* \"weusd/manageusd.sol\":1377:1440  mapping(uint256 => uint256) public requestIdToTargetActiveIndex */\n    tag_30:\n      tag_48\n      tag_155\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_155:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"weusd/manageusd.sol\":3086:3187  function setGasfee(uint256 _gasfee) external onlyRole(ADMIN_ROLE) {... */\n    tag_31:\n      tag_58\n      tag_159\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"weusd/manageusd.sol\":3954:4139  function registerStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n    tag_32:\n      tag_58\n      tag_162\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n        /* \"weusd/manageusd.sol\":1307:1370  mapping(uint256 => uint256) public requestIdToSourceActiveIndex */\n    tag_33:\n      tag_48\n      tag_165\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_165:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"weusd/manageusd.sol\":6314:6905  function burnWeUSD(address stablecoin, uint256 weUSDAmount) external {... */\n    tag_34:\n      tag_58\n      tag_169\n      calldatasize\n      0x04\n      tag_144\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n        /* \"weusd/manageusd.sol\":590:623  IMainContract public mainContract */\n    tag_35:\n      sload(0x01)\n      tag_106\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_36:\n      tag_58\n      tag_176\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n        /* \"weusd/manageusd.sol\":697:759  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_37:\n      tag_48\n        /* \"weusd/manageusd.sol\":735:759  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"weusd/manageusd.sol\":697:759  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\n        /* \"weusd/manageusd.sol\":3497:3622  function setFeeRecipient(address _feeRecipient) external onlyRole(ADMIN_ROLE) {... */\n    tag_38:\n      tag_58\n      tag_182\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_182:\n      tag_183\n      jump\t// in\n        /* \"weusd/manageusd.sol\":11017:11148  function requestExists(uint256 _requestId) public view returns (bool) {... */\n    tag_39:\n      tag_52\n      tag_185\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_185:\n        /* \"weusd/manageusd.sol\":11081:11085  bool */\n      0x00\n        /* \"weusd/manageusd.sol\":11105:11125  requests[_requestId] */\n      swap1\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":11105:11113  requests */\n      0x0a\n        /* \"weusd/manageusd.sol\":11105:11125  requests[_requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"weusd/manageusd.sol\":11105:11135  requests[_requestId].requestId */\n      sload\n        /* \"weusd/manageusd.sol\":11105:11140  requests[_requestId].requestId != 0 */\n      iszero\n      iszero\n      swap1\n        /* \"weusd/manageusd.sol\":11017:11148  function requestExists(uint256 _requestId) public view returns (bool) {... */\n      jump\n        /* \"weusd/manageusd.sol\":922:962  uint8 public constant WEUSD_DECIMALS = 6 */\n    tag_40:\n      tag_188\n        /* \"weusd/manageusd.sol\":961:962  6 */\n      0x06\n        /* \"weusd/manageusd.sol\":922:962  uint8 public constant WEUSD_DECIMALS = 6 */\n      dup2\n      jump\n    tag_188:\n      mload(0x40)\n        /* \"#utility.yul\":5708:5712   */\n      0xff\n        /* \"#utility.yul\":5696:5713   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5678:5714   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5666:5668   */\n      0x20\n        /* \"#utility.yul\":5651:5669   */\n      add\n        /* \"weusd/manageusd.sol\":922:962  uint8 public constant WEUSD_DECIMALS = 6 */\n      tag_50\n        /* \"#utility.yul\":5536:5720   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_194\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"weusd/manageusd.sol\":7622:8566  function burnWeUSDCrossChain(uint256 targetChainId, uint256 amount, address targetUser) external whenNotPaused {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_197\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_198\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_197:\n        /* \"weusd/manageusd.sol\":7769:7782  block.chainid */\n      chainid\n        /* \"weusd/manageusd.sol\":7752:7765  targetChainId */\n      dup4\n        /* \"weusd/manageusd.sol\":7752:7782  targetChainId != block.chainid */\n      sub\n        /* \"weusd/manageusd.sol\":7744:7835  require(targetChainId != block.chainid, \"Target chain must be different from source chain\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5927:5929   */\n      0x20\n        /* \"weusd/manageusd.sol\":7744:7835  require(targetChainId != block.chainid, \"Target chain must be different from source chain\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5909:5930   */\n      mstore\n        /* \"#utility.yul\":5966:5968   */\n      0x30\n        /* \"#utility.yul\":5946:5964   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5939:5969   */\n      mstore\n        /* \"#utility.yul\":6005:6039   */\n      0x54617267657420636861696e206d75737420626520646966666572656e742066\n        /* \"#utility.yul\":5985:6003   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5978:6040   */\n      mstore\n      shl(0x81, 0x3937b69039b7bab931b29031b430b4b7)\n        /* \"#utility.yul\":6056:6074   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6049:6095   */\n      mstore\n        /* \"#utility.yul\":6112:6131   */\n      0x84\n      add\n        /* \"weusd/manageusd.sol\":7744:7835  require(targetChainId != block.chainid, \"Target chain must be different from source chain\") */\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"weusd/manageusd.sol\":7863:7869  gasfee */\n      sload(0x04)\n        /* \"weusd/manageusd.sol\":7854:7860  amount */\n      dup3\n        /* \"weusd/manageusd.sol\":7854:7869  amount > gasfee */\n      gt\n        /* \"weusd/manageusd.sol\":7846:7908  require(amount > gasfee, \"Amount must be greater than gasfee\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6344:6346   */\n      0x20\n        /* \"weusd/manageusd.sol\":7846:7908  require(amount > gasfee, \"Amount must be greater than gasfee\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6326:6347   */\n      mstore\n        /* \"#utility.yul\":6383:6385   */\n      0x22\n        /* \"#utility.yul\":6363:6381   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6356:6386   */\n      mstore\n        /* \"#utility.yul\":6422:6456   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2067617366\n        /* \"#utility.yul\":6402:6420   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6395:6457   */\n      mstore\n      shl(0xf0, 0x6565)\n        /* \"#utility.yul\":6473:6491   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6466:6498   */\n      mstore\n        /* \"#utility.yul\":6515:6534   */\n      0x84\n      add\n        /* \"weusd/manageusd.sol\":7846:7908  require(amount > gasfee, \"Amount must be greater than gasfee\") */\n      tag_201\n        /* \"#utility.yul\":6142:6540   */\n      jump\n        /* \"weusd/manageusd.sol\":7846:7908  require(amount > gasfee, \"Amount must be greater than gasfee\") */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":7927:7951  targetUser != address(0) */\n      dup2\n      and\n        /* \"weusd/manageusd.sol\":7919:7983  require(targetUser != address(0), \"Invalid target user address\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6747:6749   */\n      0x20\n        /* \"weusd/manageusd.sol\":7919:7983  require(targetUser != address(0), \"Invalid target user address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6729:6750   */\n      mstore\n        /* \"#utility.yul\":6786:6788   */\n      0x1b\n        /* \"#utility.yul\":6766:6784   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6759:6789   */\n      mstore\n        /* \"#utility.yul\":6825:6854   */\n      0x496e76616c696420746172676574207573657220616464726573730000000000\n        /* \"#utility.yul\":6805:6823   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6798:6855   */\n      mstore\n        /* \"#utility.yul\":6872:6890   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":7919:7983  require(targetUser != address(0), \"Invalid target user address\") */\n      tag_201\n        /* \"#utility.yul\":6545:6896   */\n      jump\n        /* \"weusd/manageusd.sol\":7919:7983  require(targetUser != address(0), \"Invalid target user address\") */\n    tag_206:\n        /* \"weusd/manageusd.sol\":7994:8015  uint256 sourceChainId */\n      0x00\n        /* \"weusd/manageusd.sol\":8018:8031  block.chainid */\n      chainid\n        /* \"weusd/manageusd.sol\":7994:8031  uint256 sourceChainId = block.chainid */\n      swap1\n      pop\n        /* \"weusd/manageusd.sol\":8042:8059  uint256 requestId */\n      0x00\n        /* \"weusd/manageusd.sol\":8140:8152  requestCount */\n      0x03\n      0x00\n        /* \"weusd/manageusd.sol\":8138:8152  ++requestCount */\n      dup2\n      sload\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      swap2\n      dup3\n      swap1\n      sstore\n      pop\n        /* \"weusd/manageusd.sol\":8080:8083  192 */\n      0xc0\n        /* \"weusd/manageusd.sol\":8063:8083  sourceChainId << 192 */\n      dup4\n      swap1\n      shl\n        /* \"weusd/manageusd.sol\":8105:8108  128 */\n      0x80\n        /* \"weusd/manageusd.sol\":8088:8108  targetChainId << 128 */\n      dup8\n      swap1\n      shl\n        /* \"weusd/manageusd.sol\":8062:8109  (sourceChainId << 192) | (targetChainId << 128) */\n      or\n        /* \"weusd/manageusd.sol\":8113:8128  block.timestamp */\n      timestamp\n        /* \"weusd/manageusd.sol\":8132:8134  64 */\n      0x40\n        /* \"weusd/manageusd.sol\":8113:8134  block.timestamp << 64 */\n      shl\n        /* \"weusd/manageusd.sol\":8062:8135  (sourceChainId << 192) | (targetChainId << 128) | (block.timestamp << 64) */\n      or\n        /* \"weusd/manageusd.sol\":8062:8152  (sourceChainId << 192) | (targetChainId << 128) | (block.timestamp << 64) | ++requestCount */\n      or\n      swap1\n      pop\n        /* \"weusd/manageusd.sol\":8172:8196  requestExists(requestId) */\n      tag_211\n        /* \"weusd/manageusd.sol\":8062:8152  (sourceChainId << 192) | (targetChainId << 128) | (block.timestamp << 64) | ++requestCount */\n      dup2\n        /* \"weusd/manageusd.sol\":11081:11085  bool */\n      0x00\n        /* \"weusd/manageusd.sol\":11105:11125  requests[_requestId] */\n      swap1\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":11105:11113  requests */\n      0x0a\n        /* \"weusd/manageusd.sol\":11105:11125  requests[_requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"weusd/manageusd.sol\":11105:11135  requests[_requestId].requestId */\n      sload\n        /* \"weusd/manageusd.sol\":11105:11140  requests[_requestId].requestId != 0 */\n      iszero\n      iszero\n      swap1\n        /* \"weusd/manageusd.sol\":11017:11148  function requestExists(uint256 _requestId) public view returns (bool) {... */\n      jump\n        /* \"weusd/manageusd.sol\":8172:8196  requestExists(requestId) */\n    tag_211:\n        /* \"weusd/manageusd.sol\":8171:8196  !requestExists(requestId) */\n      iszero\n        /* \"weusd/manageusd.sol\":8163:8226  require(!requestExists(requestId), \"Request ID already exists\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7375:7377   */\n      0x20\n        /* \"weusd/manageusd.sol\":8163:8226  require(!requestExists(requestId), \"Request ID already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7357:7378   */\n      mstore\n        /* \"#utility.yul\":7414:7416   */\n      0x19\n        /* \"#utility.yul\":7394:7412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7387:7417   */\n      mstore\n      shl(0x38, 0x5265717565737420494420616c726561647920657869737473)\n        /* \"#utility.yul\":7433:7451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7426:7481   */\n      mstore\n        /* \"#utility.yul\":7498:7516   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":8163:8226  require(!requestExists(requestId), \"Request ID already exists\") */\n      tag_201\n        /* \"#utility.yul\":7173:7522   */\n      jump\n        /* \"weusd/manageusd.sol\":8163:8226  require(!requestExists(requestId), \"Request ID already exists\") */\n    tag_212:\n        /* \"weusd/manageusd.sol\":8237:8255  uint256 burnAmount */\n      0x00\n        /* \"weusd/manageusd.sol\":8267:8273  gasfee */\n      sload(0x04)\n        /* \"weusd/manageusd.sol\":8258:8264  amount */\n      dup6\n        /* \"weusd/manageusd.sol\":8258:8273  amount - gasfee */\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"weusd/manageusd.sol\":8284:8289  weUSD */\n      sload(0x02)\n        /* \"weusd/manageusd.sol\":8315:8327  feeRecipient */\n      sload(0x05)\n        /* \"weusd/manageusd.sol\":8329:8335  gasfee */\n      0x04\n      dup1\n      sload\n        /* \"weusd/manageusd.sol\":8284:8336  weUSD.transferFrom(msg.sender, feeRecipient, gasfee) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":8303:8313  msg.sender */\n      caller\n        /* \"weusd/manageusd.sol\":8284:8336  weUSD.transferFrom(msg.sender, feeRecipient, gasfee) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":7862:7913   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":8315:8327  feeRecipient */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":7929:7947   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7922:7982   */\n      mstore\n        /* \"#utility.yul\":7998:8016   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7991:8025   */\n      mstore\n        /* \"weusd/manageusd.sol\":8237:8273  uint256 burnAmount = amount - gasfee */\n      swap3\n      swap4\n      pop\n        /* \"weusd/manageusd.sol\":8284:8289  weUSD */\n      and\n      swap1\n        /* \"weusd/manageusd.sol\":8284:8302  weUSD.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7835:7853   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":8284:8336  weUSD.transferFrom(msg.sender, feeRecipient, gasfee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      pop\n        /* \"weusd/manageusd.sol\":8347:8352  weUSD */\n      sload(0x02)\n        /* \"weusd/manageusd.sol\":8347:8385  weUSD.burnFrom(msg.sender, burnAmount) */\n      mload(0x40)\n      shl(0xe4, 0x079cc679)\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":8362:8372  msg.sender */\n      caller\n        /* \"weusd/manageusd.sol\":8347:8385  weUSD.burnFrom(msg.sender, burnAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8492:8543   */\n      mstore\n        /* \"#utility.yul\":8559:8577   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8552:8586   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":8347:8352  weUSD */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"weusd/manageusd.sol\":8347:8361  weUSD.burnFrom */\n      0x79cc6790\n      swap1\n        /* \"#utility.yul\":8465:8483   */\n      0x44\n      add\n        /* \"weusd/manageusd.sol\":8347:8385  weUSD.burnFrom(msg.sender, burnAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":8396:8451  _createRequest(requestId, msg.sender, burnAmount, true) */\n      tag_228\n        /* \"weusd/manageusd.sol\":8411:8420  requestId */\n      dup3\n        /* \"weusd/manageusd.sol\":8422:8432  msg.sender */\n      caller\n        /* \"weusd/manageusd.sol\":8434:8444  burnAmount */\n      dup4\n        /* \"weusd/manageusd.sol\":8446:8450  true */\n      0x01\n        /* \"weusd/manageusd.sol\":8396:8410  _createRequest */\n      tag_229\n        /* \"weusd/manageusd.sol\":8396:8451  _createRequest(requestId, msg.sender, burnAmount, true) */\n      jump\t// in\n    tag_228:\n        /* \"weusd/manageusd.sol\":8467:8558  CrossChainBurn(requestId, msg.sender, sourceChainId, targetChainId, burnAmount, targetUser) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8828:8853   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":8884:8886   */\n      0x20\n        /* \"#utility.yul\":8869:8887   */\n      dup2\n      add\n        /* \"#utility.yul\":8862:8896   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":8912:8930   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":8905:8939   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8975:9007   */\n      dup6\n      and\n        /* \"#utility.yul\":8970:8972   */\n      0x60\n        /* \"#utility.yul\":8955:8973   */\n      dup3\n      add\n        /* \"#utility.yul\":8948:9008   */\n      mstore\n        /* \"weusd/manageusd.sol\":8493:8503  msg.sender */\n      caller\n      swap1\n        /* \"weusd/manageusd.sol\":8482:8491  requestId */\n      dup4\n      swap1\n        /* \"weusd/manageusd.sol\":8467:8558  CrossChainBurn(requestId, msg.sender, sourceChainId, targetChainId, burnAmount, targetUser) */\n      0x26c32cc5ff12981b55681844f2fb47d52c5e521c58d5288b1325f3304a7e8852\n      swap1\n        /* \"#utility.yul\":8815:8818   */\n      0x80\n        /* \"#utility.yul\":8800:8819   */\n      add\n        /* \"weusd/manageusd.sol\":8467:8558  CrossChainBurn(requestId, msg.sender, sourceChainId, targetChainId, burnAmount, targetUser) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"weusd/manageusd.sol\":7733:8566  {... */\n      pop\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":7622:8566  function burnWeUSDCrossChain(uint256 targetChainId, uint256 amount, address targetUser) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"weusd/manageusd.sol\":4459:4640  function deleteStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n    tag_65:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_233\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":4546:4579  registeredStablecoins[stablecoin] */\n      dup3\n      and\n        /* \"weusd/manageusd.sol\":4582:4587  false */\n      0x00\n        /* \"weusd/manageusd.sol\":4546:4579  registeredStablecoins[stablecoin] */\n      dup2\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":4546:4567  registeredStablecoins */\n      0x08\n        /* \"weusd/manageusd.sol\":4546:4579  registeredStablecoins[stablecoin] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"weusd/manageusd.sol\":4546:4587  registeredStablecoins[stablecoin] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"weusd/manageusd.sol\":4603:4632  StablecoinDeleted(stablecoin) */\n      mload\n      0x0fa63555fe68cad70e08233633567493a3c74afdc8c7fb9f0c03a8e74f1a137a\n      swap2\n        /* \"weusd/manageusd.sol\":4582:4587  false */\n      swap1\n        /* \"weusd/manageusd.sol\":4603:4632  StablecoinDeleted(stablecoin) */\n      log2\n        /* \"weusd/manageusd.sol\":4459:4640  function deleteStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"weusd/manageusd.sol\":9413:10106  function mintWeUSDCrossChain(uint256 requestId, uint256 sourceChainId, uint256 amount, address targetUser) external onlyRole(CROSS_CHAIN_MINTER_ROLE) whenNotPaused {... */\n    tag_74:\n        /* \"weusd/manageusd.sol\":816:852  keccak256(\"CROSS_CHAIN_MINTER_ROLE\") */\n      0x41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_238\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_198\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_240:\n        /* \"weusd/manageusd.sol\":9613:9626  block.chainid */\n      chainid\n        /* \"weusd/manageusd.sol\":9596:9609  sourceChainId */\n      dup5\n        /* \"weusd/manageusd.sol\":9596:9626  sourceChainId != block.chainid */\n      sub\n        /* \"weusd/manageusd.sol\":9588:9679  require(sourceChainId != block.chainid, \"Source chain must be different from target chain\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9221:9223   */\n      0x20\n        /* \"weusd/manageusd.sol\":9588:9679  require(sourceChainId != block.chainid, \"Source chain must be different from target chain\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9203:9224   */\n      mstore\n        /* \"#utility.yul\":9260:9262   */\n      0x30\n        /* \"#utility.yul\":9240:9258   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9233:9263   */\n      mstore\n        /* \"#utility.yul\":9299:9333   */\n      0x536f7572636520636861696e206d75737420626520646966666572656e742066\n        /* \"#utility.yul\":9279:9297   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9272:9334   */\n      mstore\n      shl(0x81, 0x3937b6903a30b933b2ba1031b430b4b7)\n        /* \"#utility.yul\":9350:9368   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9343:9389   */\n      mstore\n        /* \"#utility.yul\":9406:9425   */\n      0x84\n      add\n        /* \"weusd/manageusd.sol\":9588:9679  require(sourceChainId != block.chainid, \"Source chain must be different from target chain\") */\n      tag_201\n        /* \"#utility.yul\":9019:9431   */\n      jump\n        /* \"weusd/manageusd.sol\":9588:9679  require(sourceChainId != block.chainid, \"Source chain must be different from target chain\") */\n    tag_242:\n        /* \"weusd/manageusd.sol\":9707:9708  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":9698:9704  amount */\n      dup4\n        /* \"weusd/manageusd.sol\":9698:9708  amount > 0 */\n      gt\n        /* \"weusd/manageusd.sol\":9690:9742  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9638:9640   */\n      0x20\n        /* \"weusd/manageusd.sol\":9690:9742  require(amount > 0, \"Amount must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9620:9641   */\n      mstore\n        /* \"#utility.yul\":9677:9679   */\n      0x1d\n        /* \"#utility.yul\":9657:9675   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9650:9680   */\n      mstore\n        /* \"#utility.yul\":9716:9747   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":9696:9714   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9689:9748   */\n      mstore\n        /* \"#utility.yul\":9765:9783   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":9690:9742  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_201\n        /* \"#utility.yul\":9436:9789   */\n      jump\n        /* \"weusd/manageusd.sol\":9690:9742  require(amount > 0, \"Amount must be greater than 0\") */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":9761:9785  targetUser != address(0) */\n      dup3\n      and\n        /* \"weusd/manageusd.sol\":9753:9817  require(targetUser != address(0), \"Invalid target user address\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6747:6749   */\n      0x20\n        /* \"weusd/manageusd.sol\":9753:9817  require(targetUser != address(0), \"Invalid target user address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6729:6750   */\n      mstore\n        /* \"#utility.yul\":6786:6788   */\n      0x1b\n        /* \"#utility.yul\":6766:6784   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6759:6789   */\n      mstore\n        /* \"#utility.yul\":6825:6854   */\n      0x496e76616c696420746172676574207573657220616464726573730000000000\n        /* \"#utility.yul\":6805:6823   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6798:6855   */\n      mstore\n        /* \"#utility.yul\":6872:6890   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":9753:9817  require(targetUser != address(0), \"Invalid target user address\") */\n      tag_201\n        /* \"#utility.yul\":6545:6896   */\n      jump\n        /* \"weusd/manageusd.sol\":9753:9817  require(targetUser != address(0), \"Invalid target user address\") */\n    tag_248:\n        /* \"weusd/manageusd.sol\":11081:11085  bool */\n      0x00\n        /* \"weusd/manageusd.sol\":11105:11125  requests[_requestId] */\n      dup6\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":11105:11113  requests */\n      0x0a\n        /* \"weusd/manageusd.sol\":11105:11125  requests[_requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"weusd/manageusd.sol\":11105:11135  requests[_requestId].requestId */\n      sload\n        /* \"weusd/manageusd.sol\":11105:11140  requests[_requestId].requestId != 0 */\n      iszero\n        /* \"weusd/manageusd.sol\":9828:9891  require(!requestExists(requestId), \"Request ID already exists\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7375:7377   */\n      0x20\n        /* \"weusd/manageusd.sol\":9828:9891  require(!requestExists(requestId), \"Request ID already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7357:7378   */\n      mstore\n        /* \"#utility.yul\":7414:7416   */\n      0x19\n        /* \"#utility.yul\":7394:7412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7387:7417   */\n      mstore\n      shl(0x38, 0x5265717565737420494420616c726561647920657869737473)\n        /* \"#utility.yul\":7433:7451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7426:7481   */\n      mstore\n        /* \"#utility.yul\":7498:7516   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":9828:9891  require(!requestExists(requestId), \"Request ID already exists\") */\n      tag_201\n        /* \"#utility.yul\":7173:7522   */\n      jump\n        /* \"weusd/manageusd.sol\":9828:9891  require(!requestExists(requestId), \"Request ID already exists\") */\n    tag_251:\n        /* \"weusd/manageusd.sol\":9902:9907  weUSD */\n      sload(0x02)\n        /* \"weusd/manageusd.sol\":9902:9932  weUSD.mint(targetUser, amount) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8510:8542   */\n      dup5\n      dup2\n      and\n        /* \"weusd/manageusd.sol\":9902:9932  weUSD.mint(targetUser, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8492:8543   */\n      mstore\n        /* \"#utility.yul\":8559:8577   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8552:8586   */\n      dup7\n      swap1\n      mstore\n        /* \"weusd/manageusd.sol\":9902:9907  weUSD */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"weusd/manageusd.sol\":9902:9912  weUSD.mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":8465:8483   */\n      0x44\n      add\n        /* \"weusd/manageusd.sol\":9902:9932  weUSD.mint(targetUser, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_254\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_254:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":9943:9995  _createRequest(requestId, targetUser, amount, false) */\n      tag_257\n        /* \"weusd/manageusd.sol\":9958:9967  requestId */\n      dup6\n        /* \"weusd/manageusd.sol\":9969:9979  targetUser */\n      dup4\n        /* \"weusd/manageusd.sol\":9981:9987  amount */\n      dup6\n        /* \"weusd/manageusd.sol\":9989:9994  false */\n      0x00\n        /* \"weusd/manageusd.sol\":9943:9957  _createRequest */\n      tag_229\n        /* \"weusd/manageusd.sol\":9943:9995  _createRequest(requestId, targetUser, amount, false) */\n      jump\t// in\n    tag_257:\n        /* \"weusd/manageusd.sol\":10011:10098  CrossChainMint(requestId, msg.sender, sourceChainId, block.chainid, amount, targetUser) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8828:8853   */\n      dup6\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":10064:10077  block.chainid */\n      chainid\n        /* \"#utility.yul\":8884:8886   */\n      0x20\n        /* \"#utility.yul\":8869:8887   */\n      dup3\n      add\n        /* \"#utility.yul\":8862:8896   */\n      mstore\n        /* \"#utility.yul\":8912:8930   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":8905:8939   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8975:9007   */\n      dup4\n      and\n        /* \"#utility.yul\":8970:8972   */\n      0x60\n        /* \"#utility.yul\":8955:8973   */\n      dup3\n      add\n        /* \"#utility.yul\":8948:9008   */\n      mstore\n        /* \"weusd/manageusd.sol\":10037:10047  msg.sender */\n      caller\n      swap1\n        /* \"weusd/manageusd.sol\":10026:10035  requestId */\n      dup7\n      swap1\n        /* \"weusd/manageusd.sol\":10011:10098  CrossChainMint(requestId, msg.sender, sourceChainId, block.chainid, amount, targetUser) */\n      0x7690d9cedf96f067bda7114c24bba31be184ae045d199979a0a373862e70d46b\n      swap1\n        /* \"#utility.yul\":8815:8818   */\n      0x80\n        /* \"#utility.yul\":8800:8819   */\n      add\n        /* \"weusd/manageusd.sol\":10011:10098  CrossChainMint(requestId, msg.sender, sourceChainId, block.chainid, amount, targetUser) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"weusd/manageusd.sol\":9413:10106  function mintWeUSDCrossChain(uint256 requestId, uint256 sourceChainId, uint256 amount, address targetUser) external onlyRole(CROSS_CHAIN_MINTER_ROLE) whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_265\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_268\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_267:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"weusd/manageusd.sol\":1091:1128  uint256[] public activeTargetRequests */\n    tag_96:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_275\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_276\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_275:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"weusd/manageusd.sol\":2730:2807  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_105:\n        /* \"weusd/manageusd.sol\":735:759  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_278:\n        /* \"weusd/manageusd.sol\":2789:2799  _unpause() */\n      tag_280\n        /* \"weusd/manageusd.sol\":2789:2797  _unpause */\n      tag_281\n        /* \"weusd/manageusd.sol\":2789:2799  _unpause() */\n      jump\t// in\n    tag_280:\n        /* \"weusd/manageusd.sol\":2730:2807  function unpause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"weusd/manageusd.sol\":2649:2722  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_120:\n        /* \"weusd/manageusd.sol\":735:759  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_284\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_284:\n        /* \"weusd/manageusd.sol\":2706:2714  _pause() */\n      tag_280\n        /* \"weusd/manageusd.sol\":2706:2712  _pause */\n      tag_287\n        /* \"weusd/manageusd.sol\":2706:2714  _pause() */\n      jump\t// in\n        /* \"weusd/manageusd.sol\":1047:1084  uint256[] public activeSourceRequests */\n    tag_123:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"weusd/manageusd.sol\":11784:13279  function getUserSourceRequests(address _user, uint256 _page, uint256 _pageSize) public view returns (uint256[] memory, uint256) {... */\n    tag_132:\n        /* \"weusd/manageusd.sol\":11885:11901  uint256[] memory */\n      0x60\n        /* \"weusd/manageusd.sol\":11903:11910  uint256 */\n      0x00\n        /* \"weusd/manageusd.sol\":11931:11941  _page == 0 */\n      dup4\n      iszero\n      dup1\n        /* \"weusd/manageusd.sol\":11931:11959  _page == 0 || _pageSize == 0 */\n      tag_292\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":11945:11959  _pageSize == 0 */\n      dup3\n      iszero\n        /* \"weusd/manageusd.sol\":11931:11959  _page == 0 || _pageSize == 0 */\n    tag_292:\n        /* \"weusd/manageusd.sol\":11931:11991  _page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0) */\n      dup1\n      tag_294\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":11972:11973  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":11964:11969  _page */\n      dup5\n        /* \"weusd/manageusd.sol\":11964:11973  _page > 0 */\n      gt\n        /* \"weusd/manageusd.sol\":11964:11990  _page > 0 && _pageSize > 0 */\n      dup1\n      iszero\n      tag_294\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":11989:11990  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":11977:11986  _pageSize */\n      dup4\n        /* \"weusd/manageusd.sol\":11977:11990  _pageSize > 0 */\n      gt\n        /* \"weusd/manageusd.sol\":11964:11990  _page > 0 && _pageSize > 0 */\n    tag_294:\n        /* \"weusd/manageusd.sol\":11923:12021  require(_page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0), \"Invalid page or page size\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9996:9998   */\n      0x20\n        /* \"weusd/manageusd.sol\":11923:12021  require(_page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0), \"Invalid page or page size\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9978:9999   */\n      mstore\n        /* \"#utility.yul\":10035:10037   */\n      0x19\n        /* \"#utility.yul\":10015:10033   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10008:10038   */\n      mstore\n      shl(0x38, 0x496e76616c69642070616765206f7220706167652073697a65)\n        /* \"#utility.yul\":10054:10072   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10047:10102   */\n      mstore\n        /* \"#utility.yul\":10119:10137   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":11923:12021  require(_page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0), \"Invalid page or page size\") */\n      tag_201\n        /* \"#utility.yul\":9794:10143   */\n      jump\n        /* \"weusd/manageusd.sol\":11923:12021  require(_page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0), \"Invalid page or page size\") */\n    tag_295:\n        /* \"weusd/manageusd.sol\":12034:12055  uint256 totalRequests */\n      0x00\n        /* \"weusd/manageusd.sol\":12075:12084  uint256 i */\n      dup1\n        /* \"weusd/manageusd.sol\":12070:12257  for (uint256 i = 0; i < activeSourceRequests.length; i++) {... */\n    tag_298:\n        /* \"weusd/manageusd.sol\":12094:12114  activeSourceRequests */\n      0x06\n        /* \"weusd/manageusd.sol\":12094:12121  activeSourceRequests.length */\n      sload\n        /* \"weusd/manageusd.sol\":12090:12121  i < activeSourceRequests.length */\n      dup2\n      lt\n        /* \"weusd/manageusd.sol\":12070:12257  for (uint256 i = 0; i < activeSourceRequests.length; i++) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"weusd/manageusd.sol\":12189:12194  _user */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":12147:12194  requests[activeSourceRequests[i]].user == _user */\n      and\n        /* \"weusd/manageusd.sol\":12147:12155  requests */\n      0x0a\n        /* \"weusd/manageusd.sol\":12147:12180  requests[activeSourceRequests[i]] */\n      0x00\n        /* \"weusd/manageusd.sol\":12156:12176  activeSourceRequests */\n      0x06\n        /* \"weusd/manageusd.sol\":12177:12178  i */\n      dup5\n        /* \"weusd/manageusd.sol\":12156:12179  activeSourceRequests[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_302\n      jumpi\n      tag_302\n      tag_303\n      jump\t// in\n    tag_302:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"weusd/manageusd.sol\":12147:12180  requests[activeSourceRequests[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"weusd/manageusd.sol\":12147:12185  requests[activeSourceRequests[i]].user */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"weusd/manageusd.sol\":12147:12194  requests[activeSourceRequests[i]].user == _user */\n      sub\n        /* \"weusd/manageusd.sol\":12143:12246  if (requests[activeSourceRequests[i]].user == _user) {... */\n      tag_305\n      jumpi\n        /* \"weusd/manageusd.sol\":12215:12230  totalRequests++ */\n      dup2\n      tag_306\n      dup2\n      tag_210\n      jump\t// in\n    tag_306:\n      swap3\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":12143:12246  if (requests[activeSourceRequests[i]].user == _user) {... */\n    tag_305:\n        /* \"weusd/manageusd.sol\":12123:12126  i++ */\n      0x01\n      add\n        /* \"weusd/manageusd.sol\":12070:12257  for (uint256 i = 0; i < activeSourceRequests.length; i++) {... */\n      jump(tag_298)\n    tag_299:\n      pop\n        /* \"weusd/manageusd.sol\":12269:12287  uint256 startIndex */\n      0x00\n        /* \"weusd/manageusd.sol\":12321:12334  totalRequests */\n      dup2\n        /* \"weusd/manageusd.sol\":12351:12360  _page > 0 */\n      dup7\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"weusd/manageusd.sol\":12351:12377  _page > 0 && _pageSize > 0 */\n      tag_307\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":12376:12377  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":12364:12373  _pageSize */\n      dup7\n        /* \"weusd/manageusd.sol\":12364:12377  _pageSize > 0 */\n      gt\n        /* \"weusd/manageusd.sol\":12351:12377  _page > 0 && _pageSize > 0 */\n    tag_307:\n        /* \"weusd/manageusd.sol\":12347:12632  if (_page > 0 && _pageSize > 0) {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"weusd/manageusd.sol\":12424:12441  _page * _pageSize */\n      tag_309\n        /* \"weusd/manageusd.sol\":12432:12441  _pageSize */\n      dup7\n        /* \"weusd/manageusd.sol\":12424:12429  _page */\n      dup9\n        /* \"weusd/manageusd.sol\":12424:12441  _page * _pageSize */\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"weusd/manageusd.sol\":12407:12442  totalRequests - (_page * _pageSize) */\n      tag_311\n      swap1\n        /* \"weusd/manageusd.sol\":12407:12420  totalRequests */\n      dup5\n        /* \"weusd/manageusd.sol\":12407:12442  totalRequests - (_page * _pageSize) */\n      tag_216\n      jump\t// in\n    tag_311:\n        /* \"weusd/manageusd.sol\":12394:12442  startIndex = totalRequests - (_page * _pageSize) */\n      swap2\n      pop\n        /* \"weusd/manageusd.sol\":12474:12487  totalRequests */\n      dup3\n        /* \"weusd/manageusd.sol\":12461:12471  startIndex */\n      dup3\n        /* \"weusd/manageusd.sol\":12461:12487  startIndex > totalRequests */\n      gt\n        /* \"weusd/manageusd.sol\":12457:12503  if (startIndex > totalRequests) startIndex = 0 */\n      iszero\n      tag_312\n      jumpi\n        /* \"weusd/manageusd.sol\":12502:12503  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":12489:12503  startIndex = 0 */\n      swap2\n      pop\n        /* \"weusd/manageusd.sol\":12457:12503  if (startIndex > totalRequests) startIndex = 0 */\n    tag_312:\n        /* \"weusd/manageusd.sol\":12529:12551  startIndex + _pageSize */\n      tag_313\n        /* \"weusd/manageusd.sol\":12542:12551  _pageSize */\n      dup7\n        /* \"weusd/manageusd.sol\":12529:12539  startIndex */\n      dup4\n        /* \"weusd/manageusd.sol\":12529:12551  startIndex + _pageSize */\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"weusd/manageusd.sol\":12518:12551  endIndex = startIndex + _pageSize */\n      swap1\n      pop\n        /* \"weusd/manageusd.sol\":12581:12594  totalRequests */\n      dup3\n        /* \"weusd/manageusd.sol\":12570:12578  endIndex */\n      dup2\n        /* \"weusd/manageusd.sol\":12570:12594  endIndex > totalRequests */\n      gt\n        /* \"weusd/manageusd.sol\":12566:12620  if (endIndex > totalRequests) endIndex = totalRequests */\n      iszero\n      tag_315\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":12607:12620  totalRequests */\n      dup2\n        /* \"weusd/manageusd.sol\":12566:12620  if (endIndex > totalRequests) endIndex = totalRequests */\n    tag_315:\n        /* \"weusd/manageusd.sol\":12644:12679  uint256[] memory userSourceRequests */\n      0x00\n        /* \"weusd/manageusd.sol\":12696:12717  endIndex - startIndex */\n      tag_316\n        /* \"weusd/manageusd.sol\":12707:12717  startIndex */\n      dup4\n        /* \"weusd/manageusd.sol\":12696:12704  endIndex */\n      dup4\n        /* \"weusd/manageusd.sol\":12696:12717  endIndex - startIndex */\n      tag_216\n      jump\t// in\n    tag_316:\n        /* \"weusd/manageusd.sol\":12682:12718  new uint256[](endIndex - startIndex) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_318\n      jumpi\n      tag_318\n      tag_319\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_320\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_320:\n      pop\n        /* \"weusd/manageusd.sol\":12776:12796  activeSourceRequests */\n      0x06\n        /* \"weusd/manageusd.sol\":12776:12803  activeSourceRequests.length */\n      sload\n        /* \"weusd/manageusd.sol\":12644:12718  uint256[] memory userSourceRequests = new uint256[](endIndex - startIndex) */\n      swap1\n      swap2\n      pop\n        /* \"weusd/manageusd.sol\":12729:12742  uint256 count */\n      0x00\n      swap1\n        /* \"weusd/manageusd.sol\":12759:13217  for (uint256 i = activeSourceRequests.length; i > 0 && count < userSourceRequests.length; i--) {... */\n    tag_321:\n        /* \"weusd/manageusd.sol\":12809:12810  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":12805:12806  i */\n      dup2\n        /* \"weusd/manageusd.sol\":12805:12810  i > 0 */\n      gt\n        /* \"weusd/manageusd.sol\":12805:12847  i > 0 && count < userSourceRequests.length */\n      dup1\n      iszero\n      tag_324\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":12822:12840  userSourceRequests */\n      dup3\n        /* \"weusd/manageusd.sol\":12822:12847  userSourceRequests.length */\n      mload\n        /* \"weusd/manageusd.sol\":12814:12819  count */\n      dup3\n        /* \"weusd/manageusd.sol\":12814:12847  count < userSourceRequests.length */\n      lt\n        /* \"weusd/manageusd.sol\":12805:12847  i > 0 && count < userSourceRequests.length */\n    tag_324:\n        /* \"weusd/manageusd.sol\":12759:13217  for (uint256 i = activeSourceRequests.length; i > 0 && count < userSourceRequests.length; i--) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"weusd/manageusd.sol\":12869:12886  uint256 requestId */\n      0x00\n        /* \"weusd/manageusd.sol\":12889:12909  activeSourceRequests */\n      0x06\n        /* \"weusd/manageusd.sol\":12910:12913  i-1 */\n      tag_325\n        /* \"weusd/manageusd.sol\":12912:12913  1 */\n      0x01\n        /* \"weusd/manageusd.sol\":12910:12911  i */\n      dup5\n        /* \"weusd/manageusd.sol\":12910:12913  i-1 */\n      tag_216\n      jump\t// in\n    tag_325:\n        /* \"weusd/manageusd.sol\":12889:12914  activeSourceRequests[i-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_327\n      jumpi\n      tag_327\n      tag_303\n      jump\t// in\n    tag_327:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"weusd/manageusd.sol\":12933:12952  requests[requestId] */\n      dup1\n      dup4\n      mstore\n        /* \"weusd/manageusd.sol\":12933:12941  requests */\n      0x0a\n        /* \"weusd/manageusd.sol\":12933:12952  requests[requestId] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"weusd/manageusd.sol\":12933:12957  requests[requestId].user */\n      0x01\n      add\n      sload\n        /* \"weusd/manageusd.sol\":12889:12914  activeSourceRequests[i-1] */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":12933:12966  requests[requestId].user == _user */\n      dup1\n      dup15\n      and\n        /* \"weusd/manageusd.sol\":12933:12957  requests[requestId].user */\n      swap2\n      and\n        /* \"weusd/manageusd.sol\":12933:12966  requests[requestId].user == _user */\n      sub\n        /* \"weusd/manageusd.sol\":12929:13206  if (requests[requestId].user == _user) {... */\n      tag_335\n      jumpi\n        /* \"weusd/manageusd.sol\":13015:13025  startIndex */\n      dup6\n        /* \"weusd/manageusd.sol\":12991:13012  totalRequests - count */\n      tag_330\n        /* \"weusd/manageusd.sol\":13007:13012  count */\n      dup5\n        /* \"weusd/manageusd.sol\":12991:13004  totalRequests */\n      dup10\n        /* \"weusd/manageusd.sol\":12991:13012  totalRequests - count */\n      tag_216\n      jump\t// in\n    tag_330:\n        /* \"weusd/manageusd.sol\":12991:13025  totalRequests - count > startIndex */\n      gt\n        /* \"weusd/manageusd.sol\":12987:13191  if (totalRequests - count > startIndex) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"weusd/manageusd.sol\":13078:13087  requestId */\n      dup1\n        /* \"weusd/manageusd.sol\":13050:13068  userSourceRequests */\n      dup5\n        /* \"weusd/manageusd.sol\":13069:13074  count */\n      dup5\n        /* \"weusd/manageusd.sol\":13050:13075  userSourceRequests[count] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_333\n      jumpi\n      tag_333\n      tag_303\n      jump\t// in\n    tag_333:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"weusd/manageusd.sol\":13050:13087  userSourceRequests[count] = requestId */\n      mstore\n        /* \"weusd/manageusd.sol\":13110:13117  count++ */\n      dup3\n      tag_334\n      dup2\n      tag_210\n      jump\t// in\n    tag_334:\n      swap4\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":12987:13191  if (totalRequests - count > startIndex) {... */\n      jump(tag_335)\n    tag_331:\n        /* \"weusd/manageusd.sol\":13166:13171  break */\n      pop\n      jump(tag_322)\n        /* \"weusd/manageusd.sol\":12987:13191  if (totalRequests - count > startIndex) {... */\n    tag_335:\n      pop\n        /* \"weusd/manageusd.sol\":12849:12852  i-- */\n      dup1\n      tag_336\n      dup2\n      tag_337\n      jump\t// in\n    tag_336:\n      swap2\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":12759:13217  for (uint256 i = activeSourceRequests.length; i > 0 && count < userSourceRequests.length; i--) {... */\n      jump(tag_321)\n    tag_322:\n      pop\n        /* \"weusd/manageusd.sol\":13237:13255  userSourceRequests */\n      swap1\n      swap6\n      pop\n        /* \"weusd/manageusd.sol\":13257:13270  totalRequests */\n      swap3\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":11784:13279  function getUserSourceRequests(address _user, uint256 _page, uint256 _pageSize) public view returns (uint256[] memory, uint256) {... */\n    tag_291:\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"weusd/manageusd.sol\":5163:5799  function mintWeUSD(address stablecoin, uint256 stablecoinAmount) external {... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":5256:5289  registeredStablecoins[stablecoin] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":5256:5277  registeredStablecoins */\n      0x08\n        /* \"weusd/manageusd.sol\":5256:5289  registeredStablecoins[stablecoin] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"weusd/manageusd.sol\":5248:5319  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11058:11060   */\n      0x20\n        /* \"weusd/manageusd.sol\":5248:5319  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11040:11061   */\n      mstore\n        /* \"#utility.yul\":11097:11099   */\n      0x19\n        /* \"#utility.yul\":11077:11095   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11070:11100   */\n      mstore\n      shl(0x3a, 0x14dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959)\n        /* \"#utility.yul\":11116:11134   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11109:11164   */\n      mstore\n        /* \"#utility.yul\":11181:11199   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":5248:5319  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      tag_201\n        /* \"#utility.yul\":10856:11205   */\n      jump\n        /* \"weusd/manageusd.sol\":5248:5319  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n    tag_339:\n        /* \"weusd/manageusd.sol\":5330:5354  uint8 stablecoinDecimals */\n      0x00\n        /* \"weusd/manageusd.sol\":5372:5382  stablecoin */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":5357:5392  IERC20Metadata(stablecoin).decimals */\n      and\n      0x313ce567\n        /* \"weusd/manageusd.sol\":5357:5394  IERC20Metadata(stablecoin).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_343\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_343:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_344\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"weusd/manageusd.sol\":5330:5394  uint8 stablecoinDecimals = IERC20Metadata(stablecoin).decimals() */\n      swap1\n      pop\n        /* \"weusd/manageusd.sol\":5405:5424  uint256 weUSDAmount */\n      0x00\n        /* \"weusd/manageusd.sol\":5427:5496  convertDecimals(stablecoinAmount, stablecoinDecimals, WEUSD_DECIMALS) */\n      tag_346\n        /* \"weusd/manageusd.sol\":5443:5459  stablecoinAmount */\n      dup4\n        /* \"weusd/manageusd.sol\":5461:5479  stablecoinDecimals */\n      dup4\n        /* \"weusd/manageusd.sol\":961:962  6 */\n      0x06\n        /* \"weusd/manageusd.sol\":5427:5442  convertDecimals */\n      tag_347\n        /* \"weusd/manageusd.sol\":5427:5496  convertDecimals(stablecoinAmount, stablecoinDecimals, WEUSD_DECIMALS) */\n      jump\t// in\n    tag_346:\n        /* \"weusd/manageusd.sol\":5600:5612  mainContract */\n      sload(0x01)\n        /* \"weusd/manageusd.sol\":5548:5632  IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":5580:5590  msg.sender */\n      caller\n        /* \"weusd/manageusd.sol\":5548:5632  IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7862:7913   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":5600:5612  mainContract */\n      0x0100\n      swap1\n      swap3\n      div\n      dup3\n      and\n        /* \"#utility.yul\":7929:7947   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7922:7982   */\n      mstore\n        /* \"#utility.yul\":7998:8016   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7991:8025   */\n      dup7\n      swap1\n      mstore\n        /* \"weusd/manageusd.sol\":5405:5496  uint256 weUSDAmount = convertDecimals(stablecoinAmount, stablecoinDecimals, WEUSD_DECIMALS) */\n      swap2\n      swap3\n      pop\n        /* \"weusd/manageusd.sol\":5548:5579  IERC20(stablecoin).transferFrom */\n      dup6\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7835:7853   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":5548:5632  IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_350\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_350:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_351\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_351:\n        /* \"weusd/manageusd.sol\":5540:5663  require(IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount), \"Stablecoin transfer failed\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11690:11692   */\n      0x20\n        /* \"weusd/manageusd.sol\":5540:5663  require(IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount), \"Stablecoin transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11672:11693   */\n      mstore\n        /* \"#utility.yul\":11729:11731   */\n      0x1a\n        /* \"#utility.yul\":11709:11727   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11702:11732   */\n      mstore\n        /* \"#utility.yul\":11768:11796   */\n      0x537461626c65636f696e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":11748:11766   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11741:11797   */\n      mstore\n        /* \"#utility.yul\":11814:11832   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":5540:5663  require(IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount), \"Stablecoin transfer failed\") */\n      tag_201\n        /* \"#utility.yul\":11488:11838   */\n      jump\n        /* \"weusd/manageusd.sol\":5540:5663  require(IERC20(stablecoin).transferFrom(msg.sender, address(mainContract), stablecoinAmount), \"Stablecoin transfer failed\") */\n    tag_352:\n        /* \"weusd/manageusd.sol\":5674:5679  weUSD */\n      sload(0x02)\n        /* \"weusd/manageusd.sol\":5674:5709  weUSD.mint(msg.sender, weUSDAmount) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":5685:5695  msg.sender */\n      caller\n        /* \"weusd/manageusd.sol\":5674:5709  weUSD.mint(msg.sender, weUSDAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8492:8543   */\n      mstore\n        /* \"#utility.yul\":8559:8577   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8552:8586   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":5674:5679  weUSD */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"weusd/manageusd.sol\":5674:5684  weUSD.mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":8465:8483   */\n      0x44\n      add\n        /* \"weusd/manageusd.sol\":5674:5709  weUSD.mint(msg.sender, weUSDAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_356\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_356:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_358\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_358:\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":5725:5791  MintedWeUSD(msg.sender, stablecoin, stablecoinAmount, weUSDAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12017:12042   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":12073:12075   */\n      0x20\n        /* \"#utility.yul\":12058:12076   */\n      dup2\n      add\n        /* \"#utility.yul\":12051:12085   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":5725:5791  MintedWeUSD(msg.sender, stablecoin, stablecoinAmount, weUSDAmount) */\n      dup9\n      and\n      swap4\n      pop\n        /* \"weusd/manageusd.sol\":5737:5747  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"weusd/manageusd.sol\":5725:5791  MintedWeUSD(msg.sender, stablecoin, stablecoinAmount, weUSDAmount) */\n      0x66c62f0863782653c5c44e10bf21d9def60984ce20d9f75549575a8910896587\n      swap2\n        /* \"#utility.yul\":11990:12008   */\n      add\n        /* \"weusd/manageusd.sol\":5725:5791  MintedWeUSD(msg.sender, stablecoin, stablecoinAmount, weUSDAmount) */\n    tag_359:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"weusd/manageusd.sol\":5237:5799  {... */\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":5163:5799  function mintWeUSD(address stablecoin, uint256 stablecoinAmount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"weusd/manageusd.sol\":13903:15398  function getUserTargetRequests(address _user, uint256 _page, uint256 _pageSize) public view returns (uint256[] memory, uint256) {... */\n    tag_152:\n        /* \"weusd/manageusd.sol\":14004:14020  uint256[] memory */\n      0x60\n        /* \"weusd/manageusd.sol\":14022:14029  uint256 */\n      0x00\n        /* \"weusd/manageusd.sol\":14050:14060  _page == 0 */\n      dup4\n      iszero\n      dup1\n        /* \"weusd/manageusd.sol\":14050:14078  _page == 0 || _pageSize == 0 */\n      tag_362\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":14064:14078  _pageSize == 0 */\n      dup3\n      iszero\n        /* \"weusd/manageusd.sol\":14050:14078  _page == 0 || _pageSize == 0 */\n    tag_362:\n        /* \"weusd/manageusd.sol\":14050:14110  _page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0) */\n      dup1\n      tag_364\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":14091:14092  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":14083:14088  _page */\n      dup5\n        /* \"weusd/manageusd.sol\":14083:14092  _page > 0 */\n      gt\n        /* \"weusd/manageusd.sol\":14083:14109  _page > 0 && _pageSize > 0 */\n      dup1\n      iszero\n      tag_364\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":14108:14109  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":14096:14105  _pageSize */\n      dup4\n        /* \"weusd/manageusd.sol\":14096:14109  _pageSize > 0 */\n      gt\n        /* \"weusd/manageusd.sol\":14083:14109  _page > 0 && _pageSize > 0 */\n    tag_364:\n        /* \"weusd/manageusd.sol\":14042:14140  require(_page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0), \"Invalid page or page size\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9996:9998   */\n      0x20\n        /* \"weusd/manageusd.sol\":14042:14140  require(_page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0), \"Invalid page or page size\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9978:9999   */\n      mstore\n        /* \"#utility.yul\":10035:10037   */\n      0x19\n        /* \"#utility.yul\":10015:10033   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10008:10038   */\n      mstore\n      shl(0x38, 0x496e76616c69642070616765206f7220706167652073697a65)\n        /* \"#utility.yul\":10054:10072   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10047:10102   */\n      mstore\n        /* \"#utility.yul\":10119:10137   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":14042:14140  require(_page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0), \"Invalid page or page size\") */\n      tag_201\n        /* \"#utility.yul\":9794:10143   */\n      jump\n        /* \"weusd/manageusd.sol\":14042:14140  require(_page == 0 || _pageSize == 0 || (_page > 0 && _pageSize > 0), \"Invalid page or page size\") */\n    tag_365:\n        /* \"weusd/manageusd.sol\":14153:14174  uint256 totalRequests */\n      0x00\n        /* \"weusd/manageusd.sol\":14194:14203  uint256 i */\n      dup1\n        /* \"weusd/manageusd.sol\":14189:14376  for (uint256 i = 0; i < activeTargetRequests.length; i++) {... */\n    tag_367:\n        /* \"weusd/manageusd.sol\":14213:14233  activeTargetRequests */\n      0x07\n        /* \"weusd/manageusd.sol\":14213:14240  activeTargetRequests.length */\n      sload\n        /* \"weusd/manageusd.sol\":14209:14240  i < activeTargetRequests.length */\n      dup2\n      lt\n        /* \"weusd/manageusd.sol\":14189:14376  for (uint256 i = 0; i < activeTargetRequests.length; i++) {... */\n      iszero\n      tag_368\n      jumpi\n        /* \"weusd/manageusd.sol\":14308:14313  _user */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":14266:14313  requests[activeTargetRequests[i]].user == _user */\n      and\n        /* \"weusd/manageusd.sol\":14266:14274  requests */\n      0x0a\n        /* \"weusd/manageusd.sol\":14266:14299  requests[activeTargetRequests[i]] */\n      0x00\n        /* \"weusd/manageusd.sol\":14275:14295  activeTargetRequests */\n      0x07\n        /* \"weusd/manageusd.sol\":14296:14297  i */\n      dup5\n        /* \"weusd/manageusd.sol\":14275:14298  activeTargetRequests[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_371\n      jumpi\n      tag_371\n      tag_303\n      jump\t// in\n    tag_371:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"weusd/manageusd.sol\":14266:14299  requests[activeTargetRequests[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"weusd/manageusd.sol\":14266:14304  requests[activeTargetRequests[i]].user */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"weusd/manageusd.sol\":14266:14313  requests[activeTargetRequests[i]].user == _user */\n      sub\n        /* \"weusd/manageusd.sol\":14262:14365  if (requests[activeTargetRequests[i]].user == _user) {... */\n      tag_373\n      jumpi\n        /* \"weusd/manageusd.sol\":14334:14349  totalRequests++ */\n      dup2\n      tag_374\n      dup2\n      tag_210\n      jump\t// in\n    tag_374:\n      swap3\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":14262:14365  if (requests[activeTargetRequests[i]].user == _user) {... */\n    tag_373:\n        /* \"weusd/manageusd.sol\":14242:14245  i++ */\n      0x01\n      add\n        /* \"weusd/manageusd.sol\":14189:14376  for (uint256 i = 0; i < activeTargetRequests.length; i++) {... */\n      jump(tag_367)\n    tag_368:\n      pop\n        /* \"weusd/manageusd.sol\":14388:14406  uint256 startIndex */\n      0x00\n        /* \"weusd/manageusd.sol\":14440:14453  totalRequests */\n      dup2\n        /* \"weusd/manageusd.sol\":14470:14479  _page > 0 */\n      dup7\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"weusd/manageusd.sol\":14470:14496  _page > 0 && _pageSize > 0 */\n      tag_375\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":14495:14496  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":14483:14492  _pageSize */\n      dup7\n        /* \"weusd/manageusd.sol\":14483:14496  _pageSize > 0 */\n      gt\n        /* \"weusd/manageusd.sol\":14470:14496  _page > 0 && _pageSize > 0 */\n    tag_375:\n        /* \"weusd/manageusd.sol\":14466:14751  if (_page > 0 && _pageSize > 0) {... */\n      iszero\n      tag_381\n      jumpi\n        /* \"weusd/manageusd.sol\":14543:14560  _page * _pageSize */\n      tag_377\n        /* \"weusd/manageusd.sol\":14551:14560  _pageSize */\n      dup7\n        /* \"weusd/manageusd.sol\":14543:14548  _page */\n      dup9\n        /* \"weusd/manageusd.sol\":14543:14560  _page * _pageSize */\n      tag_310\n      jump\t// in\n    tag_377:\n        /* \"weusd/manageusd.sol\":14526:14561  totalRequests - (_page * _pageSize) */\n      tag_378\n      swap1\n        /* \"weusd/manageusd.sol\":14526:14539  totalRequests */\n      dup5\n        /* \"weusd/manageusd.sol\":14526:14561  totalRequests - (_page * _pageSize) */\n      tag_216\n      jump\t// in\n    tag_378:\n        /* \"weusd/manageusd.sol\":14513:14561  startIndex = totalRequests - (_page * _pageSize) */\n      swap2\n      pop\n        /* \"weusd/manageusd.sol\":14593:14606  totalRequests */\n      dup3\n        /* \"weusd/manageusd.sol\":14580:14590  startIndex */\n      dup3\n        /* \"weusd/manageusd.sol\":14580:14606  startIndex > totalRequests */\n      gt\n        /* \"weusd/manageusd.sol\":14576:14622  if (startIndex > totalRequests) startIndex = 0 */\n      iszero\n      tag_379\n      jumpi\n        /* \"weusd/manageusd.sol\":14621:14622  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":14608:14622  startIndex = 0 */\n      swap2\n      pop\n        /* \"weusd/manageusd.sol\":14576:14622  if (startIndex > totalRequests) startIndex = 0 */\n    tag_379:\n        /* \"weusd/manageusd.sol\":14648:14670  startIndex + _pageSize */\n      tag_380\n        /* \"weusd/manageusd.sol\":14661:14670  _pageSize */\n      dup7\n        /* \"weusd/manageusd.sol\":14648:14658  startIndex */\n      dup4\n        /* \"weusd/manageusd.sol\":14648:14670  startIndex + _pageSize */\n      tag_314\n      jump\t// in\n    tag_380:\n        /* \"weusd/manageusd.sol\":14637:14670  endIndex = startIndex + _pageSize */\n      swap1\n      pop\n        /* \"weusd/manageusd.sol\":14700:14713  totalRequests */\n      dup3\n        /* \"weusd/manageusd.sol\":14689:14697  endIndex */\n      dup2\n        /* \"weusd/manageusd.sol\":14689:14713  endIndex > totalRequests */\n      gt\n        /* \"weusd/manageusd.sol\":14685:14739  if (endIndex > totalRequests) endIndex = totalRequests */\n      iszero\n      tag_381\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":14726:14739  totalRequests */\n      dup2\n        /* \"weusd/manageusd.sol\":14685:14739  if (endIndex > totalRequests) endIndex = totalRequests */\n    tag_381:\n        /* \"weusd/manageusd.sol\":14763:14798  uint256[] memory userTargetRequests */\n      0x00\n        /* \"weusd/manageusd.sol\":14815:14836  endIndex - startIndex */\n      tag_382\n        /* \"weusd/manageusd.sol\":14826:14836  startIndex */\n      dup4\n        /* \"weusd/manageusd.sol\":14815:14823  endIndex */\n      dup4\n        /* \"weusd/manageusd.sol\":14815:14836  endIndex - startIndex */\n      tag_216\n      jump\t// in\n    tag_382:\n        /* \"weusd/manageusd.sol\":14801:14837  new uint256[](endIndex - startIndex) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_384\n      jumpi\n      tag_384\n      tag_319\n      jump\t// in\n    tag_384:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_385\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_385:\n      pop\n        /* \"weusd/manageusd.sol\":14895:14915  activeTargetRequests */\n      0x07\n        /* \"weusd/manageusd.sol\":14895:14922  activeTargetRequests.length */\n      sload\n        /* \"weusd/manageusd.sol\":14763:14837  uint256[] memory userTargetRequests = new uint256[](endIndex - startIndex) */\n      swap1\n      swap2\n      pop\n        /* \"weusd/manageusd.sol\":14848:14861  uint256 count */\n      0x00\n      swap1\n        /* \"weusd/manageusd.sol\":14878:15336  for (uint256 i = activeTargetRequests.length; i > 0 && count < userTargetRequests.length; i--) {... */\n    tag_386:\n        /* \"weusd/manageusd.sol\":14928:14929  0 */\n      0x00\n        /* \"weusd/manageusd.sol\":14924:14925  i */\n      dup2\n        /* \"weusd/manageusd.sol\":14924:14929  i > 0 */\n      gt\n        /* \"weusd/manageusd.sol\":14924:14966  i > 0 && count < userTargetRequests.length */\n      dup1\n      iszero\n      tag_389\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":14941:14959  userTargetRequests */\n      dup3\n        /* \"weusd/manageusd.sol\":14941:14966  userTargetRequests.length */\n      mload\n        /* \"weusd/manageusd.sol\":14933:14938  count */\n      dup3\n        /* \"weusd/manageusd.sol\":14933:14966  count < userTargetRequests.length */\n      lt\n        /* \"weusd/manageusd.sol\":14924:14966  i > 0 && count < userTargetRequests.length */\n    tag_389:\n        /* \"weusd/manageusd.sol\":14878:15336  for (uint256 i = activeTargetRequests.length; i > 0 && count < userTargetRequests.length; i--) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"weusd/manageusd.sol\":14988:15005  uint256 requestId */\n      0x00\n        /* \"weusd/manageusd.sol\":15008:15028  activeTargetRequests */\n      0x07\n        /* \"weusd/manageusd.sol\":15029:15032  i-1 */\n      tag_390\n        /* \"weusd/manageusd.sol\":15031:15032  1 */\n      0x01\n        /* \"weusd/manageusd.sol\":15029:15030  i */\n      dup5\n        /* \"weusd/manageusd.sol\":15029:15032  i-1 */\n      tag_216\n      jump\t// in\n    tag_390:\n        /* \"weusd/manageusd.sol\":15008:15033  activeTargetRequests[i-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_392\n      jumpi\n      tag_392\n      tag_303\n      jump\t// in\n    tag_392:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"weusd/manageusd.sol\":15052:15071  requests[requestId] */\n      dup1\n      dup4\n      mstore\n        /* \"weusd/manageusd.sol\":15052:15060  requests */\n      0x0a\n        /* \"weusd/manageusd.sol\":15052:15071  requests[requestId] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"weusd/manageusd.sol\":15052:15076  requests[requestId].user */\n      0x01\n      add\n      sload\n        /* \"weusd/manageusd.sol\":15008:15033  activeTargetRequests[i-1] */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":15052:15085  requests[requestId].user == _user */\n      dup1\n      dup15\n      and\n        /* \"weusd/manageusd.sol\":15052:15076  requests[requestId].user */\n      swap2\n      and\n        /* \"weusd/manageusd.sol\":15052:15085  requests[requestId].user == _user */\n      sub\n        /* \"weusd/manageusd.sol\":15048:15325  if (requests[requestId].user == _user) {... */\n      tag_400\n      jumpi\n        /* \"weusd/manageusd.sol\":15134:15144  startIndex */\n      dup6\n        /* \"weusd/manageusd.sol\":15110:15131  totalRequests - count */\n      tag_395\n        /* \"weusd/manageusd.sol\":15126:15131  count */\n      dup5\n        /* \"weusd/manageusd.sol\":15110:15123  totalRequests */\n      dup10\n        /* \"weusd/manageusd.sol\":15110:15131  totalRequests - count */\n      tag_216\n      jump\t// in\n    tag_395:\n        /* \"weusd/manageusd.sol\":15110:15144  totalRequests - count > startIndex */\n      gt\n        /* \"weusd/manageusd.sol\":15106:15310  if (totalRequests - count > startIndex) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"weusd/manageusd.sol\":15197:15206  requestId */\n      dup1\n        /* \"weusd/manageusd.sol\":15169:15187  userTargetRequests */\n      dup5\n        /* \"weusd/manageusd.sol\":15188:15193  count */\n      dup5\n        /* \"weusd/manageusd.sol\":15169:15194  userTargetRequests[count] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_398\n      jumpi\n      tag_398\n      tag_303\n      jump\t// in\n    tag_398:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"weusd/manageusd.sol\":15169:15206  userTargetRequests[count] = requestId */\n      mstore\n        /* \"weusd/manageusd.sol\":15229:15236  count++ */\n      dup3\n      tag_399\n      dup2\n      tag_210\n      jump\t// in\n    tag_399:\n      swap4\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":15106:15310  if (totalRequests - count > startIndex) {... */\n    tag_400:\n      pop\n        /* \"weusd/manageusd.sol\":14968:14971  i-- */\n      dup1\n      tag_401\n      dup2\n      tag_337\n      jump\t// in\n    tag_401:\n      swap2\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":14878:15336  for (uint256 i = activeTargetRequests.length; i > 0 && count < userTargetRequests.length; i--) {... */\n      jump(tag_386)\n        /* \"weusd/manageusd.sol\":3086:3187  function setGasfee(uint256 _gasfee) external onlyRole(ADMIN_ROLE) {... */\n    tag_160:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_403\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_403:\n      pop\n        /* \"weusd/manageusd.sol\":3163:3169  gasfee */\n      0x04\n        /* \"weusd/manageusd.sol\":3163:3179  gasfee = _gasfee */\n      sstore\n        /* \"weusd/manageusd.sol\":3086:3187  function setGasfee(uint256 _gasfee) external onlyRole(ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"weusd/manageusd.sol\":3954:4139  function registerStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n    tag_163:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_406\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_406:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":4043:4076  registeredStablecoins[stablecoin] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":4043:4064  registeredStablecoins */\n      0x08\n        /* \"weusd/manageusd.sol\":4043:4076  registeredStablecoins[stablecoin] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"weusd/manageusd.sol\":4043:4083  registeredStablecoins[stablecoin] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"weusd/manageusd.sol\":4079:4083  true */\n      0x01\n        /* \"weusd/manageusd.sol\":4043:4083  registeredStablecoins[stablecoin] = true */\n      or\n      swap1\n      sstore\n        /* \"weusd/manageusd.sol\":4099:4131  StablecoinRegistered(stablecoin) */\n      mload\n      0xd8b2dc62b787ec8afbc8a664cf2fd7c1e7851721acc9e0069132cece3c529c2e\n      swap2\n        /* \"weusd/manageusd.sol\":4043:4076  registeredStablecoins[stablecoin] */\n      swap1\n        /* \"weusd/manageusd.sol\":4099:4131  StablecoinRegistered(stablecoin) */\n      log2\n        /* \"weusd/manageusd.sol\":3954:4139  function registerStablecoin(address stablecoin) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"weusd/manageusd.sol\":6314:6905  function burnWeUSD(address stablecoin, uint256 weUSDAmount) external {... */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":6402:6435  registeredStablecoins[stablecoin] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":6402:6423  registeredStablecoins */\n      0x08\n        /* \"weusd/manageusd.sol\":6402:6435  registeredStablecoins[stablecoin] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"weusd/manageusd.sol\":6394:6465  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      tag_409\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11058:11060   */\n      0x20\n        /* \"weusd/manageusd.sol\":6394:6465  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11040:11061   */\n      mstore\n        /* \"#utility.yul\":11097:11099   */\n      0x19\n        /* \"#utility.yul\":11077:11095   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11070:11100   */\n      mstore\n      shl(0x3a, 0x14dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959)\n        /* \"#utility.yul\":11116:11134   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11109:11164   */\n      mstore\n        /* \"#utility.yul\":11181:11199   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":6394:6465  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n      tag_201\n        /* \"#utility.yul\":10856:11205   */\n      jump\n        /* \"weusd/manageusd.sol\":6394:6465  require(registeredStablecoins[stablecoin], \"Stablecoin not registered\") */\n    tag_409:\n        /* \"weusd/manageusd.sol\":6476:6500  uint8 stablecoinDecimals */\n      0x00\n        /* \"weusd/manageusd.sol\":6518:6528  stablecoin */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":6503:6538  IERC20Metadata(stablecoin).decimals */\n      and\n      0x313ce567\n        /* \"weusd/manageusd.sol\":6503:6540  IERC20Metadata(stablecoin).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_412\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_412:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_413\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n    tag_413:\n        /* \"weusd/manageusd.sol\":6476:6540  uint8 stablecoinDecimals = IERC20Metadata(stablecoin).decimals() */\n      swap1\n      pop\n        /* \"weusd/manageusd.sol\":6551:6575  uint256 stablecoinAmount */\n      0x00\n        /* \"weusd/manageusd.sol\":6578:6646  convertDecimalsCeil(weUSDAmount, WEUSD_DECIMALS, stablecoinDecimals) */\n      tag_414\n        /* \"weusd/manageusd.sol\":6598:6609  weUSDAmount */\n      dup4\n        /* \"weusd/manageusd.sol\":961:962  6 */\n      0x06\n        /* \"weusd/manageusd.sol\":6627:6645  stablecoinDecimals */\n      dup5\n        /* \"weusd/manageusd.sol\":6578:6597  convertDecimalsCeil */\n      tag_415\n        /* \"weusd/manageusd.sol\":6578:6646  convertDecimalsCeil(weUSDAmount, WEUSD_DECIMALS, stablecoinDecimals) */\n      jump\t// in\n    tag_414:\n        /* \"weusd/manageusd.sol\":6692:6704  mainContract */\n      sload(0x01)\n        /* \"weusd/manageusd.sol\":6692:6765  mainContract.transferStableCoin(stablecoin, msg.sender, stablecoinAmount) */\n      mload(0x40)\n      shl(0xe2, 0x1795588d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7880:7912   */\n      dup8\n      dup2\n      and\n        /* \"weusd/manageusd.sol\":6692:6765  mainContract.transferStableCoin(stablecoin, msg.sender, stablecoinAmount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7862:7913   */\n      mstore\n        /* \"weusd/manageusd.sol\":6736:6746  msg.sender */\n      caller\n        /* \"#utility.yul\":7929:7947   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7922:7982   */\n      mstore\n        /* \"#utility.yul\":7998:8016   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7991:8025   */\n      dup5\n      swap1\n      mstore\n        /* \"weusd/manageusd.sol\":6551:6646  uint256 stablecoinAmount = convertDecimalsCeil(weUSDAmount, WEUSD_DECIMALS, stablecoinDecimals) */\n      swap3\n      swap4\n      pop\n        /* \"weusd/manageusd.sol\":6692:6704  mainContract */\n      0x0100\n      swap1\n      swap2\n      div\n      swap1\n      swap2\n      and\n      swap1\n        /* \"weusd/manageusd.sol\":6692:6723  mainContract.transferStableCoin */\n      0x5e556234\n      swap1\n        /* \"#utility.yul\":7835:7853   */\n      0x64\n      add\n        /* \"weusd/manageusd.sol\":6692:6765  mainContract.transferStableCoin(stablecoin, msg.sender, stablecoinAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_417\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_417:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_419\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_419:\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":6776:6781  weUSD */\n      sload(0x02)\n        /* \"weusd/manageusd.sol\":6776:6815  weUSD.burnFrom(msg.sender, weUSDAmount) */\n      mload(0x40)\n      shl(0xe4, 0x079cc679)\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":6791:6801  msg.sender */\n      caller\n        /* \"weusd/manageusd.sol\":6776:6815  weUSD.burnFrom(msg.sender, weUSDAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8492:8543   */\n      mstore\n        /* \"#utility.yul\":8559:8577   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8552:8586   */\n      dup8\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":6776:6781  weUSD */\n      swap1\n      swap2\n      and\n      swap3\n      pop\n        /* \"weusd/manageusd.sol\":6776:6790  weUSD.burnFrom */\n      0x79cc6790\n      swap2\n      pop\n        /* \"#utility.yul\":8465:8483   */\n      0x44\n      add\n        /* \"weusd/manageusd.sol\":6776:6815  weUSD.burnFrom(msg.sender, weUSDAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_421\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_421:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_423\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_423:\n      pop\n      pop\n        /* \"weusd/manageusd.sol\":6831:6897  BurnedWeUSD(msg.sender, stablecoin, weUSDAmount, stablecoinAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12017:12042   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":12073:12075   */\n      0x20\n        /* \"#utility.yul\":12058:12076   */\n      dup2\n      add\n        /* \"#utility.yul\":12051:12085   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"weusd/manageusd.sol\":6831:6897  BurnedWeUSD(msg.sender, stablecoin, weUSDAmount, stablecoinAmount) */\n      dup9\n      and\n      swap4\n      pop\n        /* \"weusd/manageusd.sol\":6843:6853  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"weusd/manageusd.sol\":6831:6897  BurnedWeUSD(msg.sender, stablecoin, weUSDAmount, stablecoinAmount) */\n      0x3d9842cbdfa603ab9534d6e362bf28b3061318f57fed5e7087dfc956a9d74442\n      swap2\n        /* \"#utility.yul\":11990:12008   */\n      add\n        /* \"weusd/manageusd.sol\":6831:6897  BurnedWeUSD(msg.sender, stablecoin, weUSDAmount, stablecoinAmount) */\n      tag_359\n        /* \"#utility.yul\":11843:12091   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_427\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_427:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_276\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"weusd/manageusd.sol\":3497:3622  function setFeeRecipient(address _feeRecipient) external onlyRole(ADMIN_ROLE) {... */\n    tag_183:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_431\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_431:\n      pop\n        /* \"weusd/manageusd.sol\":3586:3598  feeRecipient */\n      0x05\n        /* \"weusd/manageusd.sol\":3586:3614  feeRecipient = _feeRecipient */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"weusd/manageusd.sol\":3497:3622  function setFeeRecipient(address _feeRecipient) external onlyRole(ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_437\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_437:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"weusd/manageusd.sol\":15666:16401  function _createRequest(uint256 _requestId, address _user, uint256 _amount, bool _isburn) internal {... */\n    tag_229:\n        /* \"weusd/manageusd.sol\":15813:15959  RequestData({... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      dup6\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      dup3\n      mstore\n      dup4\n      dup6\n      add\n      dup8\n      dup2\n      mstore\n      dup7\n      iszero\n      dup1\n      iszero\n      0x60\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n      0x00\n        /* \"weusd/manageusd.sol\":15980:16000  requests[_requestId] */\n      dup13\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":15980:15988  requests */\n      0x0a\n        /* \"weusd/manageusd.sol\":15980:16000  requests[_requestId] */\n      swap1\n      swap5\n      mstore\n      swap7\n      swap1\n      swap3\n      keccak256\n        /* \"weusd/manageusd.sol\":15980:16013  requests[_requestId] = newRequest */\n      dup6\n      mload\n      dup2\n      sstore\n      swap3\n      mload\n      0x01\n      dup5\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      swap1\n      swap6\n      and\n      or\n      swap1\n      swap4\n      sstore\n      swap2\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      swap3\n      mload\n      0x03\n      swap1\n      swap4\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap4\n      iszero\n      iszero\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"weusd/manageusd.sol\":15813:15959  RequestData({... */\n      swap1\n        /* \"weusd/manageusd.sol\":16024:16167  if(_isburn){... */\n      tag_439\n      jumpi\n        /* \"weusd/manageusd.sol\":16050:16070  activeSourceRequests */\n      0x06\n        /* \"weusd/manageusd.sol\":16050:16087  activeSourceRequests.push(_requestId) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      add\n      dup6\n      swap1\n      sstore\n        /* \"weusd/manageusd.sol\":16024:16167  if(_isburn){... */\n      jump(tag_441)\n    tag_439:\n        /* \"weusd/manageusd.sol\":16118:16138  activeTargetRequests */\n      0x07\n        /* \"weusd/manageusd.sol\":16118:16155  activeTargetRequests.push(_requestId) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      dup6\n      swap1\n      sstore\n        /* \"weusd/manageusd.sol\":16024:16167  if(_isburn){... */\n    tag_441:\n        /* \"weusd/manageusd.sol\":16180:16187  _isburn */\n      dup2\n        /* \"weusd/manageusd.sol\":16177:16394  if(_isburn){... */\n      iszero\n      tag_443\n      jumpi\n        /* \"weusd/manageusd.sol\":16246:16266  activeSourceRequests */\n      0x06\n        /* \"weusd/manageusd.sol\":16246:16273  activeSourceRequests.length */\n      sload\n        /* \"weusd/manageusd.sol\":16246:16277  activeSourceRequests.length - 1 */\n      tag_444\n      swap1\n        /* \"weusd/manageusd.sol\":16276:16277  1 */\n      0x01\n      swap1\n        /* \"weusd/manageusd.sol\":16246:16277  activeSourceRequests.length - 1 */\n      tag_216\n      jump\t// in\n    tag_444:\n        /* \"weusd/manageusd.sol\":16203:16243  requestIdToSourceActiveIndex[_requestId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":16203:16231  requestIdToSourceActiveIndex */\n      0x0b\n        /* \"weusd/manageusd.sol\":16203:16243  requestIdToSourceActiveIndex[_requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"weusd/manageusd.sol\":16203:16277  requestIdToSourceActiveIndex[_requestId] = activeSourceRequests.length - 1 */\n      sstore\n        /* \"weusd/manageusd.sol\":16177:16394  if(_isburn){... */\n      jump(tag_445)\n    tag_443:\n        /* \"weusd/manageusd.sol\":16351:16371  activeTargetRequests */\n      0x07\n        /* \"weusd/manageusd.sol\":16351:16378  activeTargetRequests.length */\n      sload\n        /* \"weusd/manageusd.sol\":16351:16382  activeTargetRequests.length - 1 */\n      tag_446\n      swap1\n        /* \"weusd/manageusd.sol\":16381:16382  1 */\n      0x01\n      swap1\n        /* \"weusd/manageusd.sol\":16351:16382  activeTargetRequests.length - 1 */\n      tag_216\n      jump\t// in\n    tag_446:\n        /* \"weusd/manageusd.sol\":16308:16348  requestIdToTargetActiveIndex[_requestId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"weusd/manageusd.sol\":16308:16336  requestIdToTargetActiveIndex */\n      0x0c\n        /* \"weusd/manageusd.sol\":16308:16348  requestIdToTargetActiveIndex[_requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"weusd/manageusd.sol\":16308:16382  requestIdToTargetActiveIndex[_requestId] = activeTargetRequests.length - 1 */\n      sstore\n        /* \"weusd/manageusd.sol\":16177:16394  if(_isburn){... */\n    tag_445:\n        /* \"weusd/manageusd.sol\":15765:16401  {... */\n      pop\n        /* \"weusd/manageusd.sol\":15666:16401  function _createRequest(uint256 _requestId, address _user, uint256 _amount, bool _isburn) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_280\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_450\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_452\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_127\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_452:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_453\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_454\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_454:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_194)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_453:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_194)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_458\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_127\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_458:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_453\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      jump(tag_194)\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_463\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_464\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_463:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n    tag_466:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3611:3643   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3593:3644   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3581:3583   */\n      0x20\n        /* \"#utility.yul\":3566:3584   */\n      add\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_469\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_198\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_466\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"weusd/manageusd.sol\":16411:16880  function convertDecimals(... */\n    tag_347:\n        /* \"weusd/manageusd.sol\":16552:16566  uint256 result */\n      0x00\n        /* \"weusd/manageusd.sol\":16601:16615  targetDecimals */\n      dup2\n        /* \"weusd/manageusd.sol\":16583:16615  sourceDecimals == targetDecimals */\n      0xff\n      and\n        /* \"weusd/manageusd.sol\":16583:16597  sourceDecimals */\n      dup4\n        /* \"weusd/manageusd.sol\":16583:16615  sourceDecimals == targetDecimals */\n      0xff\n      and\n      sub\n        /* \"weusd/manageusd.sol\":16579:16873  if (sourceDecimals == targetDecimals) {... */\n      tag_474\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":16641:16646  value */\n      dup3\n        /* \"weusd/manageusd.sol\":16579:16873  if (sourceDecimals == targetDecimals) {... */\n      jump(tag_482)\n    tag_474:\n        /* \"weusd/manageusd.sol\":16685:16699  targetDecimals */\n      dup2\n        /* \"weusd/manageusd.sol\":16668:16699  sourceDecimals < targetDecimals */\n      0xff\n      and\n        /* \"weusd/manageusd.sol\":16668:16682  sourceDecimals */\n      dup4\n        /* \"weusd/manageusd.sol\":16668:16699  sourceDecimals < targetDecimals */\n      0xff\n      and\n      lt\n        /* \"weusd/manageusd.sol\":16664:16873  if (sourceDecimals < targetDecimals) {... */\n      iszero\n      tag_476\n      jumpi\n        /* \"weusd/manageusd.sol\":16739:16770  targetDecimals - sourceDecimals */\n      tag_477\n        /* \"weusd/manageusd.sol\":16756:16770  sourceDecimals */\n      dup4\n        /* \"weusd/manageusd.sol\":16739:16753  targetDecimals */\n      dup4\n        /* \"weusd/manageusd.sol\":16739:16770  targetDecimals - sourceDecimals */\n      tag_478\n      jump\t// in\n    tag_477:\n        /* \"weusd/manageusd.sol\":16734:16771  10**(targetDecimals - sourceDecimals) */\n      tag_479\n      swap1\n        /* \"weusd/manageusd.sol\":16734:16736  10 */\n      0x0a\n        /* \"weusd/manageusd.sol\":16734:16771  10**(targetDecimals - sourceDecimals) */\n      tag_480\n      jump\t// in\n    tag_479:\n        /* \"weusd/manageusd.sol\":16725:16772  value * (10**(targetDecimals - sourceDecimals)) */\n      tag_481\n      swap1\n        /* \"weusd/manageusd.sol\":16725:16730  value */\n      dup6\n        /* \"weusd/manageusd.sol\":16725:16772  value * (10**(targetDecimals - sourceDecimals)) */\n      tag_310\n      jump\t// in\n    tag_481:\n        /* \"weusd/manageusd.sol\":16716:16772  result = value * (10**(targetDecimals - sourceDecimals)) */\n      swap1\n      pop\n        /* \"weusd/manageusd.sol\":16664:16873  if (sourceDecimals < targetDecimals) {... */\n      jump(tag_482)\n    tag_476:\n        /* \"weusd/manageusd.sol\":16828:16859  sourceDecimals - targetDecimals */\n      tag_483\n        /* \"weusd/manageusd.sol\":16845:16859  targetDecimals */\n      dup3\n        /* \"weusd/manageusd.sol\":16828:16842  sourceDecimals */\n      dup5\n        /* \"weusd/manageusd.sol\":16828:16859  sourceDecimals - targetDecimals */\n      tag_478\n      jump\t// in\n    tag_483:\n        /* \"weusd/manageusd.sol\":16823:16860  10**(sourceDecimals - targetDecimals) */\n      tag_484\n      swap1\n        /* \"weusd/manageusd.sol\":16823:16825  10 */\n      0x0a\n        /* \"weusd/manageusd.sol\":16823:16860  10**(sourceDecimals - targetDecimals) */\n      tag_480\n      jump\t// in\n    tag_484:\n        /* \"weusd/manageusd.sol\":16814:16861  value / (10**(sourceDecimals - targetDecimals)) */\n      tag_485\n      swap1\n        /* \"weusd/manageusd.sol\":16814:16819  value */\n      dup6\n        /* \"weusd/manageusd.sol\":16814:16861  value / (10**(sourceDecimals - targetDecimals)) */\n      tag_486\n      jump\t// in\n    tag_485:\n        /* \"weusd/manageusd.sol\":16805:16861  result = value / (10**(sourceDecimals - targetDecimals)) */\n      swap1\n      pop\n        /* \"weusd/manageusd.sol\":16664:16873  if (sourceDecimals < targetDecimals) {... */\n    tag_482:\n        /* \"weusd/manageusd.sol\":16411:16880  function convertDecimals(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"weusd/manageusd.sol\":16888:17476  function convertDecimalsCeil(... */\n    tag_415:\n        /* \"weusd/manageusd.sol\":17033:17047  uint256 result */\n      0x00\n        /* \"weusd/manageusd.sol\":17082:17096  targetDecimals */\n      dup2\n        /* \"weusd/manageusd.sol\":17064:17096  sourceDecimals == targetDecimals */\n      0xff\n      and\n        /* \"weusd/manageusd.sol\":17064:17078  sourceDecimals */\n      dup4\n        /* \"weusd/manageusd.sol\":17064:17096  sourceDecimals == targetDecimals */\n      0xff\n      and\n      sub\n        /* \"weusd/manageusd.sol\":17060:17469  if (sourceDecimals == targetDecimals) {... */\n      tag_488\n      jumpi\n      pop\n        /* \"weusd/manageusd.sol\":17122:17127  value */\n      dup3\n        /* \"weusd/manageusd.sol\":17060:17469  if (sourceDecimals == targetDecimals) {... */\n      jump(tag_482)\n    tag_488:\n        /* \"weusd/manageusd.sol\":17166:17180  targetDecimals */\n      dup2\n        /* \"weusd/manageusd.sol\":17149:17180  sourceDecimals < targetDecimals */\n      0xff\n      and\n        /* \"weusd/manageusd.sol\":17149:17163  sourceDecimals */\n      dup4\n        /* \"weusd/manageusd.sol\":17149:17180  sourceDecimals < targetDecimals */\n      0xff\n      and\n      lt\n        /* \"weusd/manageusd.sol\":17145:17469  if (sourceDecimals < targetDecimals) {... */\n      iszero\n      tag_490\n      jumpi\n        /* \"weusd/manageusd.sol\":17220:17251  targetDecimals - sourceDecimals */\n      tag_477\n        /* \"weusd/manageusd.sol\":17237:17251  sourceDecimals */\n      dup4\n        /* \"weusd/manageusd.sol\":17220:17234  targetDecimals */\n      dup4\n        /* \"weusd/manageusd.sol\":17220:17251  targetDecimals - sourceDecimals */\n      tag_478\n      jump\t// in\n        /* \"weusd/manageusd.sol\":17145:17469  if (sourceDecimals < targetDecimals) {... */\n    tag_490:\n        /* \"weusd/manageusd.sol\":17286:17298  uint256 temp */\n      0x00\n        /* \"weusd/manageusd.sol\":17306:17337  sourceDecimals - targetDecimals */\n      tag_495\n        /* \"weusd/manageusd.sol\":17323:17337  targetDecimals */\n      dup4\n        /* \"weusd/manageusd.sol\":17306:17320  sourceDecimals */\n      dup6\n        /* \"weusd/manageusd.sol\":17306:17337  sourceDecimals - targetDecimals */\n      tag_478\n      jump\t// in\n    tag_495:\n        /* \"weusd/manageusd.sol\":17301:17338  10**(sourceDecimals - targetDecimals) */\n      tag_496\n      swap1\n        /* \"weusd/manageusd.sol\":17301:17303  10 */\n      0x0a\n        /* \"weusd/manageusd.sol\":17301:17338  10**(sourceDecimals - targetDecimals) */\n      tag_480\n      jump\t// in\n    tag_496:\n        /* \"weusd/manageusd.sol\":17286:17338  uint256 temp = 10**(sourceDecimals - targetDecimals) */\n      swap1\n      pop\n        /* \"weusd/manageusd.sol\":17362:17374  value / temp */\n      tag_497\n        /* \"weusd/manageusd.sol\":17286:17338  uint256 temp = 10**(sourceDecimals - targetDecimals) */\n      dup2\n        /* \"weusd/manageusd.sol\":17362:17367  value */\n      dup7\n        /* \"weusd/manageusd.sol\":17362:17374  value / temp */\n      tag_486\n      jump\t// in\n    tag_497:\n        /* \"weusd/manageusd.sol\":17353:17374  result = value / temp */\n      swap2\n      pop\n        /* \"weusd/manageusd.sol\":17393:17405  value % temp */\n      tag_498\n        /* \"weusd/manageusd.sol\":17401:17405  temp */\n      dup2\n        /* \"weusd/manageusd.sol\":17393:17398  value */\n      dup7\n        /* \"weusd/manageusd.sol\":17393:17405  value % temp */\n      tag_499\n      jump\t// in\n    tag_498:\n        /* \"weusd/manageusd.sol\":17393:17410  value % temp != 0 */\n      iszero\n        /* \"weusd/manageusd.sol\":17389:17458  if (value % temp != 0) {... */\n      tag_500\n      jumpi\n        /* \"weusd/manageusd.sol\":17431:17442  result += 1 */\n      tag_501\n        /* \"weusd/manageusd.sol\":17441:17442  1 */\n      0x01\n        /* \"weusd/manageusd.sol\":17431:17442  result += 1 */\n      dup4\n      tag_314\n      jump\t// in\n    tag_501:\n      swap2\n      pop\n        /* \"weusd/manageusd.sol\":17389:17458  if (value % temp != 0) {... */\n    tag_500:\n        /* \"weusd/manageusd.sol\":17271:17469  {... */\n      pop\n        /* \"weusd/manageusd.sol\":16888:17476  function convertDecimalsCeil(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_450:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_503\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_127\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_503:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_504\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8510:8542   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8492:8543   */\n      mstore\n        /* \"#utility.yul\":8559:8577   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8552:8586   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8465:8483   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      tag_201\n        /* \"#utility.yul\":8318:8592   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_504:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_464:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_437\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":196:482   */\n    tag_54:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_518:\n        /* \"#utility.yul\":349:372   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":401:433   */\n      dup2\n      and\n        /* \"#utility.yul\":391:434   */\n      dup2\n      eq\n        /* \"#utility.yul\":381:452   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":448:449   */\n      0x00\n        /* \"#utility.yul\":445:446   */\n      dup1\n        /* \"#utility.yul\":438:450   */\n      revert\n        /* \"#utility.yul\":679:852   */\n    tag_510:\n        /* \"#utility.yul\":747:767   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":796:827   */\n      dup2\n      and\n        /* \"#utility.yul\":786:828   */\n      dup2\n      eq\n        /* \"#utility.yul\":776:846   */\n      tag_522\n      jumpi\n        /* \"#utility.yul\":842:843   */\n      0x00\n        /* \"#utility.yul\":839:840   */\n      dup1\n        /* \"#utility.yul\":832:844   */\n      revert\n        /* \"#utility.yul\":776:846   */\n    tag_522:\n        /* \"#utility.yul\":679:852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":857:1277   */\n    tag_60:\n        /* \"#utility.yul\":934:940   */\n      0x00\n        /* \"#utility.yul\":942:948   */\n      dup1\n        /* \"#utility.yul\":950:956   */\n      0x00\n        /* \"#utility.yul\":1003:1005   */\n      0x60\n        /* \"#utility.yul\":991:1000   */\n      dup5\n        /* \"#utility.yul\":982:989   */\n      dup7\n        /* \"#utility.yul\":978:1001   */\n      sub\n        /* \"#utility.yul\":974:1006   */\n      slt\n        /* \"#utility.yul\":971:1023   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":1019:1020   */\n      0x00\n        /* \"#utility.yul\":1016:1017   */\n      dup1\n        /* \"#utility.yul\":1009:1021   */\n      revert\n        /* \"#utility.yul\":971:1023   */\n    tag_524:\n        /* \"#utility.yul\":1064:1087   */\n      dup4\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1184:1186   */\n      0x20\n        /* \"#utility.yul\":1169:1187   */\n      dup5\n      add\n        /* \"#utility.yul\":1156:1188   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1233:1271   */\n      tag_525\n        /* \"#utility.yul\":1267:1269   */\n      0x40\n        /* \"#utility.yul\":1252:1270   */\n      dup6\n      add\n        /* \"#utility.yul\":1233:1271   */\n      tag_510\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":1223:1271   */\n      swap1\n      pop\n        /* \"#utility.yul\":857:1277   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1282:1468   */\n    tag_64:\n        /* \"#utility.yul\":1341:1347   */\n      0x00\n        /* \"#utility.yul\":1394:1396   */\n      0x20\n        /* \"#utility.yul\":1382:1391   */\n      dup3\n        /* \"#utility.yul\":1373:1380   */\n      dup5\n        /* \"#utility.yul\":1369:1392   */\n      sub\n        /* \"#utility.yul\":1365:1397   */\n      slt\n        /* \"#utility.yul\":1362:1414   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":1410:1411   */\n      0x00\n        /* \"#utility.yul\":1407:1408   */\n      dup1\n        /* \"#utility.yul\":1400:1412   */\n      revert\n        /* \"#utility.yul\":1362:1414   */\n    tag_527:\n        /* \"#utility.yul\":1433:1462   */\n      tag_482\n        /* \"#utility.yul\":1452:1461   */\n      dup3\n        /* \"#utility.yul\":1433:1462   */\n      tag_510\n      jump\t// in\n        /* \"#utility.yul\":1473:1699   */\n    tag_68:\n        /* \"#utility.yul\":1532:1538   */\n      0x00\n        /* \"#utility.yul\":1585:1587   */\n      0x20\n        /* \"#utility.yul\":1573:1582   */\n      dup3\n        /* \"#utility.yul\":1564:1571   */\n      dup5\n        /* \"#utility.yul\":1560:1583   */\n      sub\n        /* \"#utility.yul\":1556:1588   */\n      slt\n        /* \"#utility.yul\":1553:1605   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":1601:1602   */\n      0x00\n        /* \"#utility.yul\":1598:1599   */\n      dup1\n        /* \"#utility.yul\":1591:1603   */\n      revert\n        /* \"#utility.yul\":1553:1605   */\n    tag_530:\n      pop\n        /* \"#utility.yul\":1646:1669   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1473:1699   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:2245   */\n    tag_73:\n        /* \"#utility.yul\":1790:1796   */\n      0x00\n        /* \"#utility.yul\":1798:1804   */\n      dup1\n        /* \"#utility.yul\":1806:1812   */\n      0x00\n        /* \"#utility.yul\":1814:1820   */\n      dup1\n        /* \"#utility.yul\":1867:1870   */\n      0x80\n        /* \"#utility.yul\":1855:1864   */\n      dup6\n        /* \"#utility.yul\":1846:1853   */\n      dup8\n        /* \"#utility.yul\":1842:1865   */\n      sub\n        /* \"#utility.yul\":1838:1871   */\n      slt\n        /* \"#utility.yul\":1835:1888   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":1884:1885   */\n      0x00\n        /* \"#utility.yul\":1881:1882   */\n      dup1\n        /* \"#utility.yul\":1874:1886   */\n      revert\n        /* \"#utility.yul\":1835:1888   */\n    tag_532:\n        /* \"#utility.yul\":1929:1952   */\n      dup5\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2049:2051   */\n      0x20\n        /* \"#utility.yul\":2034:2052   */\n      dup6\n      add\n        /* \"#utility.yul\":2021:2053   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2152:2154   */\n      0x40\n        /* \"#utility.yul\":2137:2155   */\n      dup6\n      add\n        /* \"#utility.yul\":2124:2156   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2201:2239   */\n      tag_533\n        /* \"#utility.yul\":2235:2237   */\n      0x60\n        /* \"#utility.yul\":2220:2238   */\n      dup7\n      add\n        /* \"#utility.yul\":2201:2239   */\n      tag_510\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":2191:2239   */\n      swap1\n      pop\n        /* \"#utility.yul\":1704:2245   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3142:3442   */\n    tag_88:\n        /* \"#utility.yul\":3210:3216   */\n      0x00\n        /* \"#utility.yul\":3218:3224   */\n      dup1\n        /* \"#utility.yul\":3271:3273   */\n      0x40\n        /* \"#utility.yul\":3259:3268   */\n      dup4\n        /* \"#utility.yul\":3250:3257   */\n      dup6\n        /* \"#utility.yul\":3246:3269   */\n      sub\n        /* \"#utility.yul\":3242:3274   */\n      slt\n        /* \"#utility.yul\":3239:3291   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3284:3285   */\n      dup1\n        /* \"#utility.yul\":3277:3289   */\n      revert\n        /* \"#utility.yul\":3239:3291   */\n    tag_539:\n        /* \"#utility.yul\":3332:3355   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3398:3436   */\n      tag_540\n        /* \"#utility.yul\":3432:3434   */\n      0x20\n        /* \"#utility.yul\":3417:3435   */\n      dup5\n      add\n        /* \"#utility.yul\":3398:3436   */\n      tag_510\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":3388:3436   */\n      swap1\n      pop\n        /* \"#utility.yul\":3142:3442   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3655:4075   */\n    tag_131:\n        /* \"#utility.yul\":3732:3738   */\n      0x00\n        /* \"#utility.yul\":3740:3746   */\n      dup1\n        /* \"#utility.yul\":3748:3754   */\n      0x00\n        /* \"#utility.yul\":3801:3803   */\n      0x60\n        /* \"#utility.yul\":3789:3798   */\n      dup5\n        /* \"#utility.yul\":3780:3787   */\n      dup7\n        /* \"#utility.yul\":3776:3799   */\n      sub\n        /* \"#utility.yul\":3772:3804   */\n      slt\n        /* \"#utility.yul\":3769:3821   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":3817:3818   */\n      0x00\n        /* \"#utility.yul\":3814:3815   */\n      dup1\n        /* \"#utility.yul\":3807:3819   */\n      revert\n        /* \"#utility.yul\":3769:3821   */\n    tag_543:\n        /* \"#utility.yul\":3840:3869   */\n      tag_544\n        /* \"#utility.yul\":3859:3868   */\n      dup5\n        /* \"#utility.yul\":3840:3869   */\n      tag_510\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":3830:3869   */\n      swap6\n        /* \"#utility.yul\":3938:3940   */\n      0x20\n        /* \"#utility.yul\":3923:3941   */\n      dup6\n      add\n        /* \"#utility.yul\":3910:3942   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":4039:4041   */\n      0x40\n        /* \"#utility.yul\":4024:4042   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":4011:4043   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":3655:4075   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4770   */\n    tag_134:\n        /* \"#utility.yul\":4298:4300   */\n      0x40\n        /* \"#utility.yul\":4310:4331   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4380:4393   */\n      dup4\n      mload\n        /* \"#utility.yul\":4283:4301   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4402:4424   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4250:4254   */\n      0x00\n      swap1\n        /* \"#utility.yul\":4493:4497   */\n      0x20\n        /* \"#utility.yul\":4481:4498   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":4455:4457   */\n      0x60\n        /* \"#utility.yul\":4440:4458   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":4250:4254   */\n      dup4\n        /* \"#utility.yul\":4526:4699   */\n    tag_546:\n        /* \"#utility.yul\":4540:4546   */\n      dup2\n        /* \"#utility.yul\":4537:4538   */\n      dup2\n        /* \"#utility.yul\":4534:4547   */\n      lt\n        /* \"#utility.yul\":4526:4699   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":4601:4614   */\n      dup4\n      mload\n        /* \"#utility.yul\":4589:4615   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4644:4648   */\n      0x20\n        /* \"#utility.yul\":4672:4689   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":4635:4649   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":4562:4563   */\n      0x01\n        /* \"#utility.yul\":4555:4564   */\n      add\n        /* \"#utility.yul\":4526:4699   */\n      jump(tag_546)\n    tag_548:\n      pop\n      pop\n        /* \"#utility.yul\":4750:4754   */\n      0x20\n        /* \"#utility.yul\":4735:4755   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4728:4764   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n        /* \"#utility.yul\":4716:4719   */\n      swap3\n        /* \"#utility.yul\":4080:4770   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4775:5075   */\n    tag_144:\n        /* \"#utility.yul\":4843:4849   */\n      0x00\n        /* \"#utility.yul\":4851:4857   */\n      dup1\n        /* \"#utility.yul\":4904:4906   */\n      0x40\n        /* \"#utility.yul\":4892:4901   */\n      dup4\n        /* \"#utility.yul\":4883:4890   */\n      dup6\n        /* \"#utility.yul\":4879:4902   */\n      sub\n        /* \"#utility.yul\":4875:4907   */\n      slt\n        /* \"#utility.yul\":4872:4924   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":4920:4921   */\n      0x00\n        /* \"#utility.yul\":4917:4918   */\n      dup1\n        /* \"#utility.yul\":4910:4922   */\n      revert\n        /* \"#utility.yul\":4872:4924   */\n    tag_550:\n        /* \"#utility.yul\":4943:4972   */\n      tag_551\n        /* \"#utility.yul\":4962:4971   */\n      dup4\n        /* \"#utility.yul\":4943:4972   */\n      tag_510\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":4933:4972   */\n      swap5\n        /* \"#utility.yul\":5041:5043   */\n      0x20\n        /* \"#utility.yul\":5026:5044   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":5013:5045   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4775:5075   */\n      jump\t// out\n        /* \"#utility.yul\":6901:7028   */\n    tag_511:\n        /* \"#utility.yul\":6962:6972   */\n      0x4e487b71\n        /* \"#utility.yul\":6957:6960   */\n      0xe0\n        /* \"#utility.yul\":6953:6973   */\n      shl\n        /* \"#utility.yul\":6950:6951   */\n      0x00\n        /* \"#utility.yul\":6943:6974   */\n      mstore\n        /* \"#utility.yul\":6993:6997   */\n      0x11\n        /* \"#utility.yul\":6990:6991   */\n      0x04\n        /* \"#utility.yul\":6983:6998   */\n      mstore\n        /* \"#utility.yul\":7017:7021   */\n      0x24\n        /* \"#utility.yul\":7014:7015   */\n      0x00\n        /* \"#utility.yul\":7007:7022   */\n      revert\n        /* \"#utility.yul\":7033:7168   */\n    tag_210:\n        /* \"#utility.yul\":7072:7075   */\n      0x00\n        /* \"#utility.yul\":7093:7110   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7090:7133   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":7113:7131   */\n      tag_561\n      tag_511\n      jump\t// in\n    tag_561:\n      pop\n        /* \"#utility.yul\":7160:7161   */\n      0x01\n        /* \"#utility.yul\":7149:7162   */\n      add\n      swap1\n        /* \"#utility.yul\":7033:7168   */\n      jump\t// out\n        /* \"#utility.yul\":7527:7655   */\n    tag_216:\n        /* \"#utility.yul\":7594:7603   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7615:7626   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7612:7649   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":7629:7647   */\n      tag_194\n      tag_511\n      jump\t// in\n        /* \"#utility.yul\":8036:8313   */\n    tag_222:\n        /* \"#utility.yul\":8103:8109   */\n      0x00\n        /* \"#utility.yul\":8156:8158   */\n      0x20\n        /* \"#utility.yul\":8144:8153   */\n      dup3\n        /* \"#utility.yul\":8135:8142   */\n      dup5\n        /* \"#utility.yul\":8131:8154   */\n      sub\n        /* \"#utility.yul\":8127:8159   */\n      slt\n        /* \"#utility.yul\":8124:8176   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":8172:8173   */\n      0x00\n        /* \"#utility.yul\":8169:8170   */\n      dup1\n        /* \"#utility.yul\":8162:8174   */\n      revert\n        /* \"#utility.yul\":8124:8176   */\n    tag_568:\n        /* \"#utility.yul\":8204:8213   */\n      dup2\n        /* \"#utility.yul\":8198:8214   */\n      mload\n        /* \"#utility.yul\":8257:8262   */\n      dup1\n        /* \"#utility.yul\":8250:8263   */\n      iszero\n        /* \"#utility.yul\":8243:8264   */\n      iszero\n        /* \"#utility.yul\":8236:8241   */\n      dup2\n        /* \"#utility.yul\":8233:8265   */\n      eq\n        /* \"#utility.yul\":8223:8283   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":8279:8280   */\n      0x00\n        /* \"#utility.yul\":8276:8277   */\n      dup1\n        /* \"#utility.yul\":8269:8281   */\n      revert\n        /* \"#utility.yul\":10148:10275   */\n    tag_303:\n        /* \"#utility.yul\":10209:10219   */\n      0x4e487b71\n        /* \"#utility.yul\":10204:10207   */\n      0xe0\n        /* \"#utility.yul\":10200:10220   */\n      shl\n        /* \"#utility.yul\":10197:10198   */\n      0x00\n        /* \"#utility.yul\":10190:10221   */\n      mstore\n        /* \"#utility.yul\":10240:10244   */\n      0x32\n        /* \"#utility.yul\":10237:10238   */\n      0x04\n        /* \"#utility.yul\":10230:10245   */\n      mstore\n        /* \"#utility.yul\":10264:10268   */\n      0x24\n        /* \"#utility.yul\":10261:10262   */\n      0x00\n        /* \"#utility.yul\":10254:10269   */\n      revert\n        /* \"#utility.yul\":10280:10448   */\n    tag_310:\n        /* \"#utility.yul\":10353:10362   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10384:10393   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10401:10416   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10395:10417   */\n      dup5\n      eq\n        /* \"#utility.yul\":10381:10418   */\n      or\n        /* \"#utility.yul\":10371:10442   */\n      tag_194\n      jumpi\n        /* \"#utility.yul\":10422:10440   */\n      tag_194\n      tag_511\n      jump\t// in\n        /* \"#utility.yul\":10453:10578   */\n    tag_314:\n        /* \"#utility.yul\":10518:10527   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10539:10549   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10536:10572   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":10552:10570   */\n      tag_194\n      tag_511\n      jump\t// in\n        /* \"#utility.yul\":10583:10710   */\n    tag_319:\n        /* \"#utility.yul\":10644:10654   */\n      0x4e487b71\n        /* \"#utility.yul\":10639:10642   */\n      0xe0\n        /* \"#utility.yul\":10635:10655   */\n      shl\n        /* \"#utility.yul\":10632:10633   */\n      0x00\n        /* \"#utility.yul\":10625:10656   */\n      mstore\n        /* \"#utility.yul\":10675:10679   */\n      0x41\n        /* \"#utility.yul\":10672:10673   */\n      0x04\n        /* \"#utility.yul\":10665:10680   */\n      mstore\n        /* \"#utility.yul\":10699:10703   */\n      0x24\n        /* \"#utility.yul\":10696:10697   */\n      0x00\n        /* \"#utility.yul\":10689:10704   */\n      revert\n        /* \"#utility.yul\":10715:10851   */\n    tag_337:\n        /* \"#utility.yul\":10754:10757   */\n      0x00\n        /* \"#utility.yul\":10782:10787   */\n      dup2\n        /* \"#utility.yul\":10772:10811   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":10791:10809   */\n      tag_585\n      tag_511\n      jump\t// in\n    tag_585:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":10827:10845   */\n      add\n      swap1\n        /* \"#utility.yul\":10715:10851   */\n      jump\t// out\n        /* \"#utility.yul\":11210:11483   */\n    tag_345:\n        /* \"#utility.yul\":11278:11284   */\n      0x00\n        /* \"#utility.yul\":11331:11333   */\n      0x20\n        /* \"#utility.yul\":11319:11328   */\n      dup3\n        /* \"#utility.yul\":11310:11317   */\n      dup5\n        /* \"#utility.yul\":11306:11329   */\n      sub\n        /* \"#utility.yul\":11302:11334   */\n      slt\n        /* \"#utility.yul\":11299:11351   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":11347:11348   */\n      0x00\n        /* \"#utility.yul\":11344:11345   */\n      dup1\n        /* \"#utility.yul\":11337:11349   */\n      revert\n        /* \"#utility.yul\":11299:11351   */\n    tag_588:\n        /* \"#utility.yul\":11379:11388   */\n      dup2\n        /* \"#utility.yul\":11373:11389   */\n      mload\n        /* \"#utility.yul\":11429:11433   */\n      0xff\n        /* \"#utility.yul\":11422:11427   */\n      dup2\n        /* \"#utility.yul\":11418:11434   */\n      and\n        /* \"#utility.yul\":11411:11416   */\n      dup2\n        /* \"#utility.yul\":11408:11435   */\n      eq\n        /* \"#utility.yul\":11398:11453   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":11449:11450   */\n      0x00\n        /* \"#utility.yul\":11446:11447   */\n      dup1\n        /* \"#utility.yul\":11439:11451   */\n      revert\n        /* \"#utility.yul\":12096:12247   */\n    tag_478:\n        /* \"#utility.yul\":12186:12190   */\n      0xff\n        /* \"#utility.yul\":12179:12191   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":12165:12177   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":12161:12192   */\n      sub\n      swap1\n        /* \"#utility.yul\":12204:12218   */\n      dup2\n      gt\n        /* \"#utility.yul\":12201:12241   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":12221:12239   */\n      tag_194\n      tag_511\n      jump\t// in\n        /* \"#utility.yul\":12252:12627   */\n    tag_512:\n        /* \"#utility.yul\":12340:12341   */\n      0x01\n        /* \"#utility.yul\":12358:12363   */\n      dup2\n        /* \"#utility.yul\":12372:12621   */\n    tag_596:\n        /* \"#utility.yul\":12393:12394   */\n      0x01\n        /* \"#utility.yul\":12383:12391   */\n      dup5\n        /* \"#utility.yul\":12380:12395   */\n      gt\n        /* \"#utility.yul\":12372:12621   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":12443:12447   */\n      dup1\n        /* \"#utility.yul\":12438:12441   */\n      dup6\n        /* \"#utility.yul\":12434:12448   */\n      div\n        /* \"#utility.yul\":12428:12432   */\n      dup2\n        /* \"#utility.yul\":12425:12449   */\n      gt\n        /* \"#utility.yul\":12422:12472   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":12452:12470   */\n      tag_600\n      tag_511\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":12502:12503   */\n      0x01\n        /* \"#utility.yul\":12492:12500   */\n      dup5\n        /* \"#utility.yul\":12488:12504   */\n      and\n        /* \"#utility.yul\":12485:12534   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":12516:12532   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":12485:12534   */\n    tag_601:\n        /* \"#utility.yul\":12599:12600   */\n      0x01\n        /* \"#utility.yul\":12595:12611   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":12555:12570   */\n      dup1\n      mul\n        /* \"#utility.yul\":12372:12621   */\n      jump(tag_596)\n        /* \"#utility.yul\":12632:13534   */\n    tag_513:\n        /* \"#utility.yul\":12681:12686   */\n      0x00\n        /* \"#utility.yul\":12711:12719   */\n      dup3\n        /* \"#utility.yul\":12701:12781   */\n      tag_603\n      jumpi\n      pop\n        /* \"#utility.yul\":12752:12753   */\n      0x01\n        /* \"#utility.yul\":12766:12771   */\n      jump(tag_194)\n        /* \"#utility.yul\":12701:12781   */\n    tag_603:\n        /* \"#utility.yul\":12800:12804   */\n      dup2\n        /* \"#utility.yul\":12790:12866   */\n      tag_604\n      jumpi\n      pop\n        /* \"#utility.yul\":12837:12838   */\n      0x00\n        /* \"#utility.yul\":12851:12856   */\n      jump(tag_194)\n        /* \"#utility.yul\":12790:12866   */\n    tag_604:\n        /* \"#utility.yul\":12882:12886   */\n      dup2\n        /* \"#utility.yul\":12900:12901   */\n      0x01\n        /* \"#utility.yul\":12895:12954   */\n      dup2\n      eq\n      tag_606\n      jumpi\n        /* \"#utility.yul\":12968:12969   */\n      0x02\n        /* \"#utility.yul\":12963:13137   */\n      dup2\n      eq\n      tag_607\n      jumpi\n        /* \"#utility.yul\":12875:13137   */\n      jump(tag_605)\n        /* \"#utility.yul\":12895:12954   */\n    tag_606:\n        /* \"#utility.yul\":12925:12926   */\n      0x01\n        /* \"#utility.yul\":12916:12926   */\n      swap2\n      pop\n        /* \"#utility.yul\":12939:12944   */\n      pop\n      jump(tag_194)\n        /* \"#utility.yul\":12963:13137   */\n    tag_607:\n        /* \"#utility.yul\":13000:13003   */\n      0xff\n        /* \"#utility.yul\":12990:12998   */\n      dup5\n        /* \"#utility.yul\":12987:13004   */\n      gt\n        /* \"#utility.yul\":12984:13027   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":13007:13025   */\n      tag_609\n      tag_511\n      jump\t// in\n    tag_609:\n      pop\n      pop\n        /* \"#utility.yul\":13063:13064   */\n      0x01\n        /* \"#utility.yul\":13049:13065   */\n      dup3\n      shl\n        /* \"#utility.yul\":13122:13127   */\n      jump(tag_194)\n        /* \"#utility.yul\":12875:13137   */\n    tag_605:\n      pop\n        /* \"#utility.yul\":13221:13223   */\n      0x20\n        /* \"#utility.yul\":13211:13219   */\n      dup4\n        /* \"#utility.yul\":13208:13224   */\n      lt\n        /* \"#utility.yul\":13202:13205   */\n      0x0133\n        /* \"#utility.yul\":13196:13200   */\n      dup4\n        /* \"#utility.yul\":13193:13206   */\n      lt\n        /* \"#utility.yul\":13189:13225   */\n      and\n        /* \"#utility.yul\":13183:13185   */\n      0x4e\n        /* \"#utility.yul\":13173:13181   */\n      dup5\n        /* \"#utility.yul\":13170:13186   */\n      lt\n        /* \"#utility.yul\":13165:13167   */\n      0x0b\n        /* \"#utility.yul\":13159:13163   */\n      dup5\n        /* \"#utility.yul\":13156:13168   */\n      lt\n        /* \"#utility.yul\":13152:13187   */\n      and\n        /* \"#utility.yul\":13149:13226   */\n      or\n        /* \"#utility.yul\":13146:13349   */\n      iszero\n      tag_610\n      jumpi\n      pop\n        /* \"#utility.yul\":13258:13277   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":13334:13339   */\n      jump(tag_194)\n        /* \"#utility.yul\":13146:13349   */\n    tag_610:\n        /* \"#utility.yul\":13381:13423   */\n      tag_611\n      not(0x00)\n        /* \"#utility.yul\":13406:13414   */\n      dup5\n        /* \"#utility.yul\":13400:13404   */\n      dup5\n        /* \"#utility.yul\":13381:13423   */\n      tag_512\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":13459:13465   */\n      dup1\n        /* \"#utility.yul\":13455:13456   */\n      0x00\n        /* \"#utility.yul\":13451:13457   */\n      not\n        /* \"#utility.yul\":13447:13466   */\n      div\n        /* \"#utility.yul\":13438:13445   */\n      dup3\n        /* \"#utility.yul\":13435:13467   */\n      gt\n        /* \"#utility.yul\":13432:13490   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":13470:13488   */\n      tag_613\n      tag_511\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":13508:13528   */\n      mul\n      swap4\n        /* \"#utility.yul\":12632:13534   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13539:13679   */\n    tag_480:\n        /* \"#utility.yul\":13597:13602   */\n      0x00\n        /* \"#utility.yul\":13626:13673   */\n      tag_482\n        /* \"#utility.yul\":13667:13671   */\n      0xff\n        /* \"#utility.yul\":13657:13665   */\n      dup5\n        /* \"#utility.yul\":13653:13672   */\n      and\n        /* \"#utility.yul\":13647:13651   */\n      dup4\n        /* \"#utility.yul\":13626:13673   */\n      tag_513\n      jump\t// in\n        /* \"#utility.yul\":13684:13811   */\n    tag_514:\n        /* \"#utility.yul\":13745:13755   */\n      0x4e487b71\n        /* \"#utility.yul\":13740:13743   */\n      0xe0\n        /* \"#utility.yul\":13736:13756   */\n      shl\n        /* \"#utility.yul\":13733:13734   */\n      0x00\n        /* \"#utility.yul\":13726:13757   */\n      mstore\n        /* \"#utility.yul\":13776:13780   */\n      0x12\n        /* \"#utility.yul\":13773:13774   */\n      0x04\n        /* \"#utility.yul\":13766:13781   */\n      mstore\n        /* \"#utility.yul\":13800:13804   */\n      0x24\n        /* \"#utility.yul\":13797:13798   */\n      0x00\n        /* \"#utility.yul\":13790:13805   */\n      revert\n        /* \"#utility.yul\":13816:13936   */\n    tag_486:\n        /* \"#utility.yul\":13856:13857   */\n      0x00\n        /* \"#utility.yul\":13882:13883   */\n      dup3\n        /* \"#utility.yul\":13872:13907   */\n      tag_619\n      jumpi\n        /* \"#utility.yul\":13887:13905   */\n      tag_619\n      tag_514\n      jump\t// in\n    tag_619:\n      pop\n        /* \"#utility.yul\":13921:13930   */\n      div\n      swap1\n        /* \"#utility.yul\":13816:13936   */\n      jump\t// out\n        /* \"#utility.yul\":13941:14053   */\n    tag_499:\n        /* \"#utility.yul\":13973:13974   */\n      0x00\n        /* \"#utility.yul\":13999:14000   */\n      dup3\n        /* \"#utility.yul\":13989:14024   */\n      tag_622\n      jumpi\n        /* \"#utility.yul\":14004:14022   */\n      tag_622\n      tag_514\n      jump\t// in\n    tag_622:\n      pop\n        /* \"#utility.yul\":14038:14047   */\n      mod\n      swap1\n        /* \"#utility.yul\":13941:14053   */\n      jump\t// out\n    stop\n    data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n\n    auxdata: 0xa264697066735822122043c091aa4a94152f4445b337be5de9e6b3d6fa063bc9244af3e6de28840319be64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1952": {
									"entryPoint": null,
									"id": 1952,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_546": {
									"entryPoint": null,
									"id": 546,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 320,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_494": {
									"entryPoint": null,
									"id": 494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:748:12",
										"nodeType": "YulBlock",
										"src": "0:748:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:12",
													"nodeType": "YulBlock",
													"src": "74:117:12",
													"statements": [
														{
															"nativeSrc": "84:22:12",
															"nodeType": "YulAssignment",
															"src": "84:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:12"
																},
																"nativeSrc": "93:13:12",
																"nodeType": "YulFunctionCall",
																"src": "93:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:12",
																"nodeType": "YulBlock",
																"src": "169:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:12",
																					"nodeType": "YulLiteral",
																					"src": "178:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:12",
																					"nodeType": "YulLiteral",
																					"src": "181:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:12"
																			},
																			"nativeSrc": "171:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:12"
																		},
																		"nativeSrc": "171:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:12",
																										"nodeType": "YulLiteral",
																										"src": "154:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:12",
																										"nodeType": "YulLiteral",
																										"src": "159:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:12"
																								},
																								"nativeSrc": "150:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:12",
																								"nodeType": "YulLiteral",
																								"src": "163:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:12"
																						},
																						"nativeSrc": "146:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:12"
																				},
																				"nativeSrc": "135:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:12"
																		},
																		"nativeSrc": "125:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:12"
																},
																"nativeSrc": "118:50:12",
																"nodeType": "YulFunctionCall",
																"src": "118:50:12"
															},
															"nativeSrc": "115:70:12",
															"nodeType": "YulIf",
															"src": "115:70:12"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:12",
														"nodeType": "YulTypedName",
														"src": "53:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:12",
														"nodeType": "YulTypedName",
														"src": "64:5:12",
														"type": ""
													}
												],
												"src": "14:177:12"
											},
											{
												"body": {
													"nativeSrc": "345:401:12",
													"nodeType": "YulBlock",
													"src": "345:401:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "392:16:12",
																"nodeType": "YulBlock",
																"src": "392:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "401:1:12",
																					"nodeType": "YulLiteral",
																					"src": "401:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "404:1:12",
																					"nodeType": "YulLiteral",
																					"src": "404:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "394:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:12"
																			},
																			"nativeSrc": "394:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "394:12:12"
																		},
																		"nativeSrc": "394:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "394:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "366:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "375:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "362:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:12"
																		},
																		"nativeSrc": "362:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "387:3:12",
																		"nodeType": "YulLiteral",
																		"src": "387:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "358:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:12"
																},
																"nativeSrc": "358:33:12",
																"nodeType": "YulFunctionCall",
																"src": "358:33:12"
															},
															"nativeSrc": "355:53:12",
															"nodeType": "YulIf",
															"src": "355:53:12"
														},
														{
															"nativeSrc": "417:50:12",
															"nodeType": "YulAssignment",
															"src": "417:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "457:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "427:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "427:29:12"
																},
																"nativeSrc": "427:40:12",
																"nodeType": "YulFunctionCall",
																"src": "427:40:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "417:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:12"
																}
															]
														},
														{
															"nativeSrc": "476:59:12",
															"nodeType": "YulAssignment",
															"src": "476:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "520:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "531:2:12",
																				"nodeType": "YulLiteral",
																				"src": "531:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "516:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:12"
																		},
																		"nativeSrc": "516:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "486:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "486:29:12"
																},
																"nativeSrc": "486:49:12",
																"nodeType": "YulFunctionCall",
																"src": "486:49:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "476:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:12"
																}
															]
														},
														{
															"nativeSrc": "544:59:12",
															"nodeType": "YulAssignment",
															"src": "544:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "599:2:12",
																				"nodeType": "YulLiteral",
																				"src": "599:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:12"
																		},
																		"nativeSrc": "584:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "584:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "554:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "554:29:12"
																},
																"nativeSrc": "554:49:12",
																"nodeType": "YulFunctionCall",
																"src": "554:49:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																}
															]
														},
														{
															"nativeSrc": "612:59:12",
															"nodeType": "YulAssignment",
															"src": "612:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "656:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "667:2:12",
																				"nodeType": "YulLiteral",
																				"src": "667:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nativeSrc": "652:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "622:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "622:29:12"
																},
																"nativeSrc": "622:49:12",
																"nodeType": "YulFunctionCall",
																"src": "622:49:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "612:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:12"
																}
															]
														},
														{
															"nativeSrc": "680:60:12",
															"nodeType": "YulAssignment",
															"src": "680:60:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "724:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "724:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "735:3:12",
																				"nodeType": "YulLiteral",
																				"src": "735:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "720:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:12"
																		},
																		"nativeSrc": "720:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "720:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "690:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "690:29:12"
																},
																"nativeSrc": "690:50:12",
																"nodeType": "YulFunctionCall",
																"src": "690:50:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "680:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:550:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "279:9:12",
														"nodeType": "YulTypedName",
														"src": "279:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "290:7:12",
														"nodeType": "YulTypedName",
														"src": "290:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "302:6:12",
														"nodeType": "YulTypedName",
														"src": "302:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "310:6:12",
														"nodeType": "YulTypedName",
														"src": "310:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "318:6:12",
														"nodeType": "YulTypedName",
														"src": "318:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "326:6:12",
														"nodeType": "YulTypedName",
														"src": "326:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "334:6:12",
														"nodeType": "YulTypedName",
														"src": "334:6:12",
														"type": ""
													}
												],
												"src": "196:550:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526207a120600455348015610016575f80fd5b506040516121c93803806121c983398101604081905261003591610204565b60018054600280546001600160a01b03808a166001600160a01b0319909216919091179091558416610100026001600160a81b031990911617905561007a5f33610140565b506100a57fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610140565b506100d07f41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd4370484610140565b506100fb7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a84610140565b506001600160a01b039384165f908152600860205260409020805460ff1916600117905560058054919094166001600160a01b03199091161790925550610265915050565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166101e0575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556101983390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016101e3565b505f5b92915050565b80516001600160a01b03811681146101ff575f80fd5b919050565b5f805f805f60a08688031215610218575f80fd5b610221866101e9565b945061022f602087016101e9565b935061023d604087016101e9565b925061024b606087016101e9565b9150610259608087016101e9565b90509295509295909350565b611f57806102725f395ff3fe608060405234801561000f575f80fd5b5060043610610228575f3560e01c8063854935f11161012a578063c5494ffb116100b4578063d547741f11610079578063d547741f146105c3578063e63ab1e9146105d6578063e74b981b146105fd578063ea277eca14610610578063eda87eff14610631575f80fd5b8063c5494ffb14610553578063c640065714610566578063c99773ce14610579578063d19fad3714610598578063d270e7ab146105ab575f80fd5b8063a217fddf116100fa578063a217fddf146104f4578063a2519ae4146104fb578063a62e1b3e1461050e578063bb93ede014610521578063bead8d2614610534575f80fd5b8063854935f11461048b57806391d148541461049e578063973697bd146104b15780639ea4f3a4146104d2575f80fd5b80632f92893c116101b6578063469048401161017b57806346904840146104305780635badbe4c1461045b5780635c975abb1461046457806375b238fc1461046f5780638456cb5914610483575f80fd5b80632f92893c146103b957806334d8c7d5146103db57806336568abe146103ee57806337174202146104015780633f4ba83a14610428575f80fd5b80631e7502d7116101fc5780631e7502d7146102935780631f224564146102b5578063248a9ca3146102c857806326757b73146102ea5780632f2ff15d146103a6575f80fd5b80626770161461022c57806301ffc9a7146102485780630bd31a571461026b5780631008776f14610280575b5f80fd5b61023560045481565b6040519081526020015b60405180910390f35b61025b610256366004611b32565b61064b565b604051901515815260200161023f565b61027e610279366004611b74565b610681565b005b61027e61028e366004611ba6565b61098d565b61025b6102a1366004611bbf565b5f9081526009602052604090205460ff1690565b61027e6102c3366004611bd6565b6109ed565b6102356102d6366004611bbf565b5f9081526020819052604090206001015490565b6103686102f8366004611bbf565b60408051608080820183525f80835260208084018290528385018290526060938401829052948152600a8552839020835191820184528054825260018101546001600160a01b03169482019490945260028401549281019290925260039092015460ff1615159181019190915290565b60405161023f9190815181526020808301516001600160a01b0316908201526040808301519082015260609182015115159181019190915260800190565b61027e6103b4366004611c12565b610c4a565b61025b6103c7366004611bbf565b60096020525f908152604090205460ff1681565b6102356103e9366004611bbf565b610c74565b61027e6103fc366004611c12565b610c93565b6102357f41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd4370481565b61027e610ccb565b600554610443906001600160a01b031681565b6040516001600160a01b03909116815260200161023f565b61023560035481565b60015460ff1661025b565b6102355f80516020611f0283398151915281565b61027e610d00565b610235610499366004611bbf565b610d32565b61025b6104ac366004611c12565b610d41565b6104c46104bf366004611c3c565b610d69565b60405161023f929190611c6c565b61025b6104e0366004611ba6565b60086020525f908152604090205460ff1681565b6102355f81565b61027e610509366004611cb8565b610fb9565b600254610443906001600160a01b031681565b6104c461052f366004611c3c565b611205565b610235610542366004611bbf565b600c6020525f908152604090205481565b61027e610561366004611bbf565b611438565b61027e610574366004611ba6565b611455565b610235610587366004611bbf565b600b6020525f908152604090205481565b61027e6105a6366004611cb8565b6114b8565b6001546104439061010090046001600160a01b031681565b61027e6105d1366004611c12565b61169d565b6102357f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b61027e61060b366004611ba6565b6116c1565b61025b61061e366004611bbf565b5f908152600a6020526040902054151590565b610639600681565b60405160ff909116815260200161023f565b5f6001600160e01b03198216637965db0b60e01b148061067b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6106896116fb565b4683036106f65760405162461bcd60e51b815260206004820152603060248201527f54617267657420636861696e206d75737420626520646966666572656e74206660448201526f3937b69039b7bab931b29031b430b4b760811b60648201526084015b60405180910390fd5b60045482116107525760405162461bcd60e51b815260206004820152602260248201527f416d6f756e74206d7573742062652067726561746572207468616e2067617366604482015261656560f01b60648201526084016106ed565b6001600160a01b0381166107a85760405162461bcd60e51b815260206004820152601b60248201527f496e76616c69642074617267657420757365722061646472657373000000000060448201526064016106ed565b5f4690505f60035f81546107bb90611cf4565b918290555060c083901b608087901b174260401b171790506107ea815f908152600a6020526040902054151590565b156108335760405162461bcd60e51b81526020600482015260196024820152785265717565737420494420616c72656164792065786973747360381b60448201526064016106ed565b5f600454856108429190611d0c565b600254600554600480546040516323b872dd60e01b815233928101929092526001600160a01b039283166024830152604482015292935016906323b872dd906064016020604051808303815f875af11580156108a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c49190611d1f565b5060025460405163079cc67960e41b8152336004820152602481018390526001600160a01b03909116906379cc6790906044015f604051808303815f87803b15801561090e575f80fd5b505af1158015610920573d5f803e3d5ffd5b505050506109318233836001611721565b60408051848152602081018890529081018290526001600160a01b0385166060820152339083907f26c32cc5ff12981b55681844f2fb47d52c5e521c58d5288b1325f3304a7e88529060800160405180910390a3505050505050565b5f80516020611f028339815191526109a48161185b565b6001600160a01b0382165f81815260086020526040808220805460ff19169055517f0fa63555fe68cad70e08233633567493a3c74afdc8c7fb9f0c03a8e74f1a137a9190a25050565b7f41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704610a178161185b565b610a1f6116fb565b468403610a875760405162461bcd60e51b815260206004820152603060248201527f536f7572636520636861696e206d75737420626520646966666572656e74206660448201526f3937b6903a30b933b2ba1031b430b4b760811b60648201526084016106ed565b5f8311610ad65760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016106ed565b6001600160a01b038216610b2c5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c69642074617267657420757365722061646472657373000000000060448201526064016106ed565b5f858152600a602052604090205415610b835760405162461bcd60e51b81526020600482015260196024820152785265717565737420494420616c72656164792065786973747360381b60448201526064016106ed565b6002546040516340c10f1960e01b81526001600160a01b03848116600483015260248201869052909116906340c10f19906044015f604051808303815f87803b158015610bce575f80fd5b505af1158015610be0573d5f803e3d5ffd5b50505050610bf08583855f611721565b604080518581524660208201529081018490526001600160a01b0383166060820152339086907f7690d9cedf96f067bda7114c24bba31be184ae045d199979a0a373862e70d46b9060800160405180910390a35050505050565b5f82815260208190526040902060010154610c648161185b565b610c6e8383611865565b50505050565b60078181548110610c83575f80fd5b5f91825260209091200154905081565b6001600160a01b0381163314610cbc5760405163334bd91960e11b815260040160405180910390fd5b610cc682826118f4565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610cf58161185b565b610cfd61195d565b50565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610d2a8161185b565b610cfd6119af565b60068181548110610c83575f80fd5b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60605f831580610d77575082155b80610d8b57505f84118015610d8b57505f83115b610dd35760405162461bcd60e51b8152602060048201526019602482015278496e76616c69642070616765206f7220706167652073697a6560381b60448201526064016106ed565b5f805b600654811015610e4257866001600160a01b0316600a5f60068481548110610e0057610e00611d3e565b5f91825260208083209091015483528201929092526040019020600101546001600160a01b031603610e3a5781610e3681611cf4565b9250505b600101610dd6565b505f818615801590610e5357505f86115b15610e9157610e628688611d52565b610e6c9084611d0c565b915082821115610e7a575f91505b610e848683611d69565b905082811115610e915750815b5f610e9c8383611d0c565b67ffffffffffffffff811115610eb457610eb4611d7c565b604051908082528060200260200182016040528015610edd578160200160208202803683370190505b506006549091505f905b5f81118015610ef65750825182105b15610fa6575f6006610f09600184611d0c565b81548110610f1957610f19611d3e565b5f918252602080832090910154808352600a9091526040909120600101549091506001600160a01b03808e16911603610f935785610f578489611d0c565b1115610f8d5780848481518110610f7057610f70611d3e565b602090810291909101015282610f8581611cf4565b935050610f93565b50610fa6565b5080610f9e81611d90565b915050610ee7565b509095509293505050505b935093915050565b6001600160a01b0382165f9081526008602052604090205460ff1661101c5760405162461bcd60e51b815260206004820152601960248201527814dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959603a1b60448201526064016106ed565b5f826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611059573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061107d9190611da5565b90505f61108c838360066119ea565b6001546040516323b872dd60e01b81523360048201526001600160a01b0361010090920482166024820152604481018690529192508516906323b872dd906064016020604051808303815f875af11580156110e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061110d9190611d1f565b6111595760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c656400000000000060448201526064016106ed565b6002546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044015f604051808303815f87803b1580156111a2575f80fd5b505af11580156111b4573d5f803e3d5ffd5b505060408051868152602081018590526001600160a01b03881693503392507f66c62f0863782653c5c44e10bf21d9def60984ce20d9f75549575a891089658791015b60405180910390a350505050565b60605f831580611213575082155b8061122757505f8411801561122757505f83115b61126f5760405162461bcd60e51b8152602060048201526019602482015278496e76616c69642070616765206f7220706167652073697a6560381b60448201526064016106ed565b5f805b6007548110156112de57866001600160a01b0316600a5f6007848154811061129c5761129c611d3e565b5f91825260208083209091015483528201929092526040019020600101546001600160a01b0316036112d657816112d281611cf4565b9250505b600101611272565b505f8186158015906112ef57505f86115b1561132d576112fe8688611d52565b6113089084611d0c565b915082821115611316575f91505b6113208683611d69565b90508281111561132d5750815b5f6113388383611d0c565b67ffffffffffffffff81111561135057611350611d7c565b604051908082528060200260200182016040528015611379578160200160208202803683370190505b506007549091505f905b5f811180156113925750825182105b15610fa6575f60076113a5600184611d0c565b815481106113b5576113b5611d3e565b5f918252602080832090910154808352600a9091526040909120600101549091506001600160a01b03808e1691160361142557856113f38489611d0c565b1115610f8d578084848151811061140c5761140c611d3e565b60209081029190910101528261142181611cf4565b9350505b508061143081611d90565b915050611383565b5f80516020611f0283398151915261144f8161185b565b50600455565b5f80516020611f0283398151915261146c8161185b565b6001600160a01b0382165f81815260086020526040808220805460ff19166001179055517fd8b2dc62b787ec8afbc8a664cf2fd7c1e7851721acc9e0069132cece3c529c2e9190a25050565b6001600160a01b0382165f9081526008602052604090205460ff1661151b5760405162461bcd60e51b815260206004820152601960248201527814dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959603a1b60448201526064016106ed565b5f826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611558573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061157c9190611da5565b90505f61158b83600684611a5c565b600154604051631795588d60e21b81526001600160a01b0387811660048301523360248301526044820184905292935061010090910490911690635e556234906064015f604051808303815f87803b1580156115e5575f80fd5b505af11580156115f7573d5f803e3d5ffd5b505060025460405163079cc67960e41b8152336004820152602481018790526001600160a01b0390911692506379cc679091506044015f604051808303815f87803b158015611644575f80fd5b505af1158015611656573d5f803e3d5ffd5b505060408051868152602081018590526001600160a01b03881693503392507f3d9842cbdfa603ab9534d6e362bf28b3061318f57fed5e7087dfc956a9d7444291016111f7565b5f828152602081905260409020600101546116b78161185b565b610c6e83836118f4565b5f80516020611f028339815191526116d88161185b565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b60015460ff161561171f5760405163d93c066560e01b815260040160405180910390fd5b565b604080516080810182528581526001600160a01b03858116602080840191825283850187815286158015606087019081525f8c8152600a909452969092208551815592516001840180546001600160a01b03191691909516179093559151600282015592516003909301805460ff191693151593909317909255906117d957600680546001810182555f919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0185905561180e565b600780546001810182555f919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018590555b81156118365760065461182390600190611d0c565b5f868152600b6020526040902055611854565b60075461184590600190611d0c565b5f868152600c60205260409020555b5050505050565b610cfd8133611ad2565b5f6118708383610d41565b6118ed575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556118a53390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161067b565b505f61067b565b5f6118ff8383610d41565b156118ed575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161067b565b611965611b0f565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6119b76116fb565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611992565b5f8160ff168360ff16036119ff575082611a55565b8160ff168360ff161015611a3357611a178383611dc5565b611a2290600a611eb9565b611a2c9085611d52565b9050611a55565b611a3d8284611dc5565b611a4890600a611eb9565b611a529085611edb565b90505b9392505050565b5f8160ff168360ff1603611a71575082611a55565b8160ff168360ff161015611a8957611a178383611dc5565b5f611a948385611dc5565b611a9f90600a611eb9565b9050611aab8186611edb565b9150611ab78186611eee565b15611aca57611ac7600183611d69565b91505b509392505050565b611adc8282610d41565b611b0b5760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016106ed565b5050565b60015460ff1661171f57604051638dfc202b60e01b815260040160405180910390fd5b5f60208284031215611b42575f80fd5b81356001600160e01b031981168114611a55575f80fd5b80356001600160a01b0381168114611b6f575f80fd5b919050565b5f805f60608486031215611b86575f80fd5b8335925060208401359150611b9d60408501611b59565b90509250925092565b5f60208284031215611bb6575f80fd5b611a5582611b59565b5f60208284031215611bcf575f80fd5b5035919050565b5f805f8060808587031215611be9575f80fd5b843593506020850135925060408501359150611c0760608601611b59565b905092959194509250565b5f8060408385031215611c23575f80fd5b82359150611c3360208401611b59565b90509250929050565b5f805f60608486031215611c4e575f80fd5b611c5784611b59565b95602085013595506040909401359392505050565b604080825283519082018190525f9060208501906060840190835b81811015611ca5578351835260209384019390920191600101611c87565b5050602093909301939093525092915050565b5f8060408385031215611cc9575f80fd5b611cd283611b59565b946020939093013593505050565b634e487b7160e01b5f52601160045260245ffd5b5f60018201611d0557611d05611ce0565b5060010190565b8181038181111561067b5761067b611ce0565b5f60208284031215611d2f575f80fd5b81518015158114611a55575f80fd5b634e487b7160e01b5f52603260045260245ffd5b808202811582820484141761067b5761067b611ce0565b8082018082111561067b5761067b611ce0565b634e487b7160e01b5f52604160045260245ffd5b5f81611d9e57611d9e611ce0565b505f190190565b5f60208284031215611db5575f80fd5b815160ff81168114611a55575f80fd5b60ff828116828216039081111561067b5761067b611ce0565b6001815b6001841115610fb157808504811115611dfd57611dfd611ce0565b6001841615611e0b57908102905b60019390931c928002611de2565b5f82611e275750600161067b565b81611e3357505f61067b565b8160018114611e495760028114611e5357611e6f565b600191505061067b565b60ff841115611e6457611e64611ce0565b50506001821b61067b565b5060208310610133831016604e8410600b8410161715611e92575081810a61067b565b611e9e5f198484611dde565b805f1904821115611eb157611eb1611ce0565b029392505050565b5f611a5560ff841683611e19565b634e487b7160e01b5f52601260045260245ffd5b5f82611ee957611ee9611ec7565b500490565b5f82611efc57611efc611ec7565b50069056fea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a264697066735822122043c091aa4a94152f4445b337be5de9e6b3d6fa063bc9244af3e6de28840319be64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x7A120 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x21C9 CODESIZE SUB DUP1 PUSH2 0x21C9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x35 SWAP2 PUSH2 0x204 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP5 AND PUSH2 0x100 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x7A PUSH0 CALLER PUSH2 0x140 JUMP JUMPDEST POP PUSH2 0xA5 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x140 JUMP JUMPDEST POP PUSH2 0xD0 PUSH32 0x41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704 DUP5 PUSH2 0x140 JUMP JUMPDEST POP PUSH2 0xFB PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP5 PUSH2 0x140 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SWAP3 SSTORE POP PUSH2 0x265 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1E0 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x198 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x1E3 JUMP JUMPDEST POP PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x221 DUP7 PUSH2 0x1E9 JUMP JUMPDEST SWAP5 POP PUSH2 0x22F PUSH1 0x20 DUP8 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP4 POP PUSH2 0x23D PUSH1 0x40 DUP8 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP3 POP PUSH2 0x24B PUSH1 0x60 DUP8 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x259 PUSH1 0x80 DUP8 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1F57 DUP1 PUSH2 0x272 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x228 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x854935F1 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0xC5494FFB GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xEA277ECA EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xEDA87EFF EQ PUSH2 0x631 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC5494FFB EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xC6400657 EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xC99773CE EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xD19FAD37 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xD270E7AB EQ PUSH2 0x5AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xFA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0xA2519AE4 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA62E1B3E EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xBB93EDE0 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xBEAD8D26 EQ PUSH2 0x534 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x854935F1 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x973697BD EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x9EA4F3A4 EQ PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F92893C GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x46904840 GT PUSH2 0x17B JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x5BADBE4C EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x483 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F92893C EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x34D8C7D5 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x37174202 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x428 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E7502D7 GT PUSH2 0x1FC JUMPI DUP1 PUSH4 0x1E7502D7 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x1F224564 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x26757B73 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x677016 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xBD31A57 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x1008776F EQ PUSH2 0x280 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x235 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23F JUMP JUMPDEST PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST PUSH2 0x25B PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD6 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x235 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP4 MSTORE PUSH0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP3 SWAP1 MSTORE SWAP5 DUP2 MSTORE PUSH1 0xA DUP6 MSTORE DUP4 SWAP1 KECCAK256 DUP4 MLOAD SWAP2 DUP3 ADD DUP5 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x25B PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x3FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x235 PUSH32 0x41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704 DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x443 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23F JUMP JUMPDEST PUSH2 0x235 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x25B JUMP JUMPDEST PUSH2 0x235 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP3 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x25B PUSH2 0x4E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x443 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x561 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x574 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x443 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x5D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x169D JUMP JUMPDEST PUSH2 0x235 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x61E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x639 PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x67B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x689 PUSH2 0x16FB JUMP JUMPDEST CHAINID DUP4 SUB PUSH2 0x6F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420636861696E206D75737420626520646966666572656E742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3937B69039B7BAB931B29031B430B4B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2067617366 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746172676574207573657220616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 CHAINID SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP2 SLOAD PUSH2 0x7BB SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP PUSH1 0xC0 DUP4 SWAP1 SHL PUSH1 0x80 DUP8 SWAP1 SHL OR TIMESTAMP PUSH1 0x40 SHL OR OR SWAP1 POP PUSH2 0x7EA DUP2 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x5265717565737420494420616C726561647920657869737473 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD DUP6 PUSH2 0x842 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x931 DUP3 CALLER DUP4 PUSH1 0x1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 DUP4 SWAP1 PUSH32 0x26C32CC5FF12981B55681844F2FB47D52C5E521C58D5288B1325F3304A7E8852 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9A4 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xFA63555FE68CAD70E08233633567493A3C74AFDC8C7FB9F0C03A8E74F1A137A SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704 PUSH2 0xA17 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xA1F PUSH2 0x16FB JUMP JUMPDEST CHAINID DUP5 SUB PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7572636520636861696E206D75737420626520646966666572656E742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3937B6903A30B933B2BA1031B430B4B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746172676574207573657220616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x5265717565737420494420616C726561647920657869737473 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xBF0 DUP6 DUP4 DUP6 PUSH0 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE CHAINID PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 DUP7 SWAP1 PUSH32 0x7690D9CEDF96F067BDA7114C24BBA31BE184AE045D199979A0A373862E70D46B SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xC64 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xC6E DUP4 DUP4 PUSH2 0x1865 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC83 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC6 DUP3 DUP3 PUSH2 0x18F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xCF5 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xCFD PUSH2 0x195D JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD2A DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xCFD PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC83 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 ISZERO DUP1 PUSH2 0xD77 JUMPI POP DUP3 ISZERO JUMPDEST DUP1 PUSH2 0xD8B JUMPI POP PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0xD8B JUMPI POP PUSH0 DUP4 GT JUMPDEST PUSH2 0xDD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x496E76616C69642070616765206F7220706167652073697A65 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xE42 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA PUSH0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE00 JUMPI PUSH2 0xE00 PUSH2 0x1D3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE3A JUMPI DUP2 PUSH2 0xE36 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xDD6 JUMP JUMPDEST POP PUSH0 DUP2 DUP7 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE53 JUMPI POP PUSH0 DUP7 GT JUMPDEST ISZERO PUSH2 0xE91 JUMPI PUSH2 0xE62 DUP7 DUP9 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0xE6C SWAP1 DUP5 PUSH2 0x1D0C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 GT ISZERO PUSH2 0xE7A JUMPI PUSH0 SWAP2 POP JUMPDEST PUSH2 0xE84 DUP7 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0xE91 JUMPI POP DUP2 JUMPDEST PUSH0 PUSH2 0xE9C DUP4 DUP4 PUSH2 0x1D0C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xEB4 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEDD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xEF6 JUMPI POP DUP3 MLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0xFA6 JUMPI PUSH0 PUSH1 0x6 PUSH2 0xF09 PUSH1 0x1 DUP5 PUSH2 0x1D0C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF19 JUMPI PUSH2 0xF19 PUSH2 0x1D3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND SWAP2 AND SUB PUSH2 0xF93 JUMPI DUP6 PUSH2 0xF57 DUP5 DUP10 PUSH2 0x1D0C JUMP JUMPDEST GT ISZERO PUSH2 0xF8D JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF70 JUMPI PUSH2 0xF70 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP3 PUSH2 0xF85 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP4 POP POP PUSH2 0xF93 JUMP JUMPDEST POP PUSH2 0xFA6 JUMP JUMPDEST POP DUP1 PUSH2 0xF9E DUP2 PUSH2 0x1D90 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEE7 JUMP JUMPDEST POP SWAP1 SWAP6 POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1059 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x108C DUP4 DUP4 PUSH1 0x6 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP3 DIV DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP4 POP CALLER SWAP3 POP PUSH32 0x66C62F0863782653C5C44E10BF21D9DEF60984CE20D9F75549575A8910896587 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 ISZERO DUP1 PUSH2 0x1213 JUMPI POP DUP3 ISZERO JUMPDEST DUP1 PUSH2 0x1227 JUMPI POP PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0x1227 JUMPI POP PUSH0 DUP4 GT JUMPDEST PUSH2 0x126F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x496E76616C69642070616765206F7220706167652073697A65 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x12DE JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA PUSH0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x129C JUMPI PUSH2 0x129C PUSH2 0x1D3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x12D6 JUMPI DUP2 PUSH2 0x12D2 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1272 JUMP JUMPDEST POP PUSH0 DUP2 DUP7 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x12EF JUMPI POP PUSH0 DUP7 GT JUMPDEST ISZERO PUSH2 0x132D JUMPI PUSH2 0x12FE DUP7 DUP9 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1308 SWAP1 DUP5 PUSH2 0x1D0C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 GT ISZERO PUSH2 0x1316 JUMPI PUSH0 SWAP2 POP JUMPDEST PUSH2 0x1320 DUP7 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x132D JUMPI POP DUP2 JUMPDEST PUSH0 PUSH2 0x1338 DUP4 DUP4 PUSH2 0x1D0C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1350 JUMPI PUSH2 0x1350 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1379 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x1392 JUMPI POP DUP3 MLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0xFA6 JUMPI PUSH0 PUSH1 0x7 PUSH2 0x13A5 PUSH1 0x1 DUP5 PUSH2 0x1D0C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x13B5 JUMPI PUSH2 0x13B5 PUSH2 0x1D3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND SWAP2 AND SUB PUSH2 0x1425 JUMPI DUP6 PUSH2 0x13F3 DUP5 DUP10 PUSH2 0x1D0C JUMP JUMPDEST GT ISZERO PUSH2 0xF8D JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x140C JUMPI PUSH2 0x140C PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP3 PUSH2 0x1421 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0x1430 DUP2 PUSH2 0x1D90 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1383 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x144F DUP2 PUSH2 0x185B JUMP JUMPDEST POP PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x146C DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xD8B2DC62B787EC8AFBC8A664CF2FD7C1E7851721ACC9E0069132CECE3C529C2E SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x151B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1558 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x157C SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x158B DUP4 PUSH1 0x6 DUP5 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1795588D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP PUSH2 0x100 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0x5E556234 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x79CC6790 SWAP2 POP PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1644 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1656 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP4 POP CALLER SWAP3 POP PUSH32 0x3D9842CBDFA603AB9534D6E362BF28B3061318F57FED5E7087DFC956A9D74442 SWAP2 ADD PUSH2 0x11F7 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x16B7 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xC6E DUP4 DUP4 PUSH2 0x18F4 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x16D8 DUP2 PUSH2 0x185B JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x171F JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP4 DUP6 ADD DUP8 DUP2 MSTORE DUP7 ISZERO DUP1 ISZERO PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH0 DUP13 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP5 MSTORE SWAP7 SWAP1 SWAP3 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 PUSH2 0x17D9 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP6 SWAP1 SSTORE PUSH2 0x180E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP6 SWAP1 SSTORE JUMPDEST DUP2 ISZERO PUSH2 0x1836 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1823 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH0 DUP7 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1845 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCFD DUP2 CALLER PUSH2 0x1AD2 JUMP JUMPDEST PUSH0 PUSH2 0x1870 DUP4 DUP4 PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x18ED JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x18A5 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x67B JUMP JUMPDEST POP PUSH0 PUSH2 0x67B JUMP JUMPDEST PUSH0 PUSH2 0x18FF DUP4 DUP4 PUSH2 0xD41 JUMP JUMPDEST ISZERO PUSH2 0x18ED JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x1965 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x19B7 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1992 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x19FF JUMPI POP DUP3 PUSH2 0x1A55 JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO PUSH2 0x1A33 JUMPI PUSH2 0x1A17 DUP4 DUP4 PUSH2 0x1DC5 JUMP JUMPDEST PUSH2 0x1A22 SWAP1 PUSH1 0xA PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x1A2C SWAP1 DUP6 PUSH2 0x1D52 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x1A3D DUP3 DUP5 PUSH2 0x1DC5 JUMP JUMPDEST PUSH2 0x1A48 SWAP1 PUSH1 0xA PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x1A52 SWAP1 DUP6 PUSH2 0x1EDB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x1A71 JUMPI POP DUP3 PUSH2 0x1A55 JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO PUSH2 0x1A89 JUMPI PUSH2 0x1A17 DUP4 DUP4 PUSH2 0x1DC5 JUMP JUMPDEST PUSH0 PUSH2 0x1A94 DUP4 DUP6 PUSH2 0x1DC5 JUMP JUMPDEST PUSH2 0x1A9F SWAP1 PUSH1 0xA PUSH2 0x1EB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AAB DUP2 DUP7 PUSH2 0x1EDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB7 DUP2 DUP7 PUSH2 0x1EEE JUMP JUMPDEST ISZERO PUSH2 0x1ACA JUMPI PUSH2 0x1AC7 PUSH1 0x1 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1ADC DUP3 DUP3 PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x1B0B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x171F JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1A55 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B6F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B86 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1B9D PUSH1 0x40 DUP6 ADD PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A55 DUP3 PUSH2 0x1B59 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1C07 PUSH1 0x60 DUP7 ADD PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C23 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1C33 PUSH1 0x20 DUP5 ADD PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C4E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C57 DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CA5 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C87 JUMP JUMPDEST POP POP PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CD2 DUP4 PUSH2 0x1B59 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D05 JUMPI PUSH2 0x1D05 PUSH2 0x1CE0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x67B JUMPI PUSH2 0x67B PUSH2 0x1CE0 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D2F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A55 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x67B JUMPI PUSH2 0x67B PUSH2 0x1CE0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x67B JUMPI PUSH2 0x67B PUSH2 0x1CE0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH2 0x1D9E JUMPI PUSH2 0x1D9E PUSH2 0x1CE0 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1A55 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x67B JUMPI PUSH2 0x67B PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0xFB1 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x1DFD JUMPI PUSH2 0x1DFD PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1E0B JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x1DE2 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1E27 JUMPI POP PUSH1 0x1 PUSH2 0x67B JUMP JUMPDEST DUP2 PUSH2 0x1E33 JUMPI POP PUSH0 PUSH2 0x67B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1E49 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1E53 JUMPI PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1E64 JUMPI PUSH2 0x1E64 PUSH2 0x1CE0 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x67B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1E92 JUMPI POP DUP2 DUP2 EXP PUSH2 0x67B JUMP JUMPDEST PUSH2 0x1E9E PUSH0 NOT DUP5 DUP5 PUSH2 0x1DDE JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1EB1 JUMPI PUSH2 0x1EB1 PUSH2 0x1CE0 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A55 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1E19 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1EE9 JUMPI PUSH2 0x1EE9 PUSH2 0x1EC7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1EFC JUMPI PUSH2 0x1EFC PUSH2 0x1EC7 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA264697066735822122043C091AA4A94152F4445B337 0xBE TSTORE 0xE9 0xE6 0xB3 0xD6 STATICCALL MOD EXTCODESIZE 0xC9 0x24 BLOBBASEFEE RETURN 0xE6 0xDE 0x28 DUP5 SUB NOT 0xBE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "534:16945:11:-:0;;;993:11;969:35;;2130:511;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1231:7:5;:15;;2255:5:11;:25;;-1:-1:-1;;;;;2255:25:11;;;-1:-1:-1;;;;;;2255:25:11;;;;;;;;;;2291:35;;1231:15:5;2291:35:11;-1:-1:-1;;;;;;2291:35:11;;;;;;2337:42;1241:5:5;2368:10:11;2337;:42::i;:::-;-1:-1:-1;2390:34:11;667:23;2413:10;2390;:34::i;:::-;-1:-1:-1;2435:54:11;816:36;2471:17;2435:10;:54::i;:::-;-1:-1:-1;2500:42:11;735:24;2524:17;2500:10;:42::i;:::-;-1:-1:-1;;;;;;2553:34:11;;;;;;;:21;:34;;;;;:41;;-1:-1:-1;;2553:41:11;2590:4;2553:41;;;2605:12;:28;;;;;;-1:-1:-1;;;;;;2605:28:11;;;;;;;-1:-1:-1;534:16945:11;;-1:-1:-1;;534:16945:11;6179:316:0;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:4;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;14:177:12:-;93:13;;-1:-1:-1;;;;;135:31:12;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:550::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:50;735:3;724:9;720:19;690:50;:::i;:::-;680:60;;196:550;;;;;;;;:::o;:::-;534:16945:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1781": {
									"entryPoint": null,
									"id": 1781,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CROSS_CHAIN_MINTER_ROLE_1791": {
									"entryPoint": null,
									"id": 1791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1786": {
									"entryPoint": null,
									"id": 1786,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WEUSD_DECIMALS_1799": {
									"entryPoint": null,
									"id": 1799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 6866,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 6235,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_createRequest_2833": {
									"entryPoint": 5921,
									"id": 2833,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 6245,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_494": {
									"entryPoint": null,
									"id": 494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_612": {
									"entryPoint": 6575,
									"id": 612,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_583": {
									"entryPoint": 5883,
									"id": 583,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_596": {
									"entryPoint": 6927,
									"id": 596,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 6388,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_unpause_628": {
									"entryPoint": 6493,
									"id": 628,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@activeSourceRequests_1814": {
									"entryPoint": 3378,
									"id": 1814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@activeTargetRequests_1817": {
									"entryPoint": 3188,
									"id": 1817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnWeUSDCrossChain_2274": {
									"entryPoint": 1665,
									"id": 2274,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burnWeUSD_2161": {
									"entryPoint": 5304,
									"id": 2161,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@convertDecimalsCeil_2949": {
									"entryPoint": 6748,
									"id": 2949,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@convertDecimals_2884": {
									"entryPoint": 6634,
									"id": 2884,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@deleteStablecoin_2040": {
									"entryPoint": 2445,
									"id": 2040,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@feeRecipient_1811": {
									"entryPoint": null,
									"id": 1811,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gasfee_1809": {
									"entryPoint": null,
									"id": 1809,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRequestById_2376": {
									"entryPoint": null,
									"id": 2376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserSourceRequests_2579": {
									"entryPoint": 3433,
									"id": 2579,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@getUserTargetRequests_2766": {
									"entryPoint": 4613,
									"id": 2766,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@grantRole_147": {
									"entryPoint": 3146,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3393,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isRequestIdUsed_2362": {
									"entryPoint": null,
									"id": 2362,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mainContract_1776": {
									"entryPoint": null,
									"id": 1776,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintWeUSDCrossChain_2350": {
									"entryPoint": 2541,
									"id": 2350,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mintWeUSD_2104": {
									"entryPoint": 4025,
									"id": 2104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@pause_1962": {
									"entryPoint": 3328,
									"id": 1962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_571": {
									"entryPoint": null,
									"id": 571,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerStablecoin_2020": {
									"entryPoint": 5205,
									"id": 2020,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@registeredStablecoins_1821": {
									"entryPoint": null,
									"id": 1821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 3219,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@requestCount_1796": {
									"entryPoint": null,
									"id": 1796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestExists_2392": {
									"entryPoint": null,
									"id": 2392,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@requestIdToSourceActiveIndex_1834": {
									"entryPoint": null,
									"id": 1834,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestIdToTargetActiveIndex_1838": {
									"entryPoint": null,
									"id": 1838,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 5789,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setFeeRecipient_2000": {
									"entryPoint": 5825,
									"id": 2000,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setGasfee_1986": {
									"entryPoint": 5176,
									"id": 1986,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_62": {
									"entryPoint": 1611,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_652": {
									"entryPoint": null,
									"id": 652,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unpause_1972": {
									"entryPoint": 3275,
									"id": 1972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usedRequestIds_1825": {
									"entryPoint": null,
									"id": 1825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weUSD_1794": {
									"entryPoint": null,
									"id": 1794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 7028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_address": {
									"entryPoint": 7126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 7589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 7276,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMainContract_$1731__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IPicweUSD_$1751__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4cceca778d1073f173e5f394d55c5ec6532c1bca200859fbd309f36f371476c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6796245fd06a0237ef78dc4b92ce228b2aeb991d0e4ff61774e8fc1ef736486c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aeff32d03aaba9710cd0ccac9240922a41d8498df078f913fb5acb94e4444254__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cef094ec419a8d26f0cee0bf6ca74c12da636e63d15d6aaf6bbddcac6380238e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f4f7373ef83803408a4ec524ae5f24c5a331fd25e48c69056ab32bb378845beb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_RequestData_$1769_memory_ptr__to_t_struct$_RequestData_$1769_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7646,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 7865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 7621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 7568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7486,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14334:12",
										"nodeType": "YulBlock",
										"src": "0:14334:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:12",
													"nodeType": "YulBlock",
													"src": "115:76:12",
													"statements": [
														{
															"nativeSrc": "125:26:12",
															"nodeType": "YulAssignment",
															"src": "125:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:12",
																		"nodeType": "YulLiteral",
																		"src": "148:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:12"
																},
																"nativeSrc": "133:18:12",
																"nodeType": "YulFunctionCall",
																"src": "133:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:12"
																},
																"nativeSrc": "160:25:12",
																"nodeType": "YulFunctionCall",
																"src": "160:25:12"
															},
															"nativeSrc": "160:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:12",
														"nodeType": "YulTypedName",
														"src": "84:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:12",
														"nodeType": "YulTypedName",
														"src": "95:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:12",
														"nodeType": "YulTypedName",
														"src": "106:4:12",
														"type": ""
													}
												],
												"src": "14:177:12"
											},
											{
												"body": {
													"nativeSrc": "265:217:12",
													"nodeType": "YulBlock",
													"src": "265:217:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "311:16:12",
																"nodeType": "YulBlock",
																"src": "311:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:12",
																					"nodeType": "YulLiteral",
																					"src": "320:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "323:1:12",
																					"nodeType": "YulLiteral",
																					"src": "323:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "313:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:12"
																			},
																			"nativeSrc": "313:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:12"
																		},
																		"nativeSrc": "313:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "286:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "295:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "282:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:12"
																		},
																		"nativeSrc": "282:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "307:2:12",
																		"nodeType": "YulLiteral",
																		"src": "307:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "278:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:12"
																},
																"nativeSrc": "278:32:12",
																"nodeType": "YulFunctionCall",
																"src": "278:32:12"
															},
															"nativeSrc": "275:52:12",
															"nodeType": "YulIf",
															"src": "275:52:12"
														},
														{
															"nativeSrc": "336:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "349:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:12"
																},
																"nativeSrc": "349:23:12",
																"nodeType": "YulFunctionCall",
																"src": "349:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "340:5:12",
																	"nodeType": "YulTypedName",
																	"src": "340:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "436:16:12",
																"nodeType": "YulBlock",
																"src": "436:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "445:1:12",
																					"nodeType": "YulLiteral",
																					"src": "445:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "448:1:12",
																					"nodeType": "YulLiteral",
																					"src": "448:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "438:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "438:6:12"
																			},
																			"nativeSrc": "438:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "438:12:12"
																		},
																		"nativeSrc": "438:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "438:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "394:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "394:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "405:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "405:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:3:12",
																								"nodeType": "YulLiteral",
																								"src": "416:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "421:10:12",
																								"nodeType": "YulLiteral",
																								"src": "421:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "412:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:12"
																						},
																						"nativeSrc": "412:20:12",
																						"nodeType": "YulFunctionCall",
																						"src": "412:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "401:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "401:3:12"
																				},
																				"nativeSrc": "401:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "401:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "391:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "391:2:12"
																		},
																		"nativeSrc": "391:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "391:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "384:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "384:6:12"
																},
																"nativeSrc": "384:51:12",
																"nodeType": "YulFunctionCall",
																"src": "384:51:12"
															},
															"nativeSrc": "381:71:12",
															"nodeType": "YulIf",
															"src": "381:71:12"
														},
														{
															"nativeSrc": "461:15:12",
															"nodeType": "YulAssignment",
															"src": "461:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "471:5:12",
																"nodeType": "YulIdentifier",
																"src": "471:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "461:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "461:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "196:286:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "231:9:12",
														"nodeType": "YulTypedName",
														"src": "231:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "242:7:12",
														"nodeType": "YulTypedName",
														"src": "242:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "254:6:12",
														"nodeType": "YulTypedName",
														"src": "254:6:12",
														"type": ""
													}
												],
												"src": "196:286:12"
											},
											{
												"body": {
													"nativeSrc": "582:92:12",
													"nodeType": "YulBlock",
													"src": "582:92:12",
													"statements": [
														{
															"nativeSrc": "592:26:12",
															"nodeType": "YulAssignment",
															"src": "592:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "604:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:12",
																		"nodeType": "YulLiteral",
																		"src": "615:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "600:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "600:3:12"
																},
																"nativeSrc": "600:18:12",
																"nodeType": "YulFunctionCall",
																"src": "600:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "592:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "592:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "634:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "634:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "659:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "652:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "652:6:12"
																				},
																				"nativeSrc": "652:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "652:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "645:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "645:6:12"
																		},
																		"nativeSrc": "645:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "645:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "627:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "627:6:12"
																},
																"nativeSrc": "627:41:12",
																"nodeType": "YulFunctionCall",
																"src": "627:41:12"
															},
															"nativeSrc": "627:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "627:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "487:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "551:9:12",
														"nodeType": "YulTypedName",
														"src": "551:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "562:6:12",
														"nodeType": "YulTypedName",
														"src": "562:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "573:4:12",
														"nodeType": "YulTypedName",
														"src": "573:4:12",
														"type": ""
													}
												],
												"src": "487:187:12"
											},
											{
												"body": {
													"nativeSrc": "728:124:12",
													"nodeType": "YulBlock",
													"src": "728:124:12",
													"statements": [
														{
															"nativeSrc": "738:29:12",
															"nodeType": "YulAssignment",
															"src": "738:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "760:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "760:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "747:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "747:12:12"
																},
																"nativeSrc": "747:20:12",
																"nodeType": "YulFunctionCall",
																"src": "747:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "738:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "830:16:12",
																"nodeType": "YulBlock",
																"src": "830:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:12",
																					"nodeType": "YulLiteral",
																					"src": "839:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "842:1:12",
																					"nodeType": "YulLiteral",
																					"src": "842:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "832:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:12"
																			},
																			"nativeSrc": "832:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "832:12:12"
																		},
																		"nativeSrc": "832:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "832:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "789:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "789:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "815:3:12",
																										"nodeType": "YulLiteral",
																										"src": "815:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "820:1:12",
																										"nodeType": "YulLiteral",
																										"src": "820:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "811:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "811:3:12"
																								},
																								"nativeSrc": "811:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "811:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "824:1:12",
																								"nodeType": "YulLiteral",
																								"src": "824:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "807:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "807:3:12"
																						},
																						"nativeSrc": "807:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "807:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "796:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "796:3:12"
																				},
																				"nativeSrc": "796:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "796:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "786:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "786:2:12"
																		},
																		"nativeSrc": "786:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "786:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "779:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "779:6:12"
																},
																"nativeSrc": "779:50:12",
																"nodeType": "YulFunctionCall",
																"src": "779:50:12"
															},
															"nativeSrc": "776:70:12",
															"nodeType": "YulIf",
															"src": "776:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "679:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "707:6:12",
														"nodeType": "YulTypedName",
														"src": "707:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "718:5:12",
														"nodeType": "YulTypedName",
														"src": "718:5:12",
														"type": ""
													}
												],
												"src": "679:173:12"
											},
											{
												"body": {
													"nativeSrc": "961:316:12",
													"nodeType": "YulBlock",
													"src": "961:316:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1007:16:12",
																"nodeType": "YulBlock",
																"src": "1007:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1016:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1016:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1019:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1019:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1009:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:12"
																			},
																			"nativeSrc": "1009:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1009:12:12"
																		},
																		"nativeSrc": "1009:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1009:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "982:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "982:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "991:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "991:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "978:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:12"
																		},
																		"nativeSrc": "978:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "978:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1003:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1003:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "974:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:12"
																},
																"nativeSrc": "974:32:12",
																"nodeType": "YulFunctionCall",
																"src": "974:32:12"
															},
															"nativeSrc": "971:52:12",
															"nodeType": "YulIf",
															"src": "971:52:12"
														},
														{
															"nativeSrc": "1032:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1032:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1045:1:12",
																"nodeType": "YulLiteral",
																"src": "1045:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1036:5:12",
																	"nodeType": "YulTypedName",
																	"src": "1036:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1055:32:12",
															"nodeType": "YulAssignment",
															"src": "1055:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1077:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1077:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1064:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1064:12:12"
																},
																"nativeSrc": "1064:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1064:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1055:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1055:5:12"
																}
															]
														},
														{
															"nativeSrc": "1096:15:12",
															"nodeType": "YulAssignment",
															"src": "1096:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "1106:5:12",
																"nodeType": "YulIdentifier",
																"src": "1106:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1096:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1096:6:12"
																}
															]
														},
														{
															"nativeSrc": "1120:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1120:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1135:1:12",
																"nodeType": "YulLiteral",
																"src": "1135:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1124:7:12",
																	"nodeType": "YulTypedName",
																	"src": "1124:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1145:43:12",
															"nodeType": "YulAssignment",
															"src": "1145:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1173:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1173:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1184:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1184:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1169:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1169:3:12"
																		},
																		"nativeSrc": "1169:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1169:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1156:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1156:12:12"
																},
																"nativeSrc": "1156:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1156:32:12"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1145:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1145:7:12"
																}
															]
														},
														{
															"nativeSrc": "1197:17:12",
															"nodeType": "YulAssignment",
															"src": "1197:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "1207:7:12",
																"nodeType": "YulIdentifier",
																"src": "1207:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1197:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:12"
																}
															]
														},
														{
															"nativeSrc": "1223:48:12",
															"nodeType": "YulAssignment",
															"src": "1223:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1256:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1256:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1267:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1267:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1252:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1252:3:12"
																		},
																		"nativeSrc": "1252:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1252:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1233:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1233:18:12"
																},
																"nativeSrc": "1233:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1233:38:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1223:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1223:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nativeSrc": "857:420:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "911:9:12",
														"nodeType": "YulTypedName",
														"src": "911:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "922:7:12",
														"nodeType": "YulTypedName",
														"src": "922:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "934:6:12",
														"nodeType": "YulTypedName",
														"src": "934:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "942:6:12",
														"nodeType": "YulTypedName",
														"src": "942:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "950:6:12",
														"nodeType": "YulTypedName",
														"src": "950:6:12",
														"type": ""
													}
												],
												"src": "857:420:12"
											},
											{
												"body": {
													"nativeSrc": "1352:116:12",
													"nodeType": "YulBlock",
													"src": "1352:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1398:16:12",
																"nodeType": "YulBlock",
																"src": "1398:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1407:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1407:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1410:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1400:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1400:6:12"
																			},
																			"nativeSrc": "1400:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1400:12:12"
																		},
																		"nativeSrc": "1400:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1400:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1373:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1373:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1382:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1382:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1369:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1369:3:12"
																		},
																		"nativeSrc": "1369:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1369:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1394:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1394:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1365:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1365:3:12"
																},
																"nativeSrc": "1365:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1365:32:12"
															},
															"nativeSrc": "1362:52:12",
															"nodeType": "YulIf",
															"src": "1362:52:12"
														},
														{
															"nativeSrc": "1423:39:12",
															"nodeType": "YulAssignment",
															"src": "1423:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1452:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1433:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1433:18:12"
																},
																"nativeSrc": "1433:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1433:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1423:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1423:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1282:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1318:9:12",
														"nodeType": "YulTypedName",
														"src": "1318:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1329:7:12",
														"nodeType": "YulTypedName",
														"src": "1329:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1341:6:12",
														"nodeType": "YulTypedName",
														"src": "1341:6:12",
														"type": ""
													}
												],
												"src": "1282:186:12"
											},
											{
												"body": {
													"nativeSrc": "1543:156:12",
													"nodeType": "YulBlock",
													"src": "1543:156:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1589:16:12",
																"nodeType": "YulBlock",
																"src": "1589:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1598:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1598:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1601:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1601:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1591:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1591:6:12"
																			},
																			"nativeSrc": "1591:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1591:12:12"
																		},
																		"nativeSrc": "1591:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1591:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1564:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1564:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1573:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1573:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1560:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1560:3:12"
																		},
																		"nativeSrc": "1560:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1560:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1556:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1556:3:12"
																},
																"nativeSrc": "1556:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1556:32:12"
															},
															"nativeSrc": "1553:52:12",
															"nodeType": "YulIf",
															"src": "1553:52:12"
														},
														{
															"nativeSrc": "1614:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1614:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1627:1:12",
																"nodeType": "YulLiteral",
																"src": "1627:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1618:5:12",
																	"nodeType": "YulTypedName",
																	"src": "1618:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1637:32:12",
															"nodeType": "YulAssignment",
															"src": "1637:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1659:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1659:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1646:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1646:12:12"
																},
																"nativeSrc": "1646:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1646:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1637:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1637:5:12"
																}
															]
														},
														{
															"nativeSrc": "1678:15:12",
															"nodeType": "YulAssignment",
															"src": "1678:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "1688:5:12",
																"nodeType": "YulIdentifier",
																"src": "1688:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1678:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1473:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1509:9:12",
														"nodeType": "YulTypedName",
														"src": "1509:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1520:7:12",
														"nodeType": "YulTypedName",
														"src": "1520:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1532:6:12",
														"nodeType": "YulTypedName",
														"src": "1532:6:12",
														"type": ""
													}
												],
												"src": "1473:226:12"
											},
											{
												"body": {
													"nativeSrc": "1825:420:12",
													"nodeType": "YulBlock",
													"src": "1825:420:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1872:16:12",
																"nodeType": "YulBlock",
																"src": "1872:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1881:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1881:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1874:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:12"
																			},
																			"nativeSrc": "1874:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1874:12:12"
																		},
																		"nativeSrc": "1874:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1846:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1846:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1855:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1855:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1842:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1842:3:12"
																		},
																		"nativeSrc": "1842:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1842:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:3:12",
																		"nodeType": "YulLiteral",
																		"src": "1867:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1838:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1838:3:12"
																},
																"nativeSrc": "1838:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1838:33:12"
															},
															"nativeSrc": "1835:53:12",
															"nodeType": "YulIf",
															"src": "1835:53:12"
														},
														{
															"nativeSrc": "1897:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1897:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1910:1:12",
																"nodeType": "YulLiteral",
																"src": "1910:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1901:5:12",
																	"nodeType": "YulTypedName",
																	"src": "1901:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1920:32:12",
															"nodeType": "YulAssignment",
															"src": "1920:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1942:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1942:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1929:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1929:12:12"
																},
																"nativeSrc": "1929:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1929:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1920:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1920:5:12"
																}
															]
														},
														{
															"nativeSrc": "1961:15:12",
															"nodeType": "YulAssignment",
															"src": "1961:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "1971:5:12",
																"nodeType": "YulIdentifier",
																"src": "1971:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1961:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:12"
																}
															]
														},
														{
															"nativeSrc": "1985:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1985:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2000:1:12",
																"nodeType": "YulLiteral",
																"src": "2000:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1989:7:12",
																	"nodeType": "YulTypedName",
																	"src": "1989:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2010:43:12",
															"nodeType": "YulAssignment",
															"src": "2010:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2038:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2038:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2049:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2049:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2034:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2034:3:12"
																		},
																		"nativeSrc": "2034:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2034:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2021:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2021:12:12"
																},
																"nativeSrc": "2021:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2021:32:12"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2010:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2010:7:12"
																}
															]
														},
														{
															"nativeSrc": "2062:17:12",
															"nodeType": "YulAssignment",
															"src": "2062:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "2072:7:12",
																"nodeType": "YulIdentifier",
																"src": "2072:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2062:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:12"
																}
															]
														},
														{
															"nativeSrc": "2088:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2088:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2103:1:12",
																"nodeType": "YulLiteral",
																"src": "2103:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2092:7:12",
																	"nodeType": "YulTypedName",
																	"src": "2092:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2113:43:12",
															"nodeType": "YulAssignment",
															"src": "2113:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2141:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2141:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2152:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2152:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2137:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2137:3:12"
																		},
																		"nativeSrc": "2137:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2137:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2124:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2124:12:12"
																},
																"nativeSrc": "2124:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2124:32:12"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2113:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2113:7:12"
																}
															]
														},
														{
															"nativeSrc": "2165:17:12",
															"nodeType": "YulAssignment",
															"src": "2165:17:12",
															"value": {
																"name": "value_2",
																"nativeSrc": "2175:7:12",
																"nodeType": "YulIdentifier",
																"src": "2175:7:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2165:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:12"
																}
															]
														},
														{
															"nativeSrc": "2191:48:12",
															"nodeType": "YulAssignment",
															"src": "2191:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2224:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2224:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2235:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2235:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:12"
																		},
																		"nativeSrc": "2220:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2201:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2201:18:12"
																},
																"nativeSrc": "2201:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2201:38:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2191:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2191:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_address",
												"nativeSrc": "1704:541:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1767:9:12",
														"nodeType": "YulTypedName",
														"src": "1767:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1778:7:12",
														"nodeType": "YulTypedName",
														"src": "1778:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1790:6:12",
														"nodeType": "YulTypedName",
														"src": "1790:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1798:6:12",
														"nodeType": "YulTypedName",
														"src": "1798:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1806:6:12",
														"nodeType": "YulTypedName",
														"src": "1806:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1814:6:12",
														"nodeType": "YulTypedName",
														"src": "1814:6:12",
														"type": ""
													}
												],
												"src": "1704:541:12"
											},
											{
												"body": {
													"nativeSrc": "2320:156:12",
													"nodeType": "YulBlock",
													"src": "2320:156:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:12",
																"nodeType": "YulBlock",
																"src": "2366:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:12"
																			},
																			"nativeSrc": "2368:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:12"
																		},
																		"nativeSrc": "2368:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2341:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2341:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2350:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2350:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:12"
																		},
																		"nativeSrc": "2337:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2362:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2362:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2333:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2333:3:12"
																},
																"nativeSrc": "2333:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2333:32:12"
															},
															"nativeSrc": "2330:52:12",
															"nodeType": "YulIf",
															"src": "2330:52:12"
														},
														{
															"nativeSrc": "2391:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2391:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2404:1:12",
																"nodeType": "YulLiteral",
																"src": "2404:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2395:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2395:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2414:32:12",
															"nodeType": "YulAssignment",
															"src": "2414:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2436:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2436:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2423:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2423:12:12"
																},
																"nativeSrc": "2423:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2423:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2414:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2414:5:12"
																}
															]
														},
														{
															"nativeSrc": "2455:15:12",
															"nodeType": "YulAssignment",
															"src": "2455:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "2465:5:12",
																"nodeType": "YulIdentifier",
																"src": "2465:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2455:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2455:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2250:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2286:9:12",
														"nodeType": "YulTypedName",
														"src": "2286:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2297:7:12",
														"nodeType": "YulTypedName",
														"src": "2297:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2309:6:12",
														"nodeType": "YulTypedName",
														"src": "2309:6:12",
														"type": ""
													}
												],
												"src": "2250:226:12"
											},
											{
												"body": {
													"nativeSrc": "2582:76:12",
													"nodeType": "YulBlock",
													"src": "2582:76:12",
													"statements": [
														{
															"nativeSrc": "2592:26:12",
															"nodeType": "YulAssignment",
															"src": "2592:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2604:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2604:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2615:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2615:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2600:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:12"
																},
																"nativeSrc": "2600:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2600:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2592:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2592:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2634:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2634:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2645:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2645:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2627:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2627:6:12"
																},
																"nativeSrc": "2627:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2627:25:12"
															},
															"nativeSrc": "2627:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "2627:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2481:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2551:9:12",
														"nodeType": "YulTypedName",
														"src": "2551:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2562:6:12",
														"nodeType": "YulTypedName",
														"src": "2562:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2573:4:12",
														"nodeType": "YulTypedName",
														"src": "2573:4:12",
														"type": ""
													}
												],
												"src": "2481:177:12"
											},
											{
												"body": {
													"nativeSrc": "2822:315:12",
													"nodeType": "YulBlock",
													"src": "2822:315:12",
													"statements": [
														{
															"nativeSrc": "2832:27:12",
															"nodeType": "YulAssignment",
															"src": "2832:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2844:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2844:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2855:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2855:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2840:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2840:3:12"
																},
																"nativeSrc": "2840:19:12",
																"nodeType": "YulFunctionCall",
																"src": "2840:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2832:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2832:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2875:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2875:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2892:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2892:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2886:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2886:5:12"
																		},
																		"nativeSrc": "2886:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2886:13:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2868:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2868:6:12"
																},
																"nativeSrc": "2868:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2868:32:12"
															},
															"nativeSrc": "2868:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "2868:32:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2920:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2920:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2931:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2931:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2916:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2916:3:12"
																		},
																		"nativeSrc": "2916:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2916:20:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "2952:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "2952:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2960:4:12",
																								"nodeType": "YulLiteral",
																								"src": "2960:4:12",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2948:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2948:3:12"
																						},
																						"nativeSrc": "2948:17:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2948:17:12"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "2942:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2942:5:12"
																				},
																				"nativeSrc": "2942:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2942:24:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2976:3:12",
																								"nodeType": "YulLiteral",
																								"src": "2976:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2981:1:12",
																								"nodeType": "YulLiteral",
																								"src": "2981:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2972:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2972:3:12"
																						},
																						"nativeSrc": "2972:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2972:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2985:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2985:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2968:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2968:3:12"
																				},
																				"nativeSrc": "2968:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2968:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2938:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2938:3:12"
																		},
																		"nativeSrc": "2938:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2938:50:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2909:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2909:6:12"
																},
																"nativeSrc": "2909:80:12",
																"nodeType": "YulFunctionCall",
																"src": "2909:80:12"
															},
															"nativeSrc": "2909:80:12",
															"nodeType": "YulExpressionStatement",
															"src": "2909:80:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3009:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3009:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3020:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3020:4:12",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3005:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:12"
																		},
																		"nativeSrc": "3005:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3005:20:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "3037:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3037:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3045:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3045:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3033:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3033:3:12"
																				},
																				"nativeSrc": "3033:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3033:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3027:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3027:5:12"
																		},
																		"nativeSrc": "3027:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3027:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2998:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2998:6:12"
																},
																"nativeSrc": "2998:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2998:54:12"
															},
															"nativeSrc": "2998:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "2998:54:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3072:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3072:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3083:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3083:4:12",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3068:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3068:3:12"
																		},
																		"nativeSrc": "3068:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3068:20:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value0",
																										"nativeSrc": "3114:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3114:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3122:4:12",
																										"nodeType": "YulLiteral",
																										"src": "3122:4:12",
																										"type": "",
																										"value": "0x60"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3110:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3110:3:12"
																								},
																								"nativeSrc": "3110:17:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3110:17:12"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "3104:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "3104:5:12"
																						},
																						"nativeSrc": "3104:24:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3104:24:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3097:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3097:6:12"
																				},
																				"nativeSrc": "3097:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3097:32:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3090:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3090:6:12"
																		},
																		"nativeSrc": "3090:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3090:40:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3061:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3061:6:12"
																},
																"nativeSrc": "3061:70:12",
																"nodeType": "YulFunctionCall",
																"src": "3061:70:12"
															},
															"nativeSrc": "3061:70:12",
															"nodeType": "YulExpressionStatement",
															"src": "3061:70:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_RequestData_$1769_memory_ptr__to_t_struct$_RequestData_$1769_memory_ptr__fromStack_reversed",
												"nativeSrc": "2663:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2791:9:12",
														"nodeType": "YulTypedName",
														"src": "2791:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2802:6:12",
														"nodeType": "YulTypedName",
														"src": "2802:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2813:4:12",
														"nodeType": "YulTypedName",
														"src": "2813:4:12",
														"type": ""
													}
												],
												"src": "2663:474:12"
											},
											{
												"body": {
													"nativeSrc": "3229:213:12",
													"nodeType": "YulBlock",
													"src": "3229:213:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3275:16:12",
																"nodeType": "YulBlock",
																"src": "3275:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3284:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3284:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3287:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3287:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3277:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:12"
																			},
																			"nativeSrc": "3277:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3277:12:12"
																		},
																		"nativeSrc": "3277:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3277:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3250:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3250:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3259:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3246:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:12"
																		},
																		"nativeSrc": "3246:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3246:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3271:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3271:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3242:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:12"
																},
																"nativeSrc": "3242:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3242:32:12"
															},
															"nativeSrc": "3239:52:12",
															"nodeType": "YulIf",
															"src": "3239:52:12"
														},
														{
															"nativeSrc": "3300:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3300:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3313:1:12",
																"nodeType": "YulLiteral",
																"src": "3313:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3304:5:12",
																	"nodeType": "YulTypedName",
																	"src": "3304:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3323:32:12",
															"nodeType": "YulAssignment",
															"src": "3323:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3345:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3345:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3332:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3332:12:12"
																},
																"nativeSrc": "3332:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3332:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3323:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3323:5:12"
																}
															]
														},
														{
															"nativeSrc": "3364:15:12",
															"nodeType": "YulAssignment",
															"src": "3364:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3374:5:12",
																"nodeType": "YulIdentifier",
																"src": "3374:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3364:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:12"
																}
															]
														},
														{
															"nativeSrc": "3388:48:12",
															"nodeType": "YulAssignment",
															"src": "3388:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3432:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:12"
																		},
																		"nativeSrc": "3417:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3398:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3398:18:12"
																},
																"nativeSrc": "3398:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3398:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3388:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3388:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3142:300:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:12",
														"nodeType": "YulTypedName",
														"src": "3187:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3198:7:12",
														"nodeType": "YulTypedName",
														"src": "3198:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3210:6:12",
														"nodeType": "YulTypedName",
														"src": "3210:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3218:6:12",
														"nodeType": "YulTypedName",
														"src": "3218:6:12",
														"type": ""
													}
												],
												"src": "3142:300:12"
											},
											{
												"body": {
													"nativeSrc": "3548:102:12",
													"nodeType": "YulBlock",
													"src": "3548:102:12",
													"statements": [
														{
															"nativeSrc": "3558:26:12",
															"nodeType": "YulAssignment",
															"src": "3558:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3570:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3570:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3581:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3581:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3566:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3566:3:12"
																},
																"nativeSrc": "3566:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3566:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3558:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3558:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3600:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3600:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3615:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3615:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3631:3:12",
																								"nodeType": "YulLiteral",
																								"src": "3631:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3636:1:12",
																								"nodeType": "YulLiteral",
																								"src": "3636:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3627:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3627:3:12"
																						},
																						"nativeSrc": "3627:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3627:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3640:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3640:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3623:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3623:3:12"
																				},
																				"nativeSrc": "3623:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3623:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3611:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3611:3:12"
																		},
																		"nativeSrc": "3611:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3611:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3593:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3593:6:12"
																},
																"nativeSrc": "3593:51:12",
																"nodeType": "YulFunctionCall",
																"src": "3593:51:12"
															},
															"nativeSrc": "3593:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "3593:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3447:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3517:9:12",
														"nodeType": "YulTypedName",
														"src": "3517:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3528:6:12",
														"nodeType": "YulTypedName",
														"src": "3528:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3539:4:12",
														"nodeType": "YulTypedName",
														"src": "3539:4:12",
														"type": ""
													}
												],
												"src": "3447:203:12"
											},
											{
												"body": {
													"nativeSrc": "3759:316:12",
													"nodeType": "YulBlock",
													"src": "3759:316:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3805:16:12",
																"nodeType": "YulBlock",
																"src": "3805:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3814:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3814:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3817:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3817:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3807:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3807:6:12"
																			},
																			"nativeSrc": "3807:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3807:12:12"
																		},
																		"nativeSrc": "3807:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3807:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3780:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3780:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3789:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3789:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3776:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3776:3:12"
																		},
																		"nativeSrc": "3776:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3801:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3772:3:12"
																},
																"nativeSrc": "3772:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3772:32:12"
															},
															"nativeSrc": "3769:52:12",
															"nodeType": "YulIf",
															"src": "3769:52:12"
														},
														{
															"nativeSrc": "3830:39:12",
															"nodeType": "YulAssignment",
															"src": "3830:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3859:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3859:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3840:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3840:18:12"
																},
																"nativeSrc": "3840:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3840:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3830:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3830:6:12"
																}
															]
														},
														{
															"nativeSrc": "3878:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3878:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3891:1:12",
																"nodeType": "YulLiteral",
																"src": "3891:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3882:5:12",
																	"nodeType": "YulTypedName",
																	"src": "3882:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3901:41:12",
															"nodeType": "YulAssignment",
															"src": "3901:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3927:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3927:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3938:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3938:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3923:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3923:3:12"
																		},
																		"nativeSrc": "3923:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3923:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3910:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3910:12:12"
																},
																"nativeSrc": "3910:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3910:32:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3901:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3901:5:12"
																}
															]
														},
														{
															"nativeSrc": "3951:15:12",
															"nodeType": "YulAssignment",
															"src": "3951:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3961:5:12",
																"nodeType": "YulIdentifier",
																"src": "3961:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3951:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:12"
																}
															]
														},
														{
															"nativeSrc": "3975:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3975:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3990:1:12",
																"nodeType": "YulLiteral",
																"src": "3990:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3979:7:12",
																	"nodeType": "YulTypedName",
																	"src": "3979:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4000:43:12",
															"nodeType": "YulAssignment",
															"src": "4000:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4028:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4028:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4039:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4039:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4024:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4024:3:12"
																		},
																		"nativeSrc": "4024:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4024:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4011:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4011:12:12"
																},
																"nativeSrc": "4011:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4011:32:12"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4000:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4000:7:12"
																}
															]
														},
														{
															"nativeSrc": "4052:17:12",
															"nodeType": "YulAssignment",
															"src": "4052:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "4062:7:12",
																"nodeType": "YulIdentifier",
																"src": "4062:7:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4052:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4052:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "3655:420:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3709:9:12",
														"nodeType": "YulTypedName",
														"src": "3709:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3720:7:12",
														"nodeType": "YulTypedName",
														"src": "3720:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3732:6:12",
														"nodeType": "YulTypedName",
														"src": "3732:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3740:6:12",
														"nodeType": "YulTypedName",
														"src": "3740:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3748:6:12",
														"nodeType": "YulTypedName",
														"src": "3748:6:12",
														"type": ""
													}
												],
												"src": "3655:420:12"
											},
											{
												"body": {
													"nativeSrc": "4259:511:12",
													"nodeType": "YulBlock",
													"src": "4259:511:12",
													"statements": [
														{
															"nativeSrc": "4269:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4269:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4287:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4287:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4298:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4298:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4283:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:12"
																},
																"nativeSrc": "4283:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4283:18:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "4273:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4273:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4317:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4317:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4328:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4328:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4310:6:12"
																},
																"nativeSrc": "4310:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4310:21:12"
															},
															"nativeSrc": "4310:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "4310:21:12"
														},
														{
															"nativeSrc": "4340:17:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4340:17:12",
															"value": {
																"name": "tail_1",
																"nativeSrc": "4351:6:12",
																"nodeType": "YulIdentifier",
																"src": "4351:6:12"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "4344:3:12",
																	"nodeType": "YulTypedName",
																	"src": "4344:3:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4366:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4366:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4386:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4386:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4380:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4380:5:12"
																},
																"nativeSrc": "4380:13:12",
																"nodeType": "YulFunctionCall",
																"src": "4380:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4370:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4370:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "4409:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4409:6:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4417:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4417:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4402:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:12"
																},
																"nativeSrc": "4402:22:12",
																"nodeType": "YulFunctionCall",
																"src": "4402:22:12"
															},
															"nativeSrc": "4402:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "4402:22:12"
														},
														{
															"nativeSrc": "4433:25:12",
															"nodeType": "YulAssignment",
															"src": "4433:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4444:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4444:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4455:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4455:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4440:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4440:3:12"
																},
																"nativeSrc": "4440:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4440:18:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4433:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:12"
																}
															]
														},
														{
															"nativeSrc": "4467:31:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4467:31:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4485:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4485:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4493:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4493:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4481:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4481:3:12"
																},
																"nativeSrc": "4481:17:12",
																"nodeType": "YulFunctionCall",
																"src": "4481:17:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4471:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4471:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4507:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4507:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4516:1:12",
																"nodeType": "YulLiteral",
																"src": "4516:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4511:1:12",
																	"nodeType": "YulTypedName",
																	"src": "4511:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4575:124:12",
																"nodeType": "YulBlock",
																"src": "4575:124:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4596:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "4607:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4607:6:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4601:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4601:5:12"
																					},
																					"nativeSrc": "4601:13:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4601:13:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4589:6:12"
																			},
																			"nativeSrc": "4589:26:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4589:26:12"
																		},
																		"nativeSrc": "4589:26:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:26:12"
																	},
																	{
																		"nativeSrc": "4628:21:12",
																		"nodeType": "YulAssignment",
																		"src": "4628:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4639:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4639:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4644:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4644:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4635:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4635:3:12"
																			},
																			"nativeSrc": "4635:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4635:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4628:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4628:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4662:27:12",
																		"nodeType": "YulAssignment",
																		"src": "4662:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4676:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4676:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4684:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4684:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4672:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4672:3:12"
																			},
																			"nativeSrc": "4672:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4672:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4662:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4662:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4537:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4537:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4540:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4540:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4534:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4534:2:12"
																},
																"nativeSrc": "4534:13:12",
																"nodeType": "YulFunctionCall",
																"src": "4534:13:12"
															},
															"nativeSrc": "4526:173:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4548:18:12",
																"nodeType": "YulBlock",
																"src": "4548:18:12",
																"statements": [
																	{
																		"nativeSrc": "4550:14:12",
																		"nodeType": "YulAssignment",
																		"src": "4550:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4559:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "4559:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4562:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4562:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4555:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4555:3:12"
																			},
																			"nativeSrc": "4555:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4555:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4550:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4550:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4530:3:12",
																"nodeType": "YulBlock",
																"src": "4530:3:12",
																"statements": []
															},
															"src": "4526:173:12"
														},
														{
															"nativeSrc": "4708:11:12",
															"nodeType": "YulAssignment",
															"src": "4708:11:12",
															"value": {
																"name": "pos",
																"nativeSrc": "4716:3:12",
																"nodeType": "YulIdentifier",
																"src": "4716:3:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4708:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4739:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4739:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4750:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4750:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4735:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4735:3:12"
																		},
																		"nativeSrc": "4735:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4735:20:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4757:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4757:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4728:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4728:6:12"
																},
																"nativeSrc": "4728:36:12",
																"nodeType": "YulFunctionCall",
																"src": "4728:36:12"
															},
															"nativeSrc": "4728:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "4728:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "4080:690:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4220:9:12",
														"nodeType": "YulTypedName",
														"src": "4220:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4231:6:12",
														"nodeType": "YulTypedName",
														"src": "4231:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4239:6:12",
														"nodeType": "YulTypedName",
														"src": "4239:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4250:4:12",
														"nodeType": "YulTypedName",
														"src": "4250:4:12",
														"type": ""
													}
												],
												"src": "4080:690:12"
											},
											{
												"body": {
													"nativeSrc": "4862:213:12",
													"nodeType": "YulBlock",
													"src": "4862:213:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4908:16:12",
																"nodeType": "YulBlock",
																"src": "4908:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4917:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4917:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4920:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4920:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4910:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4910:6:12"
																			},
																			"nativeSrc": "4910:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4910:12:12"
																		},
																		"nativeSrc": "4910:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4910:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4883:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4883:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4892:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4892:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4879:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:12"
																		},
																		"nativeSrc": "4879:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4904:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4904:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4875:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4875:3:12"
																},
																"nativeSrc": "4875:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4875:32:12"
															},
															"nativeSrc": "4872:52:12",
															"nodeType": "YulIf",
															"src": "4872:52:12"
														},
														{
															"nativeSrc": "4933:39:12",
															"nodeType": "YulAssignment",
															"src": "4933:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4962:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4962:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4943:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4943:18:12"
																},
																"nativeSrc": "4943:29:12",
																"nodeType": "YulFunctionCall",
																"src": "4943:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4933:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4933:6:12"
																}
															]
														},
														{
															"nativeSrc": "4981:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4981:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4994:1:12",
																"nodeType": "YulLiteral",
																"src": "4994:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4985:5:12",
																	"nodeType": "YulTypedName",
																	"src": "4985:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5004:41:12",
															"nodeType": "YulAssignment",
															"src": "5004:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5030:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5030:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5041:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5041:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5026:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5026:3:12"
																		},
																		"nativeSrc": "5026:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5026:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5013:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5013:12:12"
																},
																"nativeSrc": "5013:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5013:32:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5004:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5004:5:12"
																}
															]
														},
														{
															"nativeSrc": "5054:15:12",
															"nodeType": "YulAssignment",
															"src": "5054:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "5064:5:12",
																"nodeType": "YulIdentifier",
																"src": "5064:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5054:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5054:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4775:300:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4820:9:12",
														"nodeType": "YulTypedName",
														"src": "4820:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4831:7:12",
														"nodeType": "YulTypedName",
														"src": "4831:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4843:6:12",
														"nodeType": "YulTypedName",
														"src": "4843:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4851:6:12",
														"nodeType": "YulTypedName",
														"src": "4851:6:12",
														"type": ""
													}
												],
												"src": "4775:300:12"
											},
											{
												"body": {
													"nativeSrc": "5199:102:12",
													"nodeType": "YulBlock",
													"src": "5199:102:12",
													"statements": [
														{
															"nativeSrc": "5209:26:12",
															"nodeType": "YulAssignment",
															"src": "5209:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5221:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5221:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5232:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5232:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5217:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5217:3:12"
																},
																"nativeSrc": "5217:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5217:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5209:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5209:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5251:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5251:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5266:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5266:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5282:3:12",
																								"nodeType": "YulLiteral",
																								"src": "5282:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5287:1:12",
																								"nodeType": "YulLiteral",
																								"src": "5287:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5278:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5278:3:12"
																						},
																						"nativeSrc": "5278:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5278:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5291:1:12",
																						"nodeType": "YulLiteral",
																						"src": "5291:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5274:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5274:3:12"
																				},
																				"nativeSrc": "5274:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5274:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5262:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5262:3:12"
																		},
																		"nativeSrc": "5262:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5262:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5244:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5244:6:12"
																},
																"nativeSrc": "5244:51:12",
																"nodeType": "YulFunctionCall",
																"src": "5244:51:12"
															},
															"nativeSrc": "5244:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "5244:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPicweUSD_$1751__to_t_address__fromStack_reversed",
												"nativeSrc": "5080:221:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5168:9:12",
														"nodeType": "YulTypedName",
														"src": "5168:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5179:6:12",
														"nodeType": "YulTypedName",
														"src": "5179:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5190:4:12",
														"nodeType": "YulTypedName",
														"src": "5190:4:12",
														"type": ""
													}
												],
												"src": "5080:221:12"
											},
											{
												"body": {
													"nativeSrc": "5429:102:12",
													"nodeType": "YulBlock",
													"src": "5429:102:12",
													"statements": [
														{
															"nativeSrc": "5439:26:12",
															"nodeType": "YulAssignment",
															"src": "5439:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5451:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5451:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5462:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5462:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5447:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5447:3:12"
																},
																"nativeSrc": "5447:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5447:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5439:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5439:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5481:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5481:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5496:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5496:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5512:3:12",
																								"nodeType": "YulLiteral",
																								"src": "5512:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5517:1:12",
																								"nodeType": "YulLiteral",
																								"src": "5517:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5508:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5508:3:12"
																						},
																						"nativeSrc": "5508:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5508:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5521:1:12",
																						"nodeType": "YulLiteral",
																						"src": "5521:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5504:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5504:3:12"
																				},
																				"nativeSrc": "5504:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5504:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5492:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:12"
																		},
																		"nativeSrc": "5492:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5474:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5474:6:12"
																},
																"nativeSrc": "5474:51:12",
																"nodeType": "YulFunctionCall",
																"src": "5474:51:12"
															},
															"nativeSrc": "5474:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "5474:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMainContract_$1731__to_t_address__fromStack_reversed",
												"nativeSrc": "5306:225:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5398:9:12",
														"nodeType": "YulTypedName",
														"src": "5398:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5409:6:12",
														"nodeType": "YulTypedName",
														"src": "5409:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5420:4:12",
														"nodeType": "YulTypedName",
														"src": "5420:4:12",
														"type": ""
													}
												],
												"src": "5306:225:12"
											},
											{
												"body": {
													"nativeSrc": "5633:87:12",
													"nodeType": "YulBlock",
													"src": "5633:87:12",
													"statements": [
														{
															"nativeSrc": "5643:26:12",
															"nodeType": "YulAssignment",
															"src": "5643:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5655:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5655:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5666:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5666:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5651:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5651:3:12"
																},
																"nativeSrc": "5651:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5651:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5643:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5643:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5685:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5685:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5700:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5708:4:12",
																				"nodeType": "YulLiteral",
																				"src": "5708:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5696:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5696:3:12"
																		},
																		"nativeSrc": "5696:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5696:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5678:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5678:6:12"
																},
																"nativeSrc": "5678:36:12",
																"nodeType": "YulFunctionCall",
																"src": "5678:36:12"
															},
															"nativeSrc": "5678:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "5678:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5536:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5602:9:12",
														"nodeType": "YulTypedName",
														"src": "5602:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5613:6:12",
														"nodeType": "YulTypedName",
														"src": "5613:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5624:4:12",
														"nodeType": "YulTypedName",
														"src": "5624:4:12",
														"type": ""
													}
												],
												"src": "5536:184:12"
											},
											{
												"body": {
													"nativeSrc": "5899:238:12",
													"nodeType": "YulBlock",
													"src": "5899:238:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5916:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5916:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5927:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5927:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5909:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5909:6:12"
																},
																"nativeSrc": "5909:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5909:21:12"
															},
															"nativeSrc": "5909:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5909:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5950:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5950:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5961:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5961:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5946:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5946:3:12"
																		},
																		"nativeSrc": "5946:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5946:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5966:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5966:2:12",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5939:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5939:6:12"
																},
																"nativeSrc": "5939:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5939:30:12"
															},
															"nativeSrc": "5939:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5939:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5989:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5989:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6000:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6000:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5985:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5985:3:12"
																		},
																		"nativeSrc": "5985:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5985:18:12"
																	},
																	{
																		"hexValue": "54617267657420636861696e206d75737420626520646966666572656e742066",
																		"kind": "string",
																		"nativeSrc": "6005:34:12",
																		"nodeType": "YulLiteral",
																		"src": "6005:34:12",
																		"type": "",
																		"value": "Target chain must be different f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5978:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5978:6:12"
																},
																"nativeSrc": "5978:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5978:62:12"
															},
															"nativeSrc": "5978:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5978:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6060:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6060:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6071:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6071:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6056:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6056:3:12"
																		},
																		"nativeSrc": "6056:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6056:18:12"
																	},
																	{
																		"hexValue": "726f6d20736f7572636520636861696e",
																		"kind": "string",
																		"nativeSrc": "6076:18:12",
																		"nodeType": "YulLiteral",
																		"src": "6076:18:12",
																		"type": "",
																		"value": "rom source chain"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6049:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6049:6:12"
																},
																"nativeSrc": "6049:46:12",
																"nodeType": "YulFunctionCall",
																"src": "6049:46:12"
															},
															"nativeSrc": "6049:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "6049:46:12"
														},
														{
															"nativeSrc": "6104:27:12",
															"nodeType": "YulAssignment",
															"src": "6104:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6116:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6116:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6127:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6127:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6112:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6112:3:12"
																},
																"nativeSrc": "6112:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6112:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6104:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6104:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cef094ec419a8d26f0cee0bf6ca74c12da636e63d15d6aaf6bbddcac6380238e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5725:412:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5876:9:12",
														"nodeType": "YulTypedName",
														"src": "5876:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5890:4:12",
														"nodeType": "YulTypedName",
														"src": "5890:4:12",
														"type": ""
													}
												],
												"src": "5725:412:12"
											},
											{
												"body": {
													"nativeSrc": "6316:224:12",
													"nodeType": "YulBlock",
													"src": "6316:224:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6333:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6333:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6344:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6344:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6326:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6326:6:12"
																},
																"nativeSrc": "6326:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6326:21:12"
															},
															"nativeSrc": "6326:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6326:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6367:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6367:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6378:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6378:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6363:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6363:3:12"
																		},
																		"nativeSrc": "6363:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6363:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6383:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6383:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6356:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6356:6:12"
																},
																"nativeSrc": "6356:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6356:30:12"
															},
															"nativeSrc": "6356:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6356:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6406:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6406:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6417:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6417:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6402:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6402:3:12"
																		},
																		"nativeSrc": "6402:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6402:18:12"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2067617366",
																		"kind": "string",
																		"nativeSrc": "6422:34:12",
																		"nodeType": "YulLiteral",
																		"src": "6422:34:12",
																		"type": "",
																		"value": "Amount must be greater than gasf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6395:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6395:6:12"
																},
																"nativeSrc": "6395:62:12",
																"nodeType": "YulFunctionCall",
																"src": "6395:62:12"
															},
															"nativeSrc": "6395:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "6395:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6477:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6477:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6488:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6488:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6473:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6473:3:12"
																		},
																		"nativeSrc": "6473:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6473:18:12"
																	},
																	{
																		"hexValue": "6565",
																		"kind": "string",
																		"nativeSrc": "6493:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6493:4:12",
																		"type": "",
																		"value": "ee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6466:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6466:6:12"
																},
																"nativeSrc": "6466:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6466:32:12"
															},
															"nativeSrc": "6466:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "6466:32:12"
														},
														{
															"nativeSrc": "6507:27:12",
															"nodeType": "YulAssignment",
															"src": "6507:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6519:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6519:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6530:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6530:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6515:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6515:3:12"
																},
																"nativeSrc": "6515:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6515:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6507:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6507:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aeff32d03aaba9710cd0ccac9240922a41d8498df078f913fb5acb94e4444254__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6142:398:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:12",
														"nodeType": "YulTypedName",
														"src": "6293:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6307:4:12",
														"nodeType": "YulTypedName",
														"src": "6307:4:12",
														"type": ""
													}
												],
												"src": "6142:398:12"
											},
											{
												"body": {
													"nativeSrc": "6719:177:12",
													"nodeType": "YulBlock",
													"src": "6719:177:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6736:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6736:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6747:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6747:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6729:6:12"
																},
																"nativeSrc": "6729:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6729:21:12"
															},
															"nativeSrc": "6729:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6729:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6770:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6770:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6781:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6781:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6766:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:12"
																		},
																		"nativeSrc": "6766:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6766:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6786:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6786:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:12"
																},
																"nativeSrc": "6759:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6759:30:12"
															},
															"nativeSrc": "6759:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6759:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6809:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6809:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6820:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6820:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6805:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6805:3:12"
																		},
																		"nativeSrc": "6805:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6805:18:12"
																	},
																	{
																		"hexValue": "496e76616c69642074617267657420757365722061646472657373",
																		"kind": "string",
																		"nativeSrc": "6825:29:12",
																		"nodeType": "YulLiteral",
																		"src": "6825:29:12",
																		"type": "",
																		"value": "Invalid target user address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6798:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:12"
																},
																"nativeSrc": "6798:57:12",
																"nodeType": "YulFunctionCall",
																"src": "6798:57:12"
															},
															"nativeSrc": "6798:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "6798:57:12"
														},
														{
															"nativeSrc": "6864:26:12",
															"nodeType": "YulAssignment",
															"src": "6864:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6876:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6876:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6887:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6887:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6872:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6872:3:12"
																},
																"nativeSrc": "6872:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6872:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6864:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6864:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6545:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6696:9:12",
														"nodeType": "YulTypedName",
														"src": "6696:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6710:4:12",
														"nodeType": "YulTypedName",
														"src": "6710:4:12",
														"type": ""
													}
												],
												"src": "6545:351:12"
											},
											{
												"body": {
													"nativeSrc": "6933:95:12",
													"nodeType": "YulBlock",
													"src": "6933:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6950:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6950:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6957:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6957:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6962:10:12",
																				"nodeType": "YulLiteral",
																				"src": "6962:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6953:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6953:3:12"
																		},
																		"nativeSrc": "6953:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6953:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6943:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6943:6:12"
																},
																"nativeSrc": "6943:31:12",
																"nodeType": "YulFunctionCall",
																"src": "6943:31:12"
															},
															"nativeSrc": "6943:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "6943:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6990:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6990:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6993:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6993:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6983:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:12"
																},
																"nativeSrc": "6983:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6983:15:12"
															},
															"nativeSrc": "6983:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6983:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7014:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7014:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7017:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7017:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7007:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7007:6:12"
																},
																"nativeSrc": "7007:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7007:15:12"
															},
															"nativeSrc": "7007:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7007:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6901:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6901:127:12"
											},
											{
												"body": {
													"nativeSrc": "7080:88:12",
													"nodeType": "YulBlock",
													"src": "7080:88:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7111:22:12",
																"nodeType": "YulBlock",
																"src": "7111:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7113:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7113:16:12"
																			},
																			"nativeSrc": "7113:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7113:18:12"
																		},
																		"nativeSrc": "7113:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7113:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7096:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7096:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7107:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7107:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7103:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7103:3:12"
																		},
																		"nativeSrc": "7103:6:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7103:6:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7093:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7093:2:12"
																},
																"nativeSrc": "7093:17:12",
																"nodeType": "YulFunctionCall",
																"src": "7093:17:12"
															},
															"nativeSrc": "7090:43:12",
															"nodeType": "YulIf",
															"src": "7090:43:12"
														},
														{
															"nativeSrc": "7142:20:12",
															"nodeType": "YulAssignment",
															"src": "7142:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7153:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7153:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7160:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7160:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7149:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7149:3:12"
																},
																"nativeSrc": "7149:13:12",
																"nodeType": "YulFunctionCall",
																"src": "7149:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7142:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7142:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7033:135:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7062:5:12",
														"nodeType": "YulTypedName",
														"src": "7062:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7072:3:12",
														"nodeType": "YulTypedName",
														"src": "7072:3:12",
														"type": ""
													}
												],
												"src": "7033:135:12"
											},
											{
												"body": {
													"nativeSrc": "7347:175:12",
													"nodeType": "YulBlock",
													"src": "7347:175:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7364:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7364:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7375:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7375:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7357:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7357:6:12"
																},
																"nativeSrc": "7357:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7357:21:12"
															},
															"nativeSrc": "7357:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7357:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7398:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7398:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7409:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7409:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7394:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7394:3:12"
																		},
																		"nativeSrc": "7394:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7394:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7414:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7414:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7387:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7387:6:12"
																},
																"nativeSrc": "7387:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7387:30:12"
															},
															"nativeSrc": "7387:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7387:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7437:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7437:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7448:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7448:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7433:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7433:3:12"
																		},
																		"nativeSrc": "7433:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7433:18:12"
																	},
																	{
																		"hexValue": "5265717565737420494420616c726561647920657869737473",
																		"kind": "string",
																		"nativeSrc": "7453:27:12",
																		"nodeType": "YulLiteral",
																		"src": "7453:27:12",
																		"type": "",
																		"value": "Request ID already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7426:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7426:6:12"
																},
																"nativeSrc": "7426:55:12",
																"nodeType": "YulFunctionCall",
																"src": "7426:55:12"
															},
															"nativeSrc": "7426:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "7426:55:12"
														},
														{
															"nativeSrc": "7490:26:12",
															"nodeType": "YulAssignment",
															"src": "7490:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7502:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7502:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7513:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7513:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7498:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7498:3:12"
																},
																"nativeSrc": "7498:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7498:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7490:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7490:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4cceca778d1073f173e5f394d55c5ec6532c1bca200859fbd309f36f371476c8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7173:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7324:9:12",
														"nodeType": "YulTypedName",
														"src": "7324:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7338:4:12",
														"nodeType": "YulTypedName",
														"src": "7338:4:12",
														"type": ""
													}
												],
												"src": "7173:349:12"
											},
											{
												"body": {
													"nativeSrc": "7576:79:12",
													"nodeType": "YulBlock",
													"src": "7576:79:12",
													"statements": [
														{
															"nativeSrc": "7586:17:12",
															"nodeType": "YulAssignment",
															"src": "7586:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7598:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7598:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7601:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7601:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7594:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7594:3:12"
																},
																"nativeSrc": "7594:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7594:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7586:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7586:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7627:22:12",
																"nodeType": "YulBlock",
																"src": "7627:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7629:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7629:16:12"
																			},
																			"nativeSrc": "7629:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7629:18:12"
																		},
																		"nativeSrc": "7629:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7629:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7618:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7618:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7624:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7624:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7615:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7615:2:12"
																},
																"nativeSrc": "7615:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7615:11:12"
															},
															"nativeSrc": "7612:37:12",
															"nodeType": "YulIf",
															"src": "7612:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7527:128:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7558:1:12",
														"nodeType": "YulTypedName",
														"src": "7558:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7561:1:12",
														"nodeType": "YulTypedName",
														"src": "7561:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7567:4:12",
														"nodeType": "YulTypedName",
														"src": "7567:4:12",
														"type": ""
													}
												],
												"src": "7527:128:12"
											},
											{
												"body": {
													"nativeSrc": "7817:214:12",
													"nodeType": "YulBlock",
													"src": "7817:214:12",
													"statements": [
														{
															"nativeSrc": "7827:26:12",
															"nodeType": "YulAssignment",
															"src": "7827:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7839:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7839:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7850:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7850:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7835:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7835:3:12"
																},
																"nativeSrc": "7835:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7835:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7827:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7827:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7869:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7869:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7884:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7884:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7900:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7900:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7905:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7905:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7896:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7896:3:12"
																						},
																						"nativeSrc": "7896:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7896:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7909:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7909:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7892:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7892:3:12"
																				},
																				"nativeSrc": "7892:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7892:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7880:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7880:3:12"
																		},
																		"nativeSrc": "7880:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7880:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7862:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7862:6:12"
																},
																"nativeSrc": "7862:51:12",
																"nodeType": "YulFunctionCall",
																"src": "7862:51:12"
															},
															"nativeSrc": "7862:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "7862:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7933:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7933:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7944:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7944:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7929:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7929:3:12"
																		},
																		"nativeSrc": "7929:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7929:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7953:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7953:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7969:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7969:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7974:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7974:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7965:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7965:3:12"
																						},
																						"nativeSrc": "7965:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7965:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7978:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7978:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7961:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7961:3:12"
																				},
																				"nativeSrc": "7961:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7961:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7949:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7949:3:12"
																		},
																		"nativeSrc": "7949:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7949:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7922:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7922:6:12"
																},
																"nativeSrc": "7922:60:12",
																"nodeType": "YulFunctionCall",
																"src": "7922:60:12"
															},
															"nativeSrc": "7922:60:12",
															"nodeType": "YulExpressionStatement",
															"src": "7922:60:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8002:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8002:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8013:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8013:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7998:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7998:3:12"
																		},
																		"nativeSrc": "7998:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7998:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8018:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8018:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7991:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7991:6:12"
																},
																"nativeSrc": "7991:34:12",
																"nodeType": "YulFunctionCall",
																"src": "7991:34:12"
															},
															"nativeSrc": "7991:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "7991:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7660:371:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7770:9:12",
														"nodeType": "YulTypedName",
														"src": "7770:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7781:6:12",
														"nodeType": "YulTypedName",
														"src": "7781:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7789:6:12",
														"nodeType": "YulTypedName",
														"src": "7789:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7797:6:12",
														"nodeType": "YulTypedName",
														"src": "7797:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7808:4:12",
														"nodeType": "YulTypedName",
														"src": "7808:4:12",
														"type": ""
													}
												],
												"src": "7660:371:12"
											},
											{
												"body": {
													"nativeSrc": "8114:199:12",
													"nodeType": "YulBlock",
													"src": "8114:199:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8160:16:12",
																"nodeType": "YulBlock",
																"src": "8160:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8169:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8169:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8172:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8172:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8162:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8162:6:12"
																			},
																			"nativeSrc": "8162:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8162:12:12"
																		},
																		"nativeSrc": "8162:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8162:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8135:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8135:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8144:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8144:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8131:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8131:3:12"
																		},
																		"nativeSrc": "8131:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8131:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8156:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8156:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8127:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:12"
																},
																"nativeSrc": "8127:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8127:32:12"
															},
															"nativeSrc": "8124:52:12",
															"nodeType": "YulIf",
															"src": "8124:52:12"
														},
														{
															"nativeSrc": "8185:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8185:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8204:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8204:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8198:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8198:5:12"
																},
																"nativeSrc": "8198:16:12",
																"nodeType": "YulFunctionCall",
																"src": "8198:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8189:5:12",
																	"nodeType": "YulTypedName",
																	"src": "8189:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8267:16:12",
																"nodeType": "YulBlock",
																"src": "8267:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8276:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8276:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8279:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8279:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8269:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8269:6:12"
																			},
																			"nativeSrc": "8269:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8269:12:12"
																		},
																		"nativeSrc": "8269:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8269:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8236:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8236:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "8257:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "8257:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "8250:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "8250:6:12"
																						},
																						"nativeSrc": "8250:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8250:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8243:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8243:6:12"
																				},
																				"nativeSrc": "8243:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8243:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8233:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8233:2:12"
																		},
																		"nativeSrc": "8233:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8233:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8226:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8226:6:12"
																},
																"nativeSrc": "8226:40:12",
																"nodeType": "YulFunctionCall",
																"src": "8226:40:12"
															},
															"nativeSrc": "8223:60:12",
															"nodeType": "YulIf",
															"src": "8223:60:12"
														},
														{
															"nativeSrc": "8292:15:12",
															"nodeType": "YulAssignment",
															"src": "8292:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "8302:5:12",
																"nodeType": "YulIdentifier",
																"src": "8302:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8292:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8036:277:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8080:9:12",
														"nodeType": "YulTypedName",
														"src": "8080:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8091:7:12",
														"nodeType": "YulTypedName",
														"src": "8091:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8103:6:12",
														"nodeType": "YulTypedName",
														"src": "8103:6:12",
														"type": ""
													}
												],
												"src": "8036:277:12"
											},
											{
												"body": {
													"nativeSrc": "8447:145:12",
													"nodeType": "YulBlock",
													"src": "8447:145:12",
													"statements": [
														{
															"nativeSrc": "8457:26:12",
															"nodeType": "YulAssignment",
															"src": "8457:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8469:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8469:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8480:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8480:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8465:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8465:3:12"
																},
																"nativeSrc": "8465:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8465:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8457:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8457:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8499:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8499:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8514:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8514:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8530:3:12",
																								"nodeType": "YulLiteral",
																								"src": "8530:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8535:1:12",
																								"nodeType": "YulLiteral",
																								"src": "8535:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8526:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8526:3:12"
																						},
																						"nativeSrc": "8526:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8526:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8539:1:12",
																						"nodeType": "YulLiteral",
																						"src": "8539:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8522:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8522:3:12"
																				},
																				"nativeSrc": "8522:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8522:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8510:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8510:3:12"
																		},
																		"nativeSrc": "8510:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8510:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8492:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8492:6:12"
																},
																"nativeSrc": "8492:51:12",
																"nodeType": "YulFunctionCall",
																"src": "8492:51:12"
															},
															"nativeSrc": "8492:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "8492:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8563:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8563:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8574:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8574:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8559:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8559:3:12"
																		},
																		"nativeSrc": "8559:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8559:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8579:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8579:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8552:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8552:6:12"
																},
																"nativeSrc": "8552:34:12",
																"nodeType": "YulFunctionCall",
																"src": "8552:34:12"
															},
															"nativeSrc": "8552:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "8552:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8318:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8408:9:12",
														"nodeType": "YulTypedName",
														"src": "8408:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8419:6:12",
														"nodeType": "YulTypedName",
														"src": "8419:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8427:6:12",
														"nodeType": "YulTypedName",
														"src": "8427:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8438:4:12",
														"nodeType": "YulTypedName",
														"src": "8438:4:12",
														"type": ""
													}
												],
												"src": "8318:274:12"
											},
											{
												"body": {
													"nativeSrc": "8782:232:12",
													"nodeType": "YulBlock",
													"src": "8782:232:12",
													"statements": [
														{
															"nativeSrc": "8792:27:12",
															"nodeType": "YulAssignment",
															"src": "8792:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8804:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8804:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8815:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8815:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8800:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8800:3:12"
																},
																"nativeSrc": "8800:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8800:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8792:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8792:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8835:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8835:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8846:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8846:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8828:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8828:6:12"
																},
																"nativeSrc": "8828:25:12",
																"nodeType": "YulFunctionCall",
																"src": "8828:25:12"
															},
															"nativeSrc": "8828:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "8828:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8873:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8873:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8884:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8884:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8869:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8869:3:12"
																		},
																		"nativeSrc": "8869:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8869:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8889:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8889:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8862:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8862:6:12"
																},
																"nativeSrc": "8862:34:12",
																"nodeType": "YulFunctionCall",
																"src": "8862:34:12"
															},
															"nativeSrc": "8862:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "8862:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8916:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8916:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8927:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8927:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8912:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8912:3:12"
																		},
																		"nativeSrc": "8912:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8912:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8932:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8932:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8905:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8905:6:12"
																},
																"nativeSrc": "8905:34:12",
																"nodeType": "YulFunctionCall",
																"src": "8905:34:12"
															},
															"nativeSrc": "8905:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "8905:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8959:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8959:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8970:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8970:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8955:3:12"
																		},
																		"nativeSrc": "8955:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8955:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "8979:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8979:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8995:3:12",
																								"nodeType": "YulLiteral",
																								"src": "8995:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9000:1:12",
																								"nodeType": "YulLiteral",
																								"src": "9000:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8991:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8991:3:12"
																						},
																						"nativeSrc": "8991:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8991:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9004:1:12",
																						"nodeType": "YulLiteral",
																						"src": "9004:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8987:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8987:3:12"
																				},
																				"nativeSrc": "8987:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8987:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8975:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8975:3:12"
																		},
																		"nativeSrc": "8975:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8975:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8948:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8948:6:12"
																},
																"nativeSrc": "8948:60:12",
																"nodeType": "YulFunctionCall",
																"src": "8948:60:12"
															},
															"nativeSrc": "8948:60:12",
															"nodeType": "YulExpressionStatement",
															"src": "8948:60:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8597:417:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8727:9:12",
														"nodeType": "YulTypedName",
														"src": "8727:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8738:6:12",
														"nodeType": "YulTypedName",
														"src": "8738:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8746:6:12",
														"nodeType": "YulTypedName",
														"src": "8746:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8754:6:12",
														"nodeType": "YulTypedName",
														"src": "8754:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8762:6:12",
														"nodeType": "YulTypedName",
														"src": "8762:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8773:4:12",
														"nodeType": "YulTypedName",
														"src": "8773:4:12",
														"type": ""
													}
												],
												"src": "8597:417:12"
											},
											{
												"body": {
													"nativeSrc": "9193:238:12",
													"nodeType": "YulBlock",
													"src": "9193:238:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9210:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9210:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9221:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9221:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9203:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9203:6:12"
																},
																"nativeSrc": "9203:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9203:21:12"
															},
															"nativeSrc": "9203:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9203:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9244:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9244:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9255:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9255:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9240:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9240:3:12"
																		},
																		"nativeSrc": "9240:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9240:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9260:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9260:2:12",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9233:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9233:6:12"
																},
																"nativeSrc": "9233:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9233:30:12"
															},
															"nativeSrc": "9233:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9233:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9283:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9283:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9294:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9294:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9279:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9279:3:12"
																		},
																		"nativeSrc": "9279:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9279:18:12"
																	},
																	{
																		"hexValue": "536f7572636520636861696e206d75737420626520646966666572656e742066",
																		"kind": "string",
																		"nativeSrc": "9299:34:12",
																		"nodeType": "YulLiteral",
																		"src": "9299:34:12",
																		"type": "",
																		"value": "Source chain must be different f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9272:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9272:6:12"
																},
																"nativeSrc": "9272:62:12",
																"nodeType": "YulFunctionCall",
																"src": "9272:62:12"
															},
															"nativeSrc": "9272:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "9272:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9354:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9354:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9365:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9365:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9350:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9350:3:12"
																		},
																		"nativeSrc": "9350:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9350:18:12"
																	},
																	{
																		"hexValue": "726f6d2074617267657420636861696e",
																		"kind": "string",
																		"nativeSrc": "9370:18:12",
																		"nodeType": "YulLiteral",
																		"src": "9370:18:12",
																		"type": "",
																		"value": "rom target chain"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9343:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9343:6:12"
																},
																"nativeSrc": "9343:46:12",
																"nodeType": "YulFunctionCall",
																"src": "9343:46:12"
															},
															"nativeSrc": "9343:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "9343:46:12"
														},
														{
															"nativeSrc": "9398:27:12",
															"nodeType": "YulAssignment",
															"src": "9398:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9410:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9410:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9421:3:12",
																		"nodeType": "YulLiteral",
																		"src": "9421:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9406:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9406:3:12"
																},
																"nativeSrc": "9406:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9406:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9398:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9398:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6796245fd06a0237ef78dc4b92ce228b2aeb991d0e4ff61774e8fc1ef736486c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9019:412:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9170:9:12",
														"nodeType": "YulTypedName",
														"src": "9170:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9184:4:12",
														"nodeType": "YulTypedName",
														"src": "9184:4:12",
														"type": ""
													}
												],
												"src": "9019:412:12"
											},
											{
												"body": {
													"nativeSrc": "9610:179:12",
													"nodeType": "YulBlock",
													"src": "9610:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9627:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9627:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9638:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9638:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9620:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9620:6:12"
																},
																"nativeSrc": "9620:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9620:21:12"
															},
															"nativeSrc": "9620:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9620:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9661:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9661:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9672:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9672:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9657:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9657:3:12"
																		},
																		"nativeSrc": "9657:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9657:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9677:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9677:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9650:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9650:6:12"
																},
																"nativeSrc": "9650:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9650:30:12"
															},
															"nativeSrc": "9650:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9650:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9700:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9700:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9711:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9711:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9696:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9696:3:12"
																		},
																		"nativeSrc": "9696:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9696:18:12"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "9716:31:12",
																		"nodeType": "YulLiteral",
																		"src": "9716:31:12",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9689:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9689:6:12"
																},
																"nativeSrc": "9689:59:12",
																"nodeType": "YulFunctionCall",
																"src": "9689:59:12"
															},
															"nativeSrc": "9689:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "9689:59:12"
														},
														{
															"nativeSrc": "9757:26:12",
															"nodeType": "YulAssignment",
															"src": "9757:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9769:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9769:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9780:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9780:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9765:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9765:3:12"
																},
																"nativeSrc": "9765:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9765:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9757:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9757:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9436:353:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9587:9:12",
														"nodeType": "YulTypedName",
														"src": "9587:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9601:4:12",
														"nodeType": "YulTypedName",
														"src": "9601:4:12",
														"type": ""
													}
												],
												"src": "9436:353:12"
											},
											{
												"body": {
													"nativeSrc": "9968:175:12",
													"nodeType": "YulBlock",
													"src": "9968:175:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9985:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9985:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9996:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9996:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9978:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9978:6:12"
																},
																"nativeSrc": "9978:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9978:21:12"
															},
															"nativeSrc": "9978:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9978:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10019:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10019:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10030:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10030:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10015:3:12"
																		},
																		"nativeSrc": "10015:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10015:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10035:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10035:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10008:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10008:6:12"
																},
																"nativeSrc": "10008:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10008:30:12"
															},
															"nativeSrc": "10008:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "10008:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10058:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10058:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10069:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10069:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10054:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10054:3:12"
																		},
																		"nativeSrc": "10054:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10054:18:12"
																	},
																	{
																		"hexValue": "496e76616c69642070616765206f7220706167652073697a65",
																		"kind": "string",
																		"nativeSrc": "10074:27:12",
																		"nodeType": "YulLiteral",
																		"src": "10074:27:12",
																		"type": "",
																		"value": "Invalid page or page size"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10047:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10047:6:12"
																},
																"nativeSrc": "10047:55:12",
																"nodeType": "YulFunctionCall",
																"src": "10047:55:12"
															},
															"nativeSrc": "10047:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "10047:55:12"
														},
														{
															"nativeSrc": "10111:26:12",
															"nodeType": "YulAssignment",
															"src": "10111:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10123:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10123:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10134:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10119:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10119:3:12"
																},
																"nativeSrc": "10119:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10119:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10111:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10111:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f4f7373ef83803408a4ec524ae5f24c5a331fd25e48c69056ab32bb378845beb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9794:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9945:9:12",
														"nodeType": "YulTypedName",
														"src": "9945:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9959:4:12",
														"nodeType": "YulTypedName",
														"src": "9959:4:12",
														"type": ""
													}
												],
												"src": "9794:349:12"
											},
											{
												"body": {
													"nativeSrc": "10180:95:12",
													"nodeType": "YulBlock",
													"src": "10180:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10197:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10204:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10204:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10209:10:12",
																				"nodeType": "YulLiteral",
																				"src": "10209:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10200:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10200:3:12"
																		},
																		"nativeSrc": "10200:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10200:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10190:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10190:6:12"
																},
																"nativeSrc": "10190:31:12",
																"nodeType": "YulFunctionCall",
																"src": "10190:31:12"
															},
															"nativeSrc": "10190:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "10190:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10237:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10237:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10240:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10240:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10230:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10230:6:12"
																},
																"nativeSrc": "10230:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10230:15:12"
															},
															"nativeSrc": "10230:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10230:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10261:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10261:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10264:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10264:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10254:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10254:6:12"
																},
																"nativeSrc": "10254:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10254:15:12"
															},
															"nativeSrc": "10254:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10254:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10148:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "10148:127:12"
											},
											{
												"body": {
													"nativeSrc": "10332:116:12",
													"nodeType": "YulBlock",
													"src": "10332:116:12",
													"statements": [
														{
															"nativeSrc": "10342:20:12",
															"nodeType": "YulAssignment",
															"src": "10342:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10357:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10357:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10360:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10360:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10353:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10353:3:12"
																},
																"nativeSrc": "10353:9:12",
																"nodeType": "YulFunctionCall",
																"src": "10353:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10342:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "10342:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10420:22:12",
																"nodeType": "YulBlock",
																"src": "10420:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10422:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10422:16:12"
																			},
																			"nativeSrc": "10422:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10422:18:12"
																		},
																		"nativeSrc": "10422:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10422:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10391:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "10391:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10384:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "10384:6:12"
																				},
																				"nativeSrc": "10384:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10384:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10398:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "10398:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10405:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "10405:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10414:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "10414:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10401:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "10401:3:12"
																						},
																						"nativeSrc": "10401:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "10401:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10395:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "10395:2:12"
																				},
																				"nativeSrc": "10395:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10395:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10381:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "10381:2:12"
																		},
																		"nativeSrc": "10381:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10381:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10374:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10374:6:12"
																},
																"nativeSrc": "10374:45:12",
																"nodeType": "YulFunctionCall",
																"src": "10374:45:12"
															},
															"nativeSrc": "10371:71:12",
															"nodeType": "YulIf",
															"src": "10371:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10280:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10311:1:12",
														"nodeType": "YulTypedName",
														"src": "10311:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10314:1:12",
														"nodeType": "YulTypedName",
														"src": "10314:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10320:7:12",
														"nodeType": "YulTypedName",
														"src": "10320:7:12",
														"type": ""
													}
												],
												"src": "10280:168:12"
											},
											{
												"body": {
													"nativeSrc": "10501:77:12",
													"nodeType": "YulBlock",
													"src": "10501:77:12",
													"statements": [
														{
															"nativeSrc": "10511:16:12",
															"nodeType": "YulAssignment",
															"src": "10511:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10522:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10522:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10525:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10525:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10518:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10518:3:12"
																},
																"nativeSrc": "10518:9:12",
																"nodeType": "YulFunctionCall",
																"src": "10518:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10511:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10511:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10550:22:12",
																"nodeType": "YulBlock",
																"src": "10550:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10552:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10552:16:12"
																			},
																			"nativeSrc": "10552:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10552:18:12"
																		},
																		"nativeSrc": "10552:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10552:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10542:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10542:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10545:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10545:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10539:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10539:2:12"
																},
																"nativeSrc": "10539:10:12",
																"nodeType": "YulFunctionCall",
																"src": "10539:10:12"
															},
															"nativeSrc": "10536:36:12",
															"nodeType": "YulIf",
															"src": "10536:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10453:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10484:1:12",
														"nodeType": "YulTypedName",
														"src": "10484:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10487:1:12",
														"nodeType": "YulTypedName",
														"src": "10487:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10493:3:12",
														"nodeType": "YulTypedName",
														"src": "10493:3:12",
														"type": ""
													}
												],
												"src": "10453:125:12"
											},
											{
												"body": {
													"nativeSrc": "10615:95:12",
													"nodeType": "YulBlock",
													"src": "10615:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10632:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10632:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10639:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10639:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10644:10:12",
																				"nodeType": "YulLiteral",
																				"src": "10644:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10635:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10635:3:12"
																		},
																		"nativeSrc": "10635:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10635:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10625:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10625:6:12"
																},
																"nativeSrc": "10625:31:12",
																"nodeType": "YulFunctionCall",
																"src": "10625:31:12"
															},
															"nativeSrc": "10625:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "10625:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10672:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10672:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10675:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10675:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10665:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10665:6:12"
																},
																"nativeSrc": "10665:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10665:15:12"
															},
															"nativeSrc": "10665:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10665:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10696:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10696:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10699:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10699:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10689:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10689:6:12"
																},
																"nativeSrc": "10689:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10689:15:12"
															},
															"nativeSrc": "10689:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10689:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "10583:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "10583:127:12"
											},
											{
												"body": {
													"nativeSrc": "10762:89:12",
													"nodeType": "YulBlock",
													"src": "10762:89:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10789:22:12",
																"nodeType": "YulBlock",
																"src": "10789:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10791:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10791:16:12"
																			},
																			"nativeSrc": "10791:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10791:18:12"
																		},
																		"nativeSrc": "10791:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10791:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10782:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10782:5:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10775:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10775:6:12"
																},
																"nativeSrc": "10775:13:12",
																"nodeType": "YulFunctionCall",
																"src": "10775:13:12"
															},
															"nativeSrc": "10772:39:12",
															"nodeType": "YulIf",
															"src": "10772:39:12"
														},
														{
															"nativeSrc": "10820:25:12",
															"nodeType": "YulAssignment",
															"src": "10820:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10831:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10831:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10842:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10842:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10838:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10838:3:12"
																		},
																		"nativeSrc": "10838:6:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10838:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10827:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10827:3:12"
																},
																"nativeSrc": "10827:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10827:18:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10820:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10820:3:12"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "10715:136:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10744:5:12",
														"nodeType": "YulTypedName",
														"src": "10744:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10754:3:12",
														"nodeType": "YulTypedName",
														"src": "10754:3:12",
														"type": ""
													}
												],
												"src": "10715:136:12"
											},
											{
												"body": {
													"nativeSrc": "11030:175:12",
													"nodeType": "YulBlock",
													"src": "11030:175:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11047:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11047:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11058:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11058:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11040:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11040:6:12"
																},
																"nativeSrc": "11040:21:12",
																"nodeType": "YulFunctionCall",
																"src": "11040:21:12"
															},
															"nativeSrc": "11040:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "11040:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11081:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11081:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11092:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11092:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11077:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11077:3:12"
																		},
																		"nativeSrc": "11077:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11077:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11097:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11097:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11070:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11070:6:12"
																},
																"nativeSrc": "11070:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11070:30:12"
															},
															"nativeSrc": "11070:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "11070:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11120:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11120:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11131:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11131:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11116:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11116:3:12"
																		},
																		"nativeSrc": "11116:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11116:18:12"
																	},
																	{
																		"hexValue": "537461626c65636f696e206e6f742072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "11136:27:12",
																		"nodeType": "YulLiteral",
																		"src": "11136:27:12",
																		"type": "",
																		"value": "Stablecoin not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11109:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11109:6:12"
																},
																"nativeSrc": "11109:55:12",
																"nodeType": "YulFunctionCall",
																"src": "11109:55:12"
															},
															"nativeSrc": "11109:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "11109:55:12"
														},
														{
															"nativeSrc": "11173:26:12",
															"nodeType": "YulAssignment",
															"src": "11173:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11185:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11185:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11196:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11196:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11181:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11181:3:12"
																},
																"nativeSrc": "11181:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11181:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11173:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11173:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10856:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11007:9:12",
														"nodeType": "YulTypedName",
														"src": "11007:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11021:4:12",
														"nodeType": "YulTypedName",
														"src": "11021:4:12",
														"type": ""
													}
												],
												"src": "10856:349:12"
											},
											{
												"body": {
													"nativeSrc": "11289:194:12",
													"nodeType": "YulBlock",
													"src": "11289:194:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11335:16:12",
																"nodeType": "YulBlock",
																"src": "11335:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11344:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11344:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11347:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11347:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11337:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11337:6:12"
																			},
																			"nativeSrc": "11337:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11337:12:12"
																		},
																		"nativeSrc": "11337:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11337:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11310:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11310:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11319:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11319:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11306:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11306:3:12"
																		},
																		"nativeSrc": "11306:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11306:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11331:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11331:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11302:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11302:3:12"
																},
																"nativeSrc": "11302:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11302:32:12"
															},
															"nativeSrc": "11299:52:12",
															"nodeType": "YulIf",
															"src": "11299:52:12"
														},
														{
															"nativeSrc": "11360:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11360:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11379:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11379:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11373:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11373:5:12"
																},
																"nativeSrc": "11373:16:12",
																"nodeType": "YulFunctionCall",
																"src": "11373:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11364:5:12",
																	"nodeType": "YulTypedName",
																	"src": "11364:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11437:16:12",
																"nodeType": "YulBlock",
																"src": "11437:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11446:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11446:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11449:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11449:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11439:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11439:6:12"
																			},
																			"nativeSrc": "11439:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11439:12:12"
																		},
																		"nativeSrc": "11439:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11439:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11411:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11411:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11422:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "11422:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11429:4:12",
																						"nodeType": "YulLiteral",
																						"src": "11429:4:12",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "11418:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11418:3:12"
																				},
																				"nativeSrc": "11418:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11418:16:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11408:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11408:2:12"
																		},
																		"nativeSrc": "11408:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11408:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11401:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11401:6:12"
																},
																"nativeSrc": "11401:35:12",
																"nodeType": "YulFunctionCall",
																"src": "11401:35:12"
															},
															"nativeSrc": "11398:55:12",
															"nodeType": "YulIf",
															"src": "11398:55:12"
														},
														{
															"nativeSrc": "11462:15:12",
															"nodeType": "YulAssignment",
															"src": "11462:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "11472:5:12",
																"nodeType": "YulIdentifier",
																"src": "11472:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11462:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11462:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "11210:273:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11255:9:12",
														"nodeType": "YulTypedName",
														"src": "11255:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11266:7:12",
														"nodeType": "YulTypedName",
														"src": "11266:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11278:6:12",
														"nodeType": "YulTypedName",
														"src": "11278:6:12",
														"type": ""
													}
												],
												"src": "11210:273:12"
											},
											{
												"body": {
													"nativeSrc": "11662:176:12",
													"nodeType": "YulBlock",
													"src": "11662:176:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11679:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11679:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11690:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11690:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11672:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11672:6:12"
																},
																"nativeSrc": "11672:21:12",
																"nodeType": "YulFunctionCall",
																"src": "11672:21:12"
															},
															"nativeSrc": "11672:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "11672:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11713:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11713:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11724:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11724:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11709:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11709:3:12"
																		},
																		"nativeSrc": "11709:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11709:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11729:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11729:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11702:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11702:6:12"
																},
																"nativeSrc": "11702:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11702:30:12"
															},
															"nativeSrc": "11702:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "11702:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11752:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11752:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11763:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11763:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11748:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11748:3:12"
																		},
																		"nativeSrc": "11748:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11748:18:12"
																	},
																	{
																		"hexValue": "537461626c65636f696e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "11768:28:12",
																		"nodeType": "YulLiteral",
																		"src": "11768:28:12",
																		"type": "",
																		"value": "Stablecoin transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11741:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11741:6:12"
																},
																"nativeSrc": "11741:56:12",
																"nodeType": "YulFunctionCall",
																"src": "11741:56:12"
															},
															"nativeSrc": "11741:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "11741:56:12"
														},
														{
															"nativeSrc": "11806:26:12",
															"nodeType": "YulAssignment",
															"src": "11806:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11818:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11818:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11829:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11829:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11814:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11814:3:12"
																},
																"nativeSrc": "11814:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11814:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11806:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11806:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11488:350:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11639:9:12",
														"nodeType": "YulTypedName",
														"src": "11639:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11653:4:12",
														"nodeType": "YulTypedName",
														"src": "11653:4:12",
														"type": ""
													}
												],
												"src": "11488:350:12"
											},
											{
												"body": {
													"nativeSrc": "11972:119:12",
													"nodeType": "YulBlock",
													"src": "11972:119:12",
													"statements": [
														{
															"nativeSrc": "11982:26:12",
															"nodeType": "YulAssignment",
															"src": "11982:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11994:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11994:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12005:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12005:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11990:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11990:3:12"
																},
																"nativeSrc": "11990:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11990:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11982:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11982:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12024:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12024:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "12035:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12035:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12017:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12017:6:12"
																},
																"nativeSrc": "12017:25:12",
																"nodeType": "YulFunctionCall",
																"src": "12017:25:12"
															},
															"nativeSrc": "12017:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "12017:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12062:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12062:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12073:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12073:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12058:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12058:3:12"
																		},
																		"nativeSrc": "12058:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12058:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12078:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12078:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12051:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12051:6:12"
																},
																"nativeSrc": "12051:34:12",
																"nodeType": "YulFunctionCall",
																"src": "12051:34:12"
															},
															"nativeSrc": "12051:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "12051:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11843:248:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11933:9:12",
														"nodeType": "YulTypedName",
														"src": "11933:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11944:6:12",
														"nodeType": "YulTypedName",
														"src": "11944:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11952:6:12",
														"nodeType": "YulTypedName",
														"src": "11952:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11963:4:12",
														"nodeType": "YulTypedName",
														"src": "11963:4:12",
														"type": ""
													}
												],
												"src": "11843:248:12"
											},
											{
												"body": {
													"nativeSrc": "12143:104:12",
													"nodeType": "YulBlock",
													"src": "12143:104:12",
													"statements": [
														{
															"nativeSrc": "12153:39:12",
															"nodeType": "YulAssignment",
															"src": "12153:39:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "12169:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "12169:1:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12172:4:12",
																				"nodeType": "YulLiteral",
																				"src": "12172:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12165:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12165:3:12"
																		},
																		"nativeSrc": "12165:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12165:12:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "12183:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "12183:1:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12186:4:12",
																				"nodeType": "YulLiteral",
																				"src": "12186:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12179:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12179:3:12"
																		},
																		"nativeSrc": "12179:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12179:12:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12161:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12161:3:12"
																},
																"nativeSrc": "12161:31:12",
																"nodeType": "YulFunctionCall",
																"src": "12161:31:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12153:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12153:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12219:22:12",
																"nodeType": "YulBlock",
																"src": "12219:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12221:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12221:16:12"
																			},
																			"nativeSrc": "12221:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12221:18:12"
																		},
																		"nativeSrc": "12221:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12221:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12207:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12207:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12213:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12213:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12204:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12204:2:12"
																},
																"nativeSrc": "12204:14:12",
																"nodeType": "YulFunctionCall",
																"src": "12204:14:12"
															},
															"nativeSrc": "12201:40:12",
															"nodeType": "YulIf",
															"src": "12201:40:12"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "12096:151:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12125:1:12",
														"nodeType": "YulTypedName",
														"src": "12125:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12128:1:12",
														"nodeType": "YulTypedName",
														"src": "12128:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12134:4:12",
														"nodeType": "YulTypedName",
														"src": "12134:4:12",
														"type": ""
													}
												],
												"src": "12096:151:12"
											},
											{
												"body": {
													"nativeSrc": "12321:306:12",
													"nodeType": "YulBlock",
													"src": "12321:306:12",
													"statements": [
														{
															"nativeSrc": "12331:10:12",
															"nodeType": "YulAssignment",
															"src": "12331:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "12340:1:12",
																"nodeType": "YulLiteral",
																"src": "12340:1:12",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12331:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12331:5:12"
																}
															]
														},
														{
															"nativeSrc": "12350:13:12",
															"nodeType": "YulAssignment",
															"src": "12350:13:12",
															"value": {
																"name": "_base",
																"nativeSrc": "12358:5:12",
																"nodeType": "YulIdentifier",
																"src": "12358:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "12350:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12350:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12408:213:12",
																"nodeType": "YulBlock",
																"src": "12408:213:12",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "12450:22:12",
																			"nodeType": "YulBlock",
																			"src": "12450:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "12452:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "12452:16:12"
																						},
																						"nativeSrc": "12452:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "12452:18:12"
																					},
																					"nativeSrc": "12452:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "12452:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "12428:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "12428:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "12438:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "12438:3:12"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "12443:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "12443:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "12434:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "12434:3:12"
																					},
																					"nativeSrc": "12434:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12434:14:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "12425:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "12425:2:12"
																			},
																			"nativeSrc": "12425:24:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12425:24:12"
																		},
																		"nativeSrc": "12422:50:12",
																		"nodeType": "YulIf",
																		"src": "12422:50:12"
																	},
																	{
																		"body": {
																			"nativeSrc": "12505:29:12",
																			"nodeType": "YulBlock",
																			"src": "12505:29:12",
																			"statements": [
																				{
																					"nativeSrc": "12507:25:12",
																					"nodeType": "YulAssignment",
																					"src": "12507:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "12520:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "12520:5:12"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "12527:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "12527:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "12516:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "12516:3:12"
																						},
																						"nativeSrc": "12516:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "12516:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "12507:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "12507:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "12492:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "12492:8:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12502:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12502:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12488:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12488:3:12"
																			},
																			"nativeSrc": "12488:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12488:16:12"
																		},
																		"nativeSrc": "12485:49:12",
																		"nodeType": "YulIf",
																		"src": "12485:49:12"
																	},
																	{
																		"nativeSrc": "12547:23:12",
																		"nodeType": "YulAssignment",
																		"src": "12547:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "12559:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "12559:4:12"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "12565:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "12565:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "12555:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12555:3:12"
																			},
																			"nativeSrc": "12555:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12555:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "12547:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12547:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12583:28:12",
																		"nodeType": "YulAssignment",
																		"src": "12583:28:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12599:1:12",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "12602:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "12602:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "12595:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12595:3:12"
																			},
																			"nativeSrc": "12595:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12595:16:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "12583:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "12583:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12383:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "12383:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12393:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12393:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12380:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12380:2:12"
																},
																"nativeSrc": "12380:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12380:15:12"
															},
															"nativeSrc": "12372:249:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12396:3:12",
																"nodeType": "YulBlock",
																"src": "12396:3:12",
																"statements": []
															},
															"pre": {
																"nativeSrc": "12376:3:12",
																"nodeType": "YulBlock",
																"src": "12376:3:12",
																"statements": []
															},
															"src": "12372:249:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "12252:375:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "12280:5:12",
														"nodeType": "YulTypedName",
														"src": "12280:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12287:8:12",
														"nodeType": "YulTypedName",
														"src": "12287:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "12297:3:12",
														"nodeType": "YulTypedName",
														"src": "12297:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12305:5:12",
														"nodeType": "YulTypedName",
														"src": "12305:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "12312:4:12",
														"nodeType": "YulTypedName",
														"src": "12312:4:12",
														"type": ""
													}
												],
												"src": "12252:375:12"
											},
											{
												"body": {
													"nativeSrc": "12691:843:12",
													"nodeType": "YulBlock",
													"src": "12691:843:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12729:52:12",
																"nodeType": "YulBlock",
																"src": "12729:52:12",
																"statements": [
																	{
																		"nativeSrc": "12743:10:12",
																		"nodeType": "YulAssignment",
																		"src": "12743:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12752:1:12",
																			"nodeType": "YulLiteral",
																			"src": "12752:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12743:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12743:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12766:5:12",
																		"nodeType": "YulLeave",
																		"src": "12766:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12711:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "12711:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12704:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12704:6:12"
																},
																"nativeSrc": "12704:16:12",
																"nodeType": "YulFunctionCall",
																"src": "12704:16:12"
															},
															"nativeSrc": "12701:80:12",
															"nodeType": "YulIf",
															"src": "12701:80:12"
														},
														{
															"body": {
																"nativeSrc": "12814:52:12",
																"nodeType": "YulBlock",
																"src": "12814:52:12",
																"statements": [
																	{
																		"nativeSrc": "12828:10:12",
																		"nodeType": "YulAssignment",
																		"src": "12828:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12837:1:12",
																			"nodeType": "YulLiteral",
																			"src": "12837:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12828:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12828:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12851:5:12",
																		"nodeType": "YulLeave",
																		"src": "12851:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12800:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12800:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12793:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12793:6:12"
																},
																"nativeSrc": "12793:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12793:12:12"
															},
															"nativeSrc": "12790:76:12",
															"nodeType": "YulIf",
															"src": "12790:76:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12902:52:12",
																		"nodeType": "YulBlock",
																		"src": "12902:52:12",
																		"statements": [
																			{
																				"nativeSrc": "12916:10:12",
																				"nodeType": "YulAssignment",
																				"src": "12916:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12925:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12925:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "12916:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "12916:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "12939:5:12",
																				"nodeType": "YulLeave",
																				"src": "12939:5:12"
																			}
																		]
																	},
																	"nativeSrc": "12895:59:12",
																	"nodeType": "YulCase",
																	"src": "12895:59:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12900:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12900:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "12970:167:12",
																		"nodeType": "YulBlock",
																		"src": "12970:167:12",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "13005:22:12",
																					"nodeType": "YulBlock",
																					"src": "13005:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "13007:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "13007:16:12"
																								},
																								"nativeSrc": "13007:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "13007:18:12"
																							},
																							"nativeSrc": "13007:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "13007:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "12990:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "12990:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "13000:3:12",
																							"nodeType": "YulLiteral",
																							"src": "13000:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "12987:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "12987:2:12"
																					},
																					"nativeSrc": "12987:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12987:17:12"
																				},
																				"nativeSrc": "12984:43:12",
																				"nodeType": "YulIf",
																				"src": "12984:43:12"
																			},
																			{
																				"nativeSrc": "13040:25:12",
																				"nodeType": "YulAssignment",
																				"src": "13040:25:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "13053:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "13053:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "13063:1:12",
																							"nodeType": "YulLiteral",
																							"src": "13063:1:12",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "13049:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "13049:3:12"
																					},
																					"nativeSrc": "13049:16:12",
																					"nodeType": "YulFunctionCall",
																					"src": "13049:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "13040:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "13040:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "13078:11:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13078:11:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13088:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13088:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "13082:2:12",
																						"nodeType": "YulTypedName",
																						"src": "13082:2:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13102:7:12",
																				"nodeType": "YulAssignment",
																				"src": "13102:7:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13108:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13108:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "13102:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "13102:2:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "13122:5:12",
																				"nodeType": "YulLeave",
																				"src": "13122:5:12"
																			}
																		]
																	},
																	"nativeSrc": "12963:174:12",
																	"nodeType": "YulCase",
																	"src": "12963:174:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12968:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12968:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "12882:4:12",
																"nodeType": "YulIdentifier",
																"src": "12882:4:12"
															},
															"nativeSrc": "12875:262:12",
															"nodeType": "YulSwitch",
															"src": "12875:262:12"
														},
														{
															"body": {
																"nativeSrc": "13235:114:12",
																"nodeType": "YulBlock",
																"src": "13235:114:12",
																"statements": [
																	{
																		"nativeSrc": "13249:28:12",
																		"nodeType": "YulAssignment",
																		"src": "13249:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "13262:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "13262:4:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "13268:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "13268:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "13258:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "13258:3:12"
																			},
																			"nativeSrc": "13258:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13258:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "13249:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13249:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "13290:11:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13290:11:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "13300:1:12",
																			"nodeType": "YulLiteral",
																			"src": "13300:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "13294:2:12",
																				"nodeType": "YulTypedName",
																				"src": "13294:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13314:7:12",
																		"nodeType": "YulAssignment",
																		"src": "13314:7:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "13320:1:12",
																			"nodeType": "YulLiteral",
																			"src": "13320:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "13314:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "13314:2:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "13334:5:12",
																		"nodeType": "YulLeave",
																		"src": "13334:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "13159:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "13159:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13165:2:12",
																						"nodeType": "YulLiteral",
																						"src": "13165:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "13156:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "13156:2:12"
																				},
																				"nativeSrc": "13156:12:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13156:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "13173:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "13173:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13183:2:12",
																						"nodeType": "YulLiteral",
																						"src": "13183:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "13170:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "13170:2:12"
																				},
																				"nativeSrc": "13170:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13170:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13152:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13152:3:12"
																		},
																		"nativeSrc": "13152:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13152:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "13196:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "13196:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13202:3:12",
																						"nodeType": "YulLiteral",
																						"src": "13202:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "13193:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "13193:2:12"
																				},
																				"nativeSrc": "13193:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13193:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "13211:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "13211:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13221:2:12",
																						"nodeType": "YulLiteral",
																						"src": "13221:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "13208:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "13208:2:12"
																				},
																				"nativeSrc": "13208:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13208:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13189:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13189:3:12"
																		},
																		"nativeSrc": "13189:36:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13189:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13149:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "13149:2:12"
																},
																"nativeSrc": "13149:77:12",
																"nodeType": "YulFunctionCall",
																"src": "13149:77:12"
															},
															"nativeSrc": "13146:203:12",
															"nodeType": "YulIf",
															"src": "13146:203:12"
														},
														{
															"nativeSrc": "13358:65:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13358:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13400:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13400:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "13406:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "13406:8:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13420:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13420:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "13416:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13416:3:12"
																		},
																		"nativeSrc": "13416:6:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13416:6:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "13381:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "13381:18:12"
																},
																"nativeSrc": "13381:42:12",
																"nodeType": "YulFunctionCall",
																"src": "13381:42:12"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "13362:7:12",
																	"nodeType": "YulTypedName",
																	"src": "13362:7:12",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "13371:6:12",
																	"nodeType": "YulTypedName",
																	"src": "13371:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13468:22:12",
																"nodeType": "YulBlock",
																"src": "13468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13470:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "13470:16:12"
																			},
																			"nativeSrc": "13470:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13470:18:12"
																		},
																		"nativeSrc": "13470:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "13438:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "13438:7:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13455:1:12",
																						"nodeType": "YulLiteral",
																						"src": "13455:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "13451:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13451:3:12"
																				},
																				"nativeSrc": "13451:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13451:6:12"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "13459:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13459:6:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "13447:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13447:3:12"
																		},
																		"nativeSrc": "13447:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13447:19:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13435:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "13435:2:12"
																},
																"nativeSrc": "13435:32:12",
																"nodeType": "YulFunctionCall",
																"src": "13435:32:12"
															},
															"nativeSrc": "13432:58:12",
															"nodeType": "YulIf",
															"src": "13432:58:12"
														},
														{
															"nativeSrc": "13499:29:12",
															"nodeType": "YulAssignment",
															"src": "13499:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "13512:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "13512:7:12"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "13521:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13521:6:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13508:3:12"
																},
																"nativeSrc": "13508:20:12",
																"nodeType": "YulFunctionCall",
																"src": "13508:20:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13499:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13499:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "12632:902:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12662:4:12",
														"nodeType": "YulTypedName",
														"src": "12662:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12668:8:12",
														"nodeType": "YulTypedName",
														"src": "12668:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12681:5:12",
														"nodeType": "YulTypedName",
														"src": "12681:5:12",
														"type": ""
													}
												],
												"src": "12632:902:12"
											},
											{
												"body": {
													"nativeSrc": "13607:72:12",
													"nodeType": "YulBlock",
													"src": "13607:72:12",
													"statements": [
														{
															"nativeSrc": "13617:56:12",
															"nodeType": "YulAssignment",
															"src": "13617:56:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13647:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13647:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "13657:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "13657:8:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13667:4:12",
																				"nodeType": "YulLiteral",
																				"src": "13667:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13653:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13653:3:12"
																		},
																		"nativeSrc": "13653:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13653:19:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "13626:20:12",
																	"nodeType": "YulIdentifier",
																	"src": "13626:20:12"
																},
																"nativeSrc": "13626:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13626:47:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13617:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13617:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "13539:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "13578:4:12",
														"nodeType": "YulTypedName",
														"src": "13578:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13584:8:12",
														"nodeType": "YulTypedName",
														"src": "13584:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13597:5:12",
														"nodeType": "YulTypedName",
														"src": "13597:5:12",
														"type": ""
													}
												],
												"src": "13539:140:12"
											},
											{
												"body": {
													"nativeSrc": "13716:95:12",
													"nodeType": "YulBlock",
													"src": "13716:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13733:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13740:3:12",
																				"nodeType": "YulLiteral",
																				"src": "13740:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13745:10:12",
																				"nodeType": "YulLiteral",
																				"src": "13745:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13736:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13736:3:12"
																		},
																		"nativeSrc": "13736:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13736:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13726:6:12"
																},
																"nativeSrc": "13726:31:12",
																"nodeType": "YulFunctionCall",
																"src": "13726:31:12"
															},
															"nativeSrc": "13726:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "13726:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13773:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13773:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13776:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13776:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13766:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13766:6:12"
																},
																"nativeSrc": "13766:15:12",
																"nodeType": "YulFunctionCall",
																"src": "13766:15:12"
															},
															"nativeSrc": "13766:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "13766:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13797:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13797:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13800:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13800:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13790:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13790:6:12"
																},
																"nativeSrc": "13790:15:12",
																"nodeType": "YulFunctionCall",
																"src": "13790:15:12"
															},
															"nativeSrc": "13790:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "13790:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13684:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "13684:127:12"
											},
											{
												"body": {
													"nativeSrc": "13862:74:12",
													"nodeType": "YulBlock",
													"src": "13862:74:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13885:22:12",
																"nodeType": "YulBlock",
																"src": "13885:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13887:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "13887:16:12"
																			},
																			"nativeSrc": "13887:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13887:18:12"
																		},
																		"nativeSrc": "13887:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13887:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13882:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13882:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13875:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13875:6:12"
																},
																"nativeSrc": "13875:9:12",
																"nodeType": "YulFunctionCall",
																"src": "13875:9:12"
															},
															"nativeSrc": "13872:35:12",
															"nodeType": "YulIf",
															"src": "13872:35:12"
														},
														{
															"nativeSrc": "13916:14:12",
															"nodeType": "YulAssignment",
															"src": "13916:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13925:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13925:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13928:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13928:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13921:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13921:3:12"
																},
																"nativeSrc": "13921:9:12",
																"nodeType": "YulFunctionCall",
																"src": "13921:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13916:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "13916:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13816:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13847:1:12",
														"nodeType": "YulTypedName",
														"src": "13847:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13850:1:12",
														"nodeType": "YulTypedName",
														"src": "13850:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13856:1:12",
														"nodeType": "YulTypedName",
														"src": "13856:1:12",
														"type": ""
													}
												],
												"src": "13816:120:12"
											},
											{
												"body": {
													"nativeSrc": "13979:74:12",
													"nodeType": "YulBlock",
													"src": "13979:74:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "14002:22:12",
																"nodeType": "YulBlock",
																"src": "14002:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14004:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "14004:16:12"
																			},
																			"nativeSrc": "14004:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14004:18:12"
																		},
																		"nativeSrc": "14004:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14004:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13999:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13999:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13992:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13992:6:12"
																},
																"nativeSrc": "13992:9:12",
																"nodeType": "YulFunctionCall",
																"src": "13992:9:12"
															},
															"nativeSrc": "13989:35:12",
															"nodeType": "YulIf",
															"src": "13989:35:12"
														},
														{
															"nativeSrc": "14033:14:12",
															"nodeType": "YulAssignment",
															"src": "14033:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14042:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14042:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14045:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14045:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "14038:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14038:3:12"
																},
																"nativeSrc": "14038:9:12",
																"nodeType": "YulFunctionCall",
																"src": "14038:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14033:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "14033:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "13941:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13964:1:12",
														"nodeType": "YulTypedName",
														"src": "13964:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13967:1:12",
														"nodeType": "YulTypedName",
														"src": "13967:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13973:1:12",
														"nodeType": "YulTypedName",
														"src": "13973:1:12",
														"type": ""
													}
												],
												"src": "13941:112:12"
											},
											{
												"body": {
													"nativeSrc": "14187:145:12",
													"nodeType": "YulBlock",
													"src": "14187:145:12",
													"statements": [
														{
															"nativeSrc": "14197:26:12",
															"nodeType": "YulAssignment",
															"src": "14197:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14209:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14209:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14220:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14220:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14205:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14205:3:12"
																},
																"nativeSrc": "14205:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14205:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14197:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14197:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14239:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14239:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14254:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14254:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14270:3:12",
																								"nodeType": "YulLiteral",
																								"src": "14270:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14275:1:12",
																								"nodeType": "YulLiteral",
																								"src": "14275:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14266:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "14266:3:12"
																						},
																						"nativeSrc": "14266:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "14266:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14279:1:12",
																						"nodeType": "YulLiteral",
																						"src": "14279:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14262:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "14262:3:12"
																				},
																				"nativeSrc": "14262:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14262:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14250:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14250:3:12"
																		},
																		"nativeSrc": "14250:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14250:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14232:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14232:6:12"
																},
																"nativeSrc": "14232:51:12",
																"nodeType": "YulFunctionCall",
																"src": "14232:51:12"
															},
															"nativeSrc": "14232:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "14232:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14303:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14303:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14314:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14314:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14299:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14299:3:12"
																		},
																		"nativeSrc": "14299:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14299:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14319:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14319:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14292:6:12"
																},
																"nativeSrc": "14292:34:12",
																"nodeType": "YulFunctionCall",
																"src": "14292:34:12"
															},
															"nativeSrc": "14292:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "14292:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "14058:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14148:9:12",
														"nodeType": "YulTypedName",
														"src": "14148:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14159:6:12",
														"nodeType": "YulTypedName",
														"src": "14159:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14167:6:12",
														"nodeType": "YulTypedName",
														"src": "14167:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14178:4:12",
														"nodeType": "YulTypedName",
														"src": "14178:4:12",
														"type": ""
													}
												],
												"src": "14058:274:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_struct$_RequestData_$1769_memory_ptr__to_t_struct$_RequestData_$1769_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), iszero(iszero(mload(add(value0, 0x60)))))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let srcPtr := add(value0, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        tail := pos\n        mstore(add(headStart, 0x20), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_contract$_IPicweUSD_$1751__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IMainContract_$1731__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_cef094ec419a8d26f0cee0bf6ca74c12da636e63d15d6aaf6bbddcac6380238e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Target chain must be different f\")\n        mstore(add(headStart, 96), \"rom source chain\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aeff32d03aaba9710cd0ccac9240922a41d8498df078f913fb5acb94e4444254__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Amount must be greater than gasf\")\n        mstore(add(headStart, 96), \"ee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid target user address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_4cceca778d1073f173e5f394d55c5ec6532c1bca200859fbd309f36f371476c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Request ID already exists\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_6796245fd06a0237ef78dc4b92ce228b2aeb991d0e4ff61774e8fc1ef736486c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Source chain must be different f\")\n        mstore(add(headStart, 96), \"rom target chain\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f4f7373ef83803408a4ec524ae5f24c5a331fd25e48c69056ab32bb378845beb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid page or page size\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Stablecoin not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Stablecoin transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610228575f3560e01c8063854935f11161012a578063c5494ffb116100b4578063d547741f11610079578063d547741f146105c3578063e63ab1e9146105d6578063e74b981b146105fd578063ea277eca14610610578063eda87eff14610631575f80fd5b8063c5494ffb14610553578063c640065714610566578063c99773ce14610579578063d19fad3714610598578063d270e7ab146105ab575f80fd5b8063a217fddf116100fa578063a217fddf146104f4578063a2519ae4146104fb578063a62e1b3e1461050e578063bb93ede014610521578063bead8d2614610534575f80fd5b8063854935f11461048b57806391d148541461049e578063973697bd146104b15780639ea4f3a4146104d2575f80fd5b80632f92893c116101b6578063469048401161017b57806346904840146104305780635badbe4c1461045b5780635c975abb1461046457806375b238fc1461046f5780638456cb5914610483575f80fd5b80632f92893c146103b957806334d8c7d5146103db57806336568abe146103ee57806337174202146104015780633f4ba83a14610428575f80fd5b80631e7502d7116101fc5780631e7502d7146102935780631f224564146102b5578063248a9ca3146102c857806326757b73146102ea5780632f2ff15d146103a6575f80fd5b80626770161461022c57806301ffc9a7146102485780630bd31a571461026b5780631008776f14610280575b5f80fd5b61023560045481565b6040519081526020015b60405180910390f35b61025b610256366004611b32565b61064b565b604051901515815260200161023f565b61027e610279366004611b74565b610681565b005b61027e61028e366004611ba6565b61098d565b61025b6102a1366004611bbf565b5f9081526009602052604090205460ff1690565b61027e6102c3366004611bd6565b6109ed565b6102356102d6366004611bbf565b5f9081526020819052604090206001015490565b6103686102f8366004611bbf565b60408051608080820183525f80835260208084018290528385018290526060938401829052948152600a8552839020835191820184528054825260018101546001600160a01b03169482019490945260028401549281019290925260039092015460ff1615159181019190915290565b60405161023f9190815181526020808301516001600160a01b0316908201526040808301519082015260609182015115159181019190915260800190565b61027e6103b4366004611c12565b610c4a565b61025b6103c7366004611bbf565b60096020525f908152604090205460ff1681565b6102356103e9366004611bbf565b610c74565b61027e6103fc366004611c12565b610c93565b6102357f41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd4370481565b61027e610ccb565b600554610443906001600160a01b031681565b6040516001600160a01b03909116815260200161023f565b61023560035481565b60015460ff1661025b565b6102355f80516020611f0283398151915281565b61027e610d00565b610235610499366004611bbf565b610d32565b61025b6104ac366004611c12565b610d41565b6104c46104bf366004611c3c565b610d69565b60405161023f929190611c6c565b61025b6104e0366004611ba6565b60086020525f908152604090205460ff1681565b6102355f81565b61027e610509366004611cb8565b610fb9565b600254610443906001600160a01b031681565b6104c461052f366004611c3c565b611205565b610235610542366004611bbf565b600c6020525f908152604090205481565b61027e610561366004611bbf565b611438565b61027e610574366004611ba6565b611455565b610235610587366004611bbf565b600b6020525f908152604090205481565b61027e6105a6366004611cb8565b6114b8565b6001546104439061010090046001600160a01b031681565b61027e6105d1366004611c12565b61169d565b6102357f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b61027e61060b366004611ba6565b6116c1565b61025b61061e366004611bbf565b5f908152600a6020526040902054151590565b610639600681565b60405160ff909116815260200161023f565b5f6001600160e01b03198216637965db0b60e01b148061067b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6106896116fb565b4683036106f65760405162461bcd60e51b815260206004820152603060248201527f54617267657420636861696e206d75737420626520646966666572656e74206660448201526f3937b69039b7bab931b29031b430b4b760811b60648201526084015b60405180910390fd5b60045482116107525760405162461bcd60e51b815260206004820152602260248201527f416d6f756e74206d7573742062652067726561746572207468616e2067617366604482015261656560f01b60648201526084016106ed565b6001600160a01b0381166107a85760405162461bcd60e51b815260206004820152601b60248201527f496e76616c69642074617267657420757365722061646472657373000000000060448201526064016106ed565b5f4690505f60035f81546107bb90611cf4565b918290555060c083901b608087901b174260401b171790506107ea815f908152600a6020526040902054151590565b156108335760405162461bcd60e51b81526020600482015260196024820152785265717565737420494420616c72656164792065786973747360381b60448201526064016106ed565b5f600454856108429190611d0c565b600254600554600480546040516323b872dd60e01b815233928101929092526001600160a01b039283166024830152604482015292935016906323b872dd906064016020604051808303815f875af11580156108a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c49190611d1f565b5060025460405163079cc67960e41b8152336004820152602481018390526001600160a01b03909116906379cc6790906044015f604051808303815f87803b15801561090e575f80fd5b505af1158015610920573d5f803e3d5ffd5b505050506109318233836001611721565b60408051848152602081018890529081018290526001600160a01b0385166060820152339083907f26c32cc5ff12981b55681844f2fb47d52c5e521c58d5288b1325f3304a7e88529060800160405180910390a3505050505050565b5f80516020611f028339815191526109a48161185b565b6001600160a01b0382165f81815260086020526040808220805460ff19169055517f0fa63555fe68cad70e08233633567493a3c74afdc8c7fb9f0c03a8e74f1a137a9190a25050565b7f41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704610a178161185b565b610a1f6116fb565b468403610a875760405162461bcd60e51b815260206004820152603060248201527f536f7572636520636861696e206d75737420626520646966666572656e74206660448201526f3937b6903a30b933b2ba1031b430b4b760811b60648201526084016106ed565b5f8311610ad65760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016106ed565b6001600160a01b038216610b2c5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c69642074617267657420757365722061646472657373000000000060448201526064016106ed565b5f858152600a602052604090205415610b835760405162461bcd60e51b81526020600482015260196024820152785265717565737420494420616c72656164792065786973747360381b60448201526064016106ed565b6002546040516340c10f1960e01b81526001600160a01b03848116600483015260248201869052909116906340c10f19906044015f604051808303815f87803b158015610bce575f80fd5b505af1158015610be0573d5f803e3d5ffd5b50505050610bf08583855f611721565b604080518581524660208201529081018490526001600160a01b0383166060820152339086907f7690d9cedf96f067bda7114c24bba31be184ae045d199979a0a373862e70d46b9060800160405180910390a35050505050565b5f82815260208190526040902060010154610c648161185b565b610c6e8383611865565b50505050565b60078181548110610c83575f80fd5b5f91825260209091200154905081565b6001600160a01b0381163314610cbc5760405163334bd91960e11b815260040160405180910390fd5b610cc682826118f4565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610cf58161185b565b610cfd61195d565b50565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610d2a8161185b565b610cfd6119af565b60068181548110610c83575f80fd5b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60605f831580610d77575082155b80610d8b57505f84118015610d8b57505f83115b610dd35760405162461bcd60e51b8152602060048201526019602482015278496e76616c69642070616765206f7220706167652073697a6560381b60448201526064016106ed565b5f805b600654811015610e4257866001600160a01b0316600a5f60068481548110610e0057610e00611d3e565b5f91825260208083209091015483528201929092526040019020600101546001600160a01b031603610e3a5781610e3681611cf4565b9250505b600101610dd6565b505f818615801590610e5357505f86115b15610e9157610e628688611d52565b610e6c9084611d0c565b915082821115610e7a575f91505b610e848683611d69565b905082811115610e915750815b5f610e9c8383611d0c565b67ffffffffffffffff811115610eb457610eb4611d7c565b604051908082528060200260200182016040528015610edd578160200160208202803683370190505b506006549091505f905b5f81118015610ef65750825182105b15610fa6575f6006610f09600184611d0c565b81548110610f1957610f19611d3e565b5f918252602080832090910154808352600a9091526040909120600101549091506001600160a01b03808e16911603610f935785610f578489611d0c565b1115610f8d5780848481518110610f7057610f70611d3e565b602090810291909101015282610f8581611cf4565b935050610f93565b50610fa6565b5080610f9e81611d90565b915050610ee7565b509095509293505050505b935093915050565b6001600160a01b0382165f9081526008602052604090205460ff1661101c5760405162461bcd60e51b815260206004820152601960248201527814dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959603a1b60448201526064016106ed565b5f826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611059573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061107d9190611da5565b90505f61108c838360066119ea565b6001546040516323b872dd60e01b81523360048201526001600160a01b0361010090920482166024820152604481018690529192508516906323b872dd906064016020604051808303815f875af11580156110e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061110d9190611d1f565b6111595760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c656400000000000060448201526064016106ed565b6002546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044015f604051808303815f87803b1580156111a2575f80fd5b505af11580156111b4573d5f803e3d5ffd5b505060408051868152602081018590526001600160a01b03881693503392507f66c62f0863782653c5c44e10bf21d9def60984ce20d9f75549575a891089658791015b60405180910390a350505050565b60605f831580611213575082155b8061122757505f8411801561122757505f83115b61126f5760405162461bcd60e51b8152602060048201526019602482015278496e76616c69642070616765206f7220706167652073697a6560381b60448201526064016106ed565b5f805b6007548110156112de57866001600160a01b0316600a5f6007848154811061129c5761129c611d3e565b5f91825260208083209091015483528201929092526040019020600101546001600160a01b0316036112d657816112d281611cf4565b9250505b600101611272565b505f8186158015906112ef57505f86115b1561132d576112fe8688611d52565b6113089084611d0c565b915082821115611316575f91505b6113208683611d69565b90508281111561132d5750815b5f6113388383611d0c565b67ffffffffffffffff81111561135057611350611d7c565b604051908082528060200260200182016040528015611379578160200160208202803683370190505b506007549091505f905b5f811180156113925750825182105b15610fa6575f60076113a5600184611d0c565b815481106113b5576113b5611d3e565b5f918252602080832090910154808352600a9091526040909120600101549091506001600160a01b03808e1691160361142557856113f38489611d0c565b1115610f8d578084848151811061140c5761140c611d3e565b60209081029190910101528261142181611cf4565b9350505b508061143081611d90565b915050611383565b5f80516020611f0283398151915261144f8161185b565b50600455565b5f80516020611f0283398151915261146c8161185b565b6001600160a01b0382165f81815260086020526040808220805460ff19166001179055517fd8b2dc62b787ec8afbc8a664cf2fd7c1e7851721acc9e0069132cece3c529c2e9190a25050565b6001600160a01b0382165f9081526008602052604090205460ff1661151b5760405162461bcd60e51b815260206004820152601960248201527814dd18589b1958dbda5b881b9bdd081c9959da5cdd195c9959603a1b60448201526064016106ed565b5f826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611558573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061157c9190611da5565b90505f61158b83600684611a5c565b600154604051631795588d60e21b81526001600160a01b0387811660048301523360248301526044820184905292935061010090910490911690635e556234906064015f604051808303815f87803b1580156115e5575f80fd5b505af11580156115f7573d5f803e3d5ffd5b505060025460405163079cc67960e41b8152336004820152602481018790526001600160a01b0390911692506379cc679091506044015f604051808303815f87803b158015611644575f80fd5b505af1158015611656573d5f803e3d5ffd5b505060408051868152602081018590526001600160a01b03881693503392507f3d9842cbdfa603ab9534d6e362bf28b3061318f57fed5e7087dfc956a9d7444291016111f7565b5f828152602081905260409020600101546116b78161185b565b610c6e83836118f4565b5f80516020611f028339815191526116d88161185b565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b60015460ff161561171f5760405163d93c066560e01b815260040160405180910390fd5b565b604080516080810182528581526001600160a01b03858116602080840191825283850187815286158015606087019081525f8c8152600a909452969092208551815592516001840180546001600160a01b03191691909516179093559151600282015592516003909301805460ff191693151593909317909255906117d957600680546001810182555f919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0185905561180e565b600780546001810182555f919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018590555b81156118365760065461182390600190611d0c565b5f868152600b6020526040902055611854565b60075461184590600190611d0c565b5f868152600c60205260409020555b5050505050565b610cfd8133611ad2565b5f6118708383610d41565b6118ed575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556118a53390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161067b565b505f61067b565b5f6118ff8383610d41565b156118ed575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161067b565b611965611b0f565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6119b76116fb565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611992565b5f8160ff168360ff16036119ff575082611a55565b8160ff168360ff161015611a3357611a178383611dc5565b611a2290600a611eb9565b611a2c9085611d52565b9050611a55565b611a3d8284611dc5565b611a4890600a611eb9565b611a529085611edb565b90505b9392505050565b5f8160ff168360ff1603611a71575082611a55565b8160ff168360ff161015611a8957611a178383611dc5565b5f611a948385611dc5565b611a9f90600a611eb9565b9050611aab8186611edb565b9150611ab78186611eee565b15611aca57611ac7600183611d69565b91505b509392505050565b611adc8282610d41565b611b0b5760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016106ed565b5050565b60015460ff1661171f57604051638dfc202b60e01b815260040160405180910390fd5b5f60208284031215611b42575f80fd5b81356001600160e01b031981168114611a55575f80fd5b80356001600160a01b0381168114611b6f575f80fd5b919050565b5f805f60608486031215611b86575f80fd5b8335925060208401359150611b9d60408501611b59565b90509250925092565b5f60208284031215611bb6575f80fd5b611a5582611b59565b5f60208284031215611bcf575f80fd5b5035919050565b5f805f8060808587031215611be9575f80fd5b843593506020850135925060408501359150611c0760608601611b59565b905092959194509250565b5f8060408385031215611c23575f80fd5b82359150611c3360208401611b59565b90509250929050565b5f805f60608486031215611c4e575f80fd5b611c5784611b59565b95602085013595506040909401359392505050565b604080825283519082018190525f9060208501906060840190835b81811015611ca5578351835260209384019390920191600101611c87565b5050602093909301939093525092915050565b5f8060408385031215611cc9575f80fd5b611cd283611b59565b946020939093013593505050565b634e487b7160e01b5f52601160045260245ffd5b5f60018201611d0557611d05611ce0565b5060010190565b8181038181111561067b5761067b611ce0565b5f60208284031215611d2f575f80fd5b81518015158114611a55575f80fd5b634e487b7160e01b5f52603260045260245ffd5b808202811582820484141761067b5761067b611ce0565b8082018082111561067b5761067b611ce0565b634e487b7160e01b5f52604160045260245ffd5b5f81611d9e57611d9e611ce0565b505f190190565b5f60208284031215611db5575f80fd5b815160ff81168114611a55575f80fd5b60ff828116828216039081111561067b5761067b611ce0565b6001815b6001841115610fb157808504811115611dfd57611dfd611ce0565b6001841615611e0b57908102905b60019390931c928002611de2565b5f82611e275750600161067b565b81611e3357505f61067b565b8160018114611e495760028114611e5357611e6f565b600191505061067b565b60ff841115611e6457611e64611ce0565b50506001821b61067b565b5060208310610133831016604e8410600b8410161715611e92575081810a61067b565b611e9e5f198484611dde565b805f1904821115611eb157611eb1611ce0565b029392505050565b5f611a5560ff841683611e19565b634e487b7160e01b5f52601260045260245ffd5b5f82611ee957611ee9611ec7565b500490565b5f82611efc57611efc611ec7565b50069056fea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a264697066735822122043c091aa4a94152f4445b337be5de9e6b3d6fa063bc9244af3e6de28840319be64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x228 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x854935F1 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0xC5494FFB GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xEA277ECA EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xEDA87EFF EQ PUSH2 0x631 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC5494FFB EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xC6400657 EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xC99773CE EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xD19FAD37 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xD270E7AB EQ PUSH2 0x5AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xFA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0xA2519AE4 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA62E1B3E EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xBB93EDE0 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xBEAD8D26 EQ PUSH2 0x534 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x854935F1 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x973697BD EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x9EA4F3A4 EQ PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F92893C GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x46904840 GT PUSH2 0x17B JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x5BADBE4C EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x483 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F92893C EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x34D8C7D5 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x37174202 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x428 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E7502D7 GT PUSH2 0x1FC JUMPI DUP1 PUSH4 0x1E7502D7 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x1F224564 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x26757B73 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x677016 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xBD31A57 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x1008776F EQ PUSH2 0x280 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x235 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23F JUMP JUMPDEST PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST PUSH2 0x25B PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD6 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x235 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP4 MSTORE PUSH0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP3 SWAP1 MSTORE SWAP5 DUP2 MSTORE PUSH1 0xA DUP6 MSTORE DUP4 SWAP1 KECCAK256 DUP4 MLOAD SWAP2 DUP3 ADD DUP5 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x25B PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x3FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x235 PUSH32 0x41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704 DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x443 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23F JUMP JUMPDEST PUSH2 0x235 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x25B JUMP JUMPDEST PUSH2 0x235 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP3 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x25B PUSH2 0x4E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x443 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x561 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x574 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x443 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x5D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x169D JUMP JUMPDEST PUSH2 0x235 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x61E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x639 PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x67B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x689 PUSH2 0x16FB JUMP JUMPDEST CHAINID DUP4 SUB PUSH2 0x6F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420636861696E206D75737420626520646966666572656E742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3937B69039B7BAB931B29031B430B4B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2067617366 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746172676574207573657220616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 CHAINID SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP2 SLOAD PUSH2 0x7BB SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP PUSH1 0xC0 DUP4 SWAP1 SHL PUSH1 0x80 DUP8 SWAP1 SHL OR TIMESTAMP PUSH1 0x40 SHL OR OR SWAP1 POP PUSH2 0x7EA DUP2 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x5265717565737420494420616C726561647920657869737473 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD DUP6 PUSH2 0x842 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x931 DUP3 CALLER DUP4 PUSH1 0x1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 DUP4 SWAP1 PUSH32 0x26C32CC5FF12981B55681844F2FB47D52C5E521C58D5288B1325F3304A7E8852 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9A4 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xFA63555FE68CAD70E08233633567493A3C74AFDC8C7FB9F0C03A8E74F1A137A SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704 PUSH2 0xA17 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xA1F PUSH2 0x16FB JUMP JUMPDEST CHAINID DUP5 SUB PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7572636520636861696E206D75737420626520646966666572656E742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3937B6903A30B933B2BA1031B430B4B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746172676574207573657220616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x5265717565737420494420616C726561647920657869737473 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xBF0 DUP6 DUP4 DUP6 PUSH0 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE CHAINID PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 DUP7 SWAP1 PUSH32 0x7690D9CEDF96F067BDA7114C24BBA31BE184AE045D199979A0A373862E70D46B SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xC64 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xC6E DUP4 DUP4 PUSH2 0x1865 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC83 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC6 DUP3 DUP3 PUSH2 0x18F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xCF5 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xCFD PUSH2 0x195D JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD2A DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xCFD PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC83 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 ISZERO DUP1 PUSH2 0xD77 JUMPI POP DUP3 ISZERO JUMPDEST DUP1 PUSH2 0xD8B JUMPI POP PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0xD8B JUMPI POP PUSH0 DUP4 GT JUMPDEST PUSH2 0xDD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x496E76616C69642070616765206F7220706167652073697A65 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xE42 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA PUSH0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE00 JUMPI PUSH2 0xE00 PUSH2 0x1D3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE3A JUMPI DUP2 PUSH2 0xE36 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xDD6 JUMP JUMPDEST POP PUSH0 DUP2 DUP7 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE53 JUMPI POP PUSH0 DUP7 GT JUMPDEST ISZERO PUSH2 0xE91 JUMPI PUSH2 0xE62 DUP7 DUP9 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0xE6C SWAP1 DUP5 PUSH2 0x1D0C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 GT ISZERO PUSH2 0xE7A JUMPI PUSH0 SWAP2 POP JUMPDEST PUSH2 0xE84 DUP7 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0xE91 JUMPI POP DUP2 JUMPDEST PUSH0 PUSH2 0xE9C DUP4 DUP4 PUSH2 0x1D0C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xEB4 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEDD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xEF6 JUMPI POP DUP3 MLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0xFA6 JUMPI PUSH0 PUSH1 0x6 PUSH2 0xF09 PUSH1 0x1 DUP5 PUSH2 0x1D0C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF19 JUMPI PUSH2 0xF19 PUSH2 0x1D3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND SWAP2 AND SUB PUSH2 0xF93 JUMPI DUP6 PUSH2 0xF57 DUP5 DUP10 PUSH2 0x1D0C JUMP JUMPDEST GT ISZERO PUSH2 0xF8D JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF70 JUMPI PUSH2 0xF70 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP3 PUSH2 0xF85 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP4 POP POP PUSH2 0xF93 JUMP JUMPDEST POP PUSH2 0xFA6 JUMP JUMPDEST POP DUP1 PUSH2 0xF9E DUP2 PUSH2 0x1D90 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEE7 JUMP JUMPDEST POP SWAP1 SWAP6 POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1059 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x108C DUP4 DUP4 PUSH1 0x6 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP3 DIV DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP4 POP CALLER SWAP3 POP PUSH32 0x66C62F0863782653C5C44E10BF21D9DEF60984CE20D9F75549575A8910896587 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 ISZERO DUP1 PUSH2 0x1213 JUMPI POP DUP3 ISZERO JUMPDEST DUP1 PUSH2 0x1227 JUMPI POP PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0x1227 JUMPI POP PUSH0 DUP4 GT JUMPDEST PUSH2 0x126F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x496E76616C69642070616765206F7220706167652073697A65 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x12DE JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA PUSH0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x129C JUMPI PUSH2 0x129C PUSH2 0x1D3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x12D6 JUMPI DUP2 PUSH2 0x12D2 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1272 JUMP JUMPDEST POP PUSH0 DUP2 DUP7 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x12EF JUMPI POP PUSH0 DUP7 GT JUMPDEST ISZERO PUSH2 0x132D JUMPI PUSH2 0x12FE DUP7 DUP9 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1308 SWAP1 DUP5 PUSH2 0x1D0C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 GT ISZERO PUSH2 0x1316 JUMPI PUSH0 SWAP2 POP JUMPDEST PUSH2 0x1320 DUP7 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x132D JUMPI POP DUP2 JUMPDEST PUSH0 PUSH2 0x1338 DUP4 DUP4 PUSH2 0x1D0C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1350 JUMPI PUSH2 0x1350 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1379 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x1392 JUMPI POP DUP3 MLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0xFA6 JUMPI PUSH0 PUSH1 0x7 PUSH2 0x13A5 PUSH1 0x1 DUP5 PUSH2 0x1D0C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x13B5 JUMPI PUSH2 0x13B5 PUSH2 0x1D3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND SWAP2 AND SUB PUSH2 0x1425 JUMPI DUP6 PUSH2 0x13F3 DUP5 DUP10 PUSH2 0x1D0C JUMP JUMPDEST GT ISZERO PUSH2 0xF8D JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x140C JUMPI PUSH2 0x140C PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP3 PUSH2 0x1421 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0x1430 DUP2 PUSH2 0x1D90 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1383 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x144F DUP2 PUSH2 0x185B JUMP JUMPDEST POP PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x146C DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xD8B2DC62B787EC8AFBC8A664CF2FD7C1E7851721ACC9E0069132CECE3C529C2E SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x151B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6ED JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1558 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x157C SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x158B DUP4 PUSH1 0x6 DUP5 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1795588D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP PUSH2 0x100 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0x5E556234 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x79CC6790 SWAP2 POP PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1644 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1656 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP4 POP CALLER SWAP3 POP PUSH32 0x3D9842CBDFA603AB9534D6E362BF28B3061318F57FED5E7087DFC956A9D74442 SWAP2 ADD PUSH2 0x11F7 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x16B7 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xC6E DUP4 DUP4 PUSH2 0x18F4 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x16D8 DUP2 PUSH2 0x185B JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x171F JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP4 DUP6 ADD DUP8 DUP2 MSTORE DUP7 ISZERO DUP1 ISZERO PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH0 DUP13 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP5 MSTORE SWAP7 SWAP1 SWAP3 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 PUSH2 0x17D9 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP6 SWAP1 SSTORE PUSH2 0x180E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP6 SWAP1 SSTORE JUMPDEST DUP2 ISZERO PUSH2 0x1836 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1823 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH0 DUP7 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1845 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCFD DUP2 CALLER PUSH2 0x1AD2 JUMP JUMPDEST PUSH0 PUSH2 0x1870 DUP4 DUP4 PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x18ED JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x18A5 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x67B JUMP JUMPDEST POP PUSH0 PUSH2 0x67B JUMP JUMPDEST PUSH0 PUSH2 0x18FF DUP4 DUP4 PUSH2 0xD41 JUMP JUMPDEST ISZERO PUSH2 0x18ED JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x1965 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x19B7 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1992 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x19FF JUMPI POP DUP3 PUSH2 0x1A55 JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO PUSH2 0x1A33 JUMPI PUSH2 0x1A17 DUP4 DUP4 PUSH2 0x1DC5 JUMP JUMPDEST PUSH2 0x1A22 SWAP1 PUSH1 0xA PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x1A2C SWAP1 DUP6 PUSH2 0x1D52 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x1A3D DUP3 DUP5 PUSH2 0x1DC5 JUMP JUMPDEST PUSH2 0x1A48 SWAP1 PUSH1 0xA PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x1A52 SWAP1 DUP6 PUSH2 0x1EDB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x1A71 JUMPI POP DUP3 PUSH2 0x1A55 JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO PUSH2 0x1A89 JUMPI PUSH2 0x1A17 DUP4 DUP4 PUSH2 0x1DC5 JUMP JUMPDEST PUSH0 PUSH2 0x1A94 DUP4 DUP6 PUSH2 0x1DC5 JUMP JUMPDEST PUSH2 0x1A9F SWAP1 PUSH1 0xA PUSH2 0x1EB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AAB DUP2 DUP7 PUSH2 0x1EDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB7 DUP2 DUP7 PUSH2 0x1EEE JUMP JUMPDEST ISZERO PUSH2 0x1ACA JUMPI PUSH2 0x1AC7 PUSH1 0x1 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1ADC DUP3 DUP3 PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x1B0B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x171F JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1A55 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B6F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B86 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1B9D PUSH1 0x40 DUP6 ADD PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A55 DUP3 PUSH2 0x1B59 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1C07 PUSH1 0x60 DUP7 ADD PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C23 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1C33 PUSH1 0x20 DUP5 ADD PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C4E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C57 DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CA5 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C87 JUMP JUMPDEST POP POP PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CD2 DUP4 PUSH2 0x1B59 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D05 JUMPI PUSH2 0x1D05 PUSH2 0x1CE0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x67B JUMPI PUSH2 0x67B PUSH2 0x1CE0 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D2F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A55 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x67B JUMPI PUSH2 0x67B PUSH2 0x1CE0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x67B JUMPI PUSH2 0x67B PUSH2 0x1CE0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH2 0x1D9E JUMPI PUSH2 0x1D9E PUSH2 0x1CE0 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1A55 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x67B JUMPI PUSH2 0x67B PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0xFB1 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x1DFD JUMPI PUSH2 0x1DFD PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1E0B JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x1DE2 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1E27 JUMPI POP PUSH1 0x1 PUSH2 0x67B JUMP JUMPDEST DUP2 PUSH2 0x1E33 JUMPI POP PUSH0 PUSH2 0x67B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1E49 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1E53 JUMPI PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1E64 JUMPI PUSH2 0x1E64 PUSH2 0x1CE0 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x67B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1E92 JUMPI POP DUP2 DUP2 EXP PUSH2 0x67B JUMP JUMPDEST PUSH2 0x1E9E PUSH0 NOT DUP5 DUP5 PUSH2 0x1DDE JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1EB1 JUMPI PUSH2 0x1EB1 PUSH2 0x1CE0 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A55 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1E19 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1EE9 JUMPI PUSH2 0x1EE9 PUSH2 0x1EC7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1EFC JUMPI PUSH2 0x1EFC PUSH2 0x1EC7 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA264697066735822122043C091AA4A94152F4445B337 0xBE TSTORE 0xE9 0xE6 0xB3 0xD6 STATICCALL MOD EXTCODESIZE 0xC9 0x24 BLOBBASEFEE RETURN 0xE6 0xDE 0x28 DUP5 SUB NOT 0xBE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "534:16945:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;969:35;;;;;;;;;160:25:12;;;148:2;133:18;969:35:11;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;652:14:12;;645:22;627:41;;615:2;600:18;2565:202:0;487:187:12;7622:944:11;;;;;;:::i;:::-;;:::i;:::-;;4459:181;;;;;;:::i;:::-;;:::i;10114:122::-;;;;;;:::i;:::-;10179:4;10203:25;;;:14;:25;;;;;;;;;10114:122;9413:693;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;10607:131:11;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10710:20:11;;;:8;:20;;;;;10703:27;;;;;;;;;;;;;;;-1:-1:-1;;;;;10703:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10607:131;;;;;;;2886:13:12;;2868:32;;2960:4;2948:17;;;2942:24;-1:-1:-1;;;;;2938:50:12;2916:20;;;2909:80;3045:4;3033:17;;;3027:24;3005:20;;;2998:54;3122:4;3110:17;;;3104:24;3097:32;3090:40;3068:20;;;3061:70;;;;2855:3;2840:19;;2663:474;4226:136:0;;;;;;:::i;:::-;;:::i;1197:46:11:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1091:37;;;;;;:::i;:::-;;:::i;5328:245:0:-;;;;;;:::i;:::-;;:::i;766:86:11:-;;816:36;766:86;;2730:77;;;:::i;1011:27::-;;;;;-1:-1:-1;;;;;1011:27:11;;;;;;-1:-1:-1;;;;;3611:32:12;;;3593:51;;3581:2;3566:18;1011:27:11;3447:203:12;888:27:11;;;;;;1850:84:5;1920:7;;;;1850:84;;630:60:11;;-1:-1:-1;;;;;;;;;;;630:60:11;;2649:73;;;:::i;1047:37::-;;;;;;:::i;:::-;;:::i;2854:136:0:-;;;;;;:::i;:::-;;:::i;11784:1495:11:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1137:53::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2187:49:0;;2232:4;2187:49;;5163:636:11;;;;;;:::i;:::-;;:::i;859:22::-;;;;;-1:-1:-1;;;;;859:22:11;;;13903:1495;;;;;;:::i;:::-;;:::i;1377:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3086:101;;;;;;:::i;:::-;;:::i;3954:185::-;;;;;;:::i;:::-;;:::i;1307:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;6314:591;;;;;;:::i;:::-;;:::i;590:33::-;;;;;;;;-1:-1:-1;;;;;590:33:11;;;4642:138:0;;;;;;:::i;:::-;;:::i;697:62:11:-;;735:24;697:62;;3497:125;;;;;;:::i;:::-;;:::i;11017:131::-;;;;;;:::i;:::-;11081:4;11105:20;;;:8;:20;;;;;:30;:35;;;11017:131;922:40;;961:1;922:40;;;;;5708:4:12;5696:17;;;5678:36;;5666:2;5651:18;922:40:11;5536:184:12;2565:202:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;861:40:6;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;7622:944:11:-;1474:19:5;:17;:19::i;:::-;7769:13:11::1;7752;:30:::0;7744:91:::1;;;::::0;-1:-1:-1;;;7744:91:11;;5927:2:12;7744:91:11::1;::::0;::::1;5909:21:12::0;5966:2;5946:18;;;5939:30;6005:34;5985:18;;;5978:62;-1:-1:-1;;;6056:18:12;;;6049:46;6112:19;;7744:91:11::1;;;;;;;;;7863:6;;7854;:15;7846:62;;;::::0;-1:-1:-1;;;7846:62:11;;6344:2:12;7846:62:11::1;::::0;::::1;6326:21:12::0;6383:2;6363:18;;;6356:30;6422:34;6402:18;;;6395:62;-1:-1:-1;;;6473:18:12;;;6466:32;6515:19;;7846:62:11::1;6142:398:12::0;7846:62:11::1;-1:-1:-1::0;;;;;7927:24:11;::::1;7919:64;;;::::0;-1:-1:-1;;;7919:64:11;;6747:2:12;7919:64:11::1;::::0;::::1;6729:21:12::0;6786:2;6766:18;;;6759:30;6825:29;6805:18;;;6798:57;6872:18;;7919:64:11::1;6545:351:12::0;7919:64:11::1;7994:21;8018:13;7994:37;;8042:17;8140:12;;8138:14;;;;;:::i;:::-;::::0;;;;-1:-1:-1;8080:3:11::1;8063:20:::0;;::::1;8105:3;8088:20:::0;;::::1;8062:47;8113:15;8132:2;8113:21;8062:73;:90;::::0;-1:-1:-1;8172:24:11::1;8062:90:::0;11081:4;11105:20;;;:8;:20;;;;;:30;:35;;;11017:131;8172:24:::1;8171:25;8163:63;;;::::0;-1:-1:-1;;;8163:63:11;;7375:2:12;8163:63:11::1;::::0;::::1;7357:21:12::0;7414:2;7394:18;;;7387:30;-1:-1:-1;;;7433:18:12;;;7426:55;7498:18;;8163:63:11::1;7173:349:12::0;8163:63:11::1;8237:18;8267:6;;8258;:15;;;;:::i;:::-;8284:5;::::0;8315:12:::1;::::0;8329:6:::1;::::0;;8284:52:::1;::::0;-1:-1:-1;;;8284:52:11;;8303:10:::1;8284:52:::0;;::::1;7862:51:12::0;;;;-1:-1:-1;;;;;8315:12:11;;::::1;7929:18:12::0;;;7922:60;7998:18;;;7991:34;8237:36:11;;-1:-1:-1;8284:5:11::1;::::0;:18:::1;::::0;7835::12;;8284:52:11::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8347:5:11::1;::::0;:38:::1;::::0;-1:-1:-1;;;8347:38:11;;8362:10:::1;8347:38;::::0;::::1;8492:51:12::0;8559:18;;;8552:34;;;-1:-1:-1;;;;;8347:5:11;;::::1;::::0;:14:::1;::::0;8465:18:12;;8347:38:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8396:55;8411:9;8422:10;8434;8446:4;8396:14;:55::i;:::-;8467:91;::::0;;8828:25:12;;;8884:2;8869:18;;8862:34;;;8912:18;;;8905:34;;;-1:-1:-1;;;;;8975:32:12;;8970:2;8955:18;;8948:60;8493:10:11::1;::::0;8482:9;;8467:91:::1;::::0;8815:3:12;8800:19;8467:91:11::1;;;;;;;7733:833;;;7622:944:::0;;;:::o;4459:181::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;4546:33:11;::::1;4582:5;4546:33:::0;;;:21:::1;:33;::::0;;;;;:41;;-1:-1:-1;;4546:41:11::1;::::0;;4603:29;::::1;::::0;4582:5;4603:29:::1;4459:181:::0;;:::o;9413:693::-;816:36;2464:16:0;2475:4;2464:10;:16::i;:::-;1474:19:5::1;:17;:19::i;:::-;9613:13:11::2;9596;:30:::0;9588:91:::2;;;::::0;-1:-1:-1;;;9588:91:11;;9221:2:12;9588:91:11::2;::::0;::::2;9203:21:12::0;9260:2;9240:18;;;9233:30;9299:34;9279:18;;;9272:62;-1:-1:-1;;;9350:18:12;;;9343:46;9406:19;;9588:91:11::2;9019:412:12::0;9588:91:11::2;9707:1;9698:6;:10;9690:52;;;::::0;-1:-1:-1;;;9690:52:11;;9638:2:12;9690:52:11::2;::::0;::::2;9620:21:12::0;9677:2;9657:18;;;9650:30;9716:31;9696:18;;;9689:59;9765:18;;9690:52:11::2;9436:353:12::0;9690:52:11::2;-1:-1:-1::0;;;;;9761:24:11;::::2;9753:64;;;::::0;-1:-1:-1;;;9753:64:11;;6747:2:12;9753:64:11::2;::::0;::::2;6729:21:12::0;6786:2;6766:18;;;6759:30;6825:29;6805:18;;;6798:57;6872:18;;9753:64:11::2;6545:351:12::0;9753:64:11::2;11081:4:::0;11105:20;;;:8;:20;;;;;:30;:35;9828:63:::2;;;::::0;-1:-1:-1;;;9828:63:11;;7375:2:12;9828:63:11::2;::::0;::::2;7357:21:12::0;7414:2;7394:18;;;7387:30;-1:-1:-1;;;7433:18:12;;;7426:55;7498:18;;9828:63:11::2;7173:349:12::0;9828:63:11::2;9902:5;::::0;:30:::2;::::0;-1:-1:-1;;;9902:30:11;;-1:-1:-1;;;;;8510:32:12;;;9902:30:11::2;::::0;::::2;8492:51:12::0;8559:18;;;8552:34;;;9902:5:11;;::::2;::::0;:10:::2;::::0;8465:18:12;;9902:30:11::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;9943:52;9958:9;9969:10;9981:6;9989:5;9943:14;:52::i;:::-;10011:87;::::0;;8828:25:12;;;10064:13:11::2;8884:2:12::0;8869:18;;8862:34;8912:18;;;8905:34;;;-1:-1:-1;;;;;8975:32:12;;8970:2;8955:18;;8948:60;10037:10:11::2;::::0;10026:9;;10011:87:::2;::::0;8815:3:12;8800:19;10011:87:11::2;;;;;;;9413:693:::0;;;;;:::o;4226:136:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;1091:37:11:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1091:37:11;:::o;5328:245:0:-;-1:-1:-1;;;;;5421:34:0;;735:10:4;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2730:77:11:-;735:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2789:10:11::1;:8;:10::i;:::-;2730:77:::0;:::o;2649:73::-;735:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2706:8:11::1;:6;:8::i;1047:37::-:0;;;;;;;;;;;;2854:136:0;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;11784:1495:11:-;11885:16;11903:7;11931:10;;;:28;;-1:-1:-1;11945:14:11;;11931:28;:60;;;;11972:1;11964:5;:9;:26;;;;;11989:1;11977:9;:13;11964:26;11923:98;;;;-1:-1:-1;;;11923:98:11;;9996:2:12;11923:98:11;;;9978:21:12;10035:2;10015:18;;;10008:30;-1:-1:-1;;;10054:18:12;;;10047:55;10119:18;;11923:98:11;9794:349:12;11923:98:11;12034:21;12075:9;12070:187;12094:20;:27;12090:31;;12070:187;;;12189:5;-1:-1:-1;;;;;12147:47:11;:8;:33;12156:20;12177:1;12156:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;12147:33;;;;;;;;;;;;:38;;;-1:-1:-1;;;;;12147:38:11;:47;12143:103;;12215:15;;;;:::i;:::-;;;;12143:103;12123:3;;12070:187;;;-1:-1:-1;12269:18:11;12321:13;12351:9;;;;;:26;;;12376:1;12364:9;:13;12351:26;12347:285;;;12424:17;12432:9;12424:5;:17;:::i;:::-;12407:35;;:13;:35;:::i;:::-;12394:48;;12474:13;12461:10;:26;12457:46;;;12502:1;12489:14;;12457:46;12529:22;12542:9;12529:10;:22;:::i;:::-;12518:33;;12581:13;12570:8;:24;12566:54;;;-1:-1:-1;12607:13:11;12566:54;12644:35;12696:21;12707:10;12696:8;:21;:::i;:::-;12682:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12682:36:11;-1:-1:-1;12776:20:11;:27;12644:74;;-1:-1:-1;12729:13:11;;12759:458;12809:1;12805;:5;:42;;;;;12822:18;:25;12814:5;:33;12805:42;12759:458;;;12869:17;12889:20;12910:3;12912:1;12910;:3;:::i;:::-;12889:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;12933:19;;;:8;:19;;;;;;;:24;;;12889:25;;-1:-1:-1;;;;;;12933:33:11;;;:24;;:33;12929:277;;13015:10;12991:21;13007:5;12991:13;:21;:::i;:::-;:34;12987:204;;;13078:9;13050:18;13069:5;13050:25;;;;;;;;:::i;:::-;;;;;;;;;;:37;13110:7;;;;:::i;:::-;;;;12987:204;;;13166:5;;;12987:204;-1:-1:-1;12849:3:11;;;;:::i;:::-;;;;12759:458;;;-1:-1:-1;13237:18:11;;-1:-1:-1;13257:13:11;;-1:-1:-1;;;;11784:1495:11;;;;;;;:::o;5163:636::-;-1:-1:-1;;;;;5256:33:11;;;;;;:21;:33;;;;;;;;5248:71;;;;-1:-1:-1;;;5248:71:11;;11058:2:12;5248:71:11;;;11040:21:12;11097:2;11077:18;;;11070:30;-1:-1:-1;;;11116:18:12;;;11109:55;11181:18;;5248:71:11;10856:349:12;5248:71:11;5330:24;5372:10;-1:-1:-1;;;;;5357:35:11;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5330:64;;5405:19;5427:69;5443:16;5461:18;961:1;5427:15;:69::i;:::-;5600:12;;5548:84;;-1:-1:-1;;;5548:84:11;;5580:10;5548:84;;;7862:51:12;-1:-1:-1;;;;;5600:12:11;;;;;;7929:18:12;;;7922:60;7998:18;;;7991:34;;;5405:91:11;;-1:-1:-1;5548:31:11;;;;;7835:18:12;;5548:84:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5540:123;;;;-1:-1:-1;;;5540:123:11;;11690:2:12;5540:123:11;;;11672:21:12;11729:2;11709:18;;;11702:30;11768:28;11748:18;;;11741:56;11814:18;;5540:123:11;11488:350:12;5540:123:11;5674:5;;:35;;-1:-1:-1;;;5674:35:11;;5685:10;5674:35;;;8492:51:12;8559:18;;;8552:34;;;-1:-1:-1;;;;;5674:5:11;;;;:10;;8465:18:12;;5674:35:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5725:66:11;;;12017:25:12;;;12073:2;12058:18;;12051:34;;;-1:-1:-1;;;;;5725:66:11;;;-1:-1:-1;5737:10:11;;-1:-1:-1;5725:66:11;;11990:18:12;5725:66:11;;;;;;;;5237:562;;5163:636;;:::o;13903:1495::-;14004:16;14022:7;14050:10;;;:28;;-1:-1:-1;14064:14:11;;14050:28;:60;;;;14091:1;14083:5;:9;:26;;;;;14108:1;14096:9;:13;14083:26;14042:98;;;;-1:-1:-1;;;14042:98:11;;9996:2:12;14042:98:11;;;9978:21:12;10035:2;10015:18;;;10008:30;-1:-1:-1;;;10054:18:12;;;10047:55;10119:18;;14042:98:11;9794:349:12;14042:98:11;14153:21;14194:9;14189:187;14213:20;:27;14209:31;;14189:187;;;14308:5;-1:-1:-1;;;;;14266:47:11;:8;:33;14275:20;14296:1;14275:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;14266:33;;;;;;;;;;;;:38;;;-1:-1:-1;;;;;14266:38:11;:47;14262:103;;14334:15;;;;:::i;:::-;;;;14262:103;14242:3;;14189:187;;;-1:-1:-1;14388:18:11;14440:13;14470:9;;;;;:26;;;14495:1;14483:9;:13;14470:26;14466:285;;;14543:17;14551:9;14543:5;:17;:::i;:::-;14526:35;;:13;:35;:::i;:::-;14513:48;;14593:13;14580:10;:26;14576:46;;;14621:1;14608:14;;14576:46;14648:22;14661:9;14648:10;:22;:::i;:::-;14637:33;;14700:13;14689:8;:24;14685:54;;;-1:-1:-1;14726:13:11;14685:54;14763:35;14815:21;14826:10;14815:8;:21;:::i;:::-;14801:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14801:36:11;-1:-1:-1;14895:20:11;:27;14763:74;;-1:-1:-1;14848:13:11;;14878:458;14928:1;14924;:5;:42;;;;;14941:18;:25;14933:5;:33;14924:42;14878:458;;;14988:17;15008:20;15029:3;15031:1;15029;:3;:::i;:::-;15008:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;15052:19;;;:8;:19;;;;;;;:24;;;15008:25;;-1:-1:-1;;;;;;15052:33:11;;;:24;;:33;15048:277;;15134:10;15110:21;15126:5;15110:13;:21;:::i;:::-;:34;15106:204;;;15197:9;15169:18;15188:5;15169:25;;;;;;;;:::i;:::-;;;;;;;;;;:37;15229:7;;;;:::i;:::-;;;;15106:204;-1:-1:-1;14968:3:11;;;;:::i;:::-;;;;14878:458;;3086:101;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;3163:6:11::1;:16:::0;3086:101::o;3954:185::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;4043:33:11;::::1;;::::0;;;:21:::1;:33;::::0;;;;;:40;;-1:-1:-1;;4043:40:11::1;4079:4;4043:40;::::0;;4099:32;::::1;::::0;4043:33;4099:32:::1;3954:185:::0;;:::o;6314:591::-;-1:-1:-1;;;;;6402:33:11;;;;;;:21;:33;;;;;;;;6394:71;;;;-1:-1:-1;;;6394:71:11;;11058:2:12;6394:71:11;;;11040:21:12;11097:2;11077:18;;;11070:30;-1:-1:-1;;;11116:18:12;;;11109:55;11181:18;;6394:71:11;10856:349:12;6394:71:11;6476:24;6518:10;-1:-1:-1;;;;;6503:35:11;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6476:64;;6551:24;6578:68;6598:11;961:1;6627:18;6578:19;:68::i;:::-;6692:12;;:73;;-1:-1:-1;;;6692:73:11;;-1:-1:-1;;;;;7880:32:12;;;6692:73:11;;;7862:51:12;6736:10:11;7929:18:12;;;7922:60;7998:18;;;7991:34;;;6551:95:11;;-1:-1:-1;6692:12:11;;;;;;;;:31;;7835:18:12;;6692:73:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6776:5:11;;:39;;-1:-1:-1;;;6776:39:11;;6791:10;6776:39;;;8492:51:12;8559:18;;;8552:34;;;-1:-1:-1;;;;;6776:5:11;;;;-1:-1:-1;6776:14:11;;-1:-1:-1;8465:18:12;;6776:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6831:66:11;;;12017:25:12;;;12073:2;12058:18;;12051:34;;;-1:-1:-1;;;;;6831:66:11;;;-1:-1:-1;6843:10:11;;-1:-1:-1;6831:66:11;;11990:18:12;6831:66:11;11843:248:12;4642:138:0;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;3497:125:11:-:0;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;3586:12:11::1;:28:::0;;-1:-1:-1;;;;;;3586:28:11::1;-1:-1:-1::0;;;;;3586:28:11;;;::::1;::::0;;;::::1;::::0;;3497:125::o;2002:128:5:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:5;;;;;;;;;;;2063:61;2002:128::o;15666:735:11:-;15813:146;;;;;;;;;;;-1:-1:-1;;;;;15813:146:11;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15980:20:11;;;:8;:20;;;;;;;:33;;;;;;;;;;;-1:-1:-1;;;;;;15980:33:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15980:33:11;;;;;;;;;;;15813:146;16024:143;;16050:20;:37;;;;;;;-1:-1:-1;16050:37:11;;;;;;;;;16024:143;;;16118:20;:37;;;;;;;-1:-1:-1;16118:37:11;;;;;;;;;16024:143;16180:7;16177:217;;;16246:20;:27;:31;;16276:1;;16246:31;:::i;:::-;16203:40;;;;:28;:40;;;;;:74;16177:217;;;16351:20;:27;:31;;16381:1;;16351:31;:::i;:::-;16308:40;;;;:28;:40;;;;;:74;16177:217;15765:636;15666:735;;;;:::o;3199:103:0:-;3265:30;3276:4;735:10:4;3265::0;:30::i;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:4;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6730:317;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:12;;;;;;;;;;;-1:-1:-1;;;;;6866:29:0;;;;;;;;;;:37;;-1:-1:-1;;6866:37:0;;;6922:40;735:10:4;;6866:12:0;;6922:40;;6898:5;6922:40;-1:-1:-1;6983:4:0;6976:11;;2710:117:5;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:5::1;::::0;;2798:22:::1;735:10:4::0;2807:12:5::1;2798:22;::::0;-1:-1:-1;;;;;3611:32:12;;;3593:51;;3581:2;3566:18;2798:22:5::1;;;;;;;2710:117::o:0;2463:115::-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:14:::0;;-1:-1:-1;;2522:14:5::1;::::0;::::1;::::0;;2551:20:::1;735:10:4::0;2558:12:5::1;656:96:4::0;16411:469:11;16552:14;16601;16583:32;;:14;:32;;;16579:294;;-1:-1:-1;16641:5:11;16579:294;;;16685:14;16668:31;;:14;:31;;;16664:209;;;16739:31;16756:14;16739;:31;:::i;:::-;16734:37;;:2;:37;:::i;:::-;16725:47;;:5;:47;:::i;:::-;16716:56;;16664:209;;;16828:31;16845:14;16828;:31;:::i;:::-;16823:37;;:2;:37;:::i;:::-;16814:47;;:5;:47;:::i;:::-;16805:56;;16664:209;16411:469;;;;;:::o;16888:588::-;17033:14;17082;17064:32;;:14;:32;;;17060:409;;-1:-1:-1;17122:5:11;17060:409;;;17166:14;17149:31;;:14;:31;;;17145:324;;;17220:31;17237:14;17220;:31;:::i;17145:324::-;17286:12;17306:31;17323:14;17306;:31;:::i;:::-;17301:37;;:2;:37;:::i;:::-;17286:52;-1:-1:-1;17362:12:11;17286:52;17362:5;:12;:::i;:::-;17353:21;-1:-1:-1;17393:12:11;17401:4;17393:5;:12;:::i;:::-;:17;17389:69;;17431:11;17441:1;17431:11;;:::i;:::-;;;17389:69;17271:198;16888:588;;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;8510:32:12;;3565:47:0;;;8492:51:12;8559:18;;;8552:34;;;8465:18;;3565:47:0;8318:274:12;3515:108:0;3432:197;;:::o;2202:126:5:-;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:5;;;;;;;;;;;196:286:12;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;349:23;;-1:-1:-1;;;;;;401:32:12;;391:43;;381:71;;448:1;445;438:12;679:173;747:20;;-1:-1:-1;;;;;796:31:12;;786:42;;776:70;;842:1;839;832:12;776:70;679:173;;;:::o;857:420::-;934:6;942;950;1003:2;991:9;982:7;978:23;974:32;971:52;;;1019:1;1016;1009:12;971:52;1064:23;;;-1:-1:-1;1184:2:12;1169:18;;1156:32;;-1:-1:-1;1233:38:12;1267:2;1252:18;;1233:38;:::i;:::-;1223:48;;857:420;;;;;:::o;1282:186::-;1341:6;1394:2;1382:9;1373:7;1369:23;1365:32;1362:52;;;1410:1;1407;1400:12;1362:52;1433:29;1452:9;1433:29;:::i;1473:226::-;1532:6;1585:2;1573:9;1564:7;1560:23;1556:32;1553:52;;;1601:1;1598;1591:12;1553:52;-1:-1:-1;1646:23:12;;1473:226;-1:-1:-1;1473:226:12:o;1704:541::-;1790:6;1798;1806;1814;1867:3;1855:9;1846:7;1842:23;1838:33;1835:53;;;1884:1;1881;1874:12;1835:53;1929:23;;;-1:-1:-1;2049:2:12;2034:18;;2021:32;;-1:-1:-1;2152:2:12;2137:18;;2124:32;;-1:-1:-1;2201:38:12;2235:2;2220:18;;2201:38;:::i;:::-;2191:48;;1704:541;;;;;;;:::o;3142:300::-;3210:6;3218;3271:2;3259:9;3250:7;3246:23;3242:32;3239:52;;;3287:1;3284;3277:12;3239:52;3332:23;;;-1:-1:-1;3398:38:12;3432:2;3417:18;;3398:38;:::i;:::-;3388:48;;3142:300;;;;;:::o;3655:420::-;3732:6;3740;3748;3801:2;3789:9;3780:7;3776:23;3772:32;3769:52;;;3817:1;3814;3807:12;3769:52;3840:29;3859:9;3840:29;:::i;:::-;3830:39;3938:2;3923:18;;3910:32;;-1:-1:-1;4039:2:12;4024:18;;;4011:32;;3655:420;-1:-1:-1;;;3655:420:12:o;4080:690::-;4298:2;4310:21;;;4380:13;;4283:18;;;4402:22;;;4250:4;;4493;4481:17;;;4455:2;4440:18;;;4250:4;4526:173;4540:6;4537:1;4534:13;4526:173;;;4601:13;;4589:26;;4644:4;4672:17;;;;4635:14;;;;4562:1;4555:9;4526:173;;;-1:-1:-1;;4750:4:12;4735:20;;;;4728:36;;;;-1:-1:-1;4716:3:12;4080:690;-1:-1:-1;;4080:690:12:o;4775:300::-;4843:6;4851;4904:2;4892:9;4883:7;4879:23;4875:32;4872:52;;;4920:1;4917;4910:12;4872:52;4943:29;4962:9;4943:29;:::i;:::-;4933:39;5041:2;5026:18;;;;5013:32;;-1:-1:-1;;;4775:300:12:o;6901:127::-;6962:10;6957:3;6953:20;6950:1;6943:31;6993:4;6990:1;6983:15;7017:4;7014:1;7007:15;7033:135;7072:3;7093:17;;;7090:43;;7113:18;;:::i;:::-;-1:-1:-1;7160:1:12;7149:13;;7033:135::o;7527:128::-;7594:9;;;7615:11;;;7612:37;;;7629:18;;:::i;8036:277::-;8103:6;8156:2;8144:9;8135:7;8131:23;8127:32;8124:52;;;8172:1;8169;8162:12;8124:52;8204:9;8198:16;8257:5;8250:13;8243:21;8236:5;8233:32;8223:60;;8279:1;8276;8269:12;10148:127;10209:10;10204:3;10200:20;10197:1;10190:31;10240:4;10237:1;10230:15;10264:4;10261:1;10254:15;10280:168;10353:9;;;10384;;10401:15;;;10395:22;;10381:37;10371:71;;10422:18;;:::i;10453:125::-;10518:9;;;10539:10;;;10536:36;;;10552:18;;:::i;10583:127::-;10644:10;10639:3;10635:20;10632:1;10625:31;10675:4;10672:1;10665:15;10699:4;10696:1;10689:15;10715:136;10754:3;10782:5;10772:39;;10791:18;;:::i;:::-;-1:-1:-1;;;10827:18:12;;10715:136::o;11210:273::-;11278:6;11331:2;11319:9;11310:7;11306:23;11302:32;11299:52;;;11347:1;11344;11337:12;11299:52;11379:9;11373:16;11429:4;11422:5;11418:16;11411:5;11408:27;11398:55;;11449:1;11446;11439:12;12096:151;12186:4;12179:12;;;12165;;;12161:31;;12204:14;;12201:40;;;12221:18;;:::i;12252:375::-;12340:1;12358:5;12372:249;12393:1;12383:8;12380:15;12372:249;;;12443:4;12438:3;12434:14;12428:4;12425:24;12422:50;;;12452:18;;:::i;:::-;12502:1;12492:8;12488:16;12485:49;;;12516:16;;;;12485:49;12599:1;12595:16;;;;;12555:15;;12372:249;;12632:902;12681:5;12711:8;12701:80;;-1:-1:-1;12752:1:12;12766:5;;12701:80;12800:4;12790:76;;-1:-1:-1;12837:1:12;12851:5;;12790:76;12882:4;12900:1;12895:59;;;;12968:1;12963:174;;;;12875:262;;12895:59;12925:1;12916:10;;12939:5;;;12963:174;13000:3;12990:8;12987:17;12984:43;;;13007:18;;:::i;:::-;-1:-1:-1;;13063:1:12;13049:16;;13122:5;;12875:262;;13221:2;13211:8;13208:16;13202:3;13196:4;13193:13;13189:36;13183:2;13173:8;13170:16;13165:2;13159:4;13156:12;13152:35;13149:77;13146:203;;;-1:-1:-1;13258:19:12;;;13334:5;;13146:203;13381:42;-1:-1:-1;;13406:8:12;13400:4;13381:42;:::i;:::-;13459:6;13455:1;13451:6;13447:19;13438:7;13435:32;13432:58;;;13470:18;;:::i;:::-;13508:20;;12632:902;-1:-1:-1;;;12632:902:12:o;13539:140::-;13597:5;13626:47;13667:4;13657:8;13653:19;13647:4;13626:47;:::i;13684:127::-;13745:10;13740:3;13736:20;13733:1;13726:31;13776:4;13773:1;13766:15;13800:4;13797:1;13790:15;13816:120;13856:1;13882;13872:35;;13887:18;;:::i;:::-;-1:-1:-1;13921:9:12;;13816:120::o;13941:112::-;13973:1;13999;13989:35;;14004:18;;:::i;:::-;-1:-1:-1;14038:9:12;;13941:112::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1604600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "infinite",
								"CROSS_CHAIN_MINTER_ROLE()": "295",
								"DEFAULT_ADMIN_ROLE()": "227",
								"PAUSER_ROLE()": "249",
								"WEUSD_DECIMALS()": "335",
								"activeSourceRequests(uint256)": "4607",
								"activeTargetRequests(uint256)": "4629",
								"burnWeUSD(address,uint256)": "infinite",
								"burnWeUSDCrossChain(uint256,uint256,address)": "infinite",
								"deleteStablecoin(address)": "infinite",
								"feeRecipient()": "2381",
								"gasfee()": "2330",
								"getRequestById(uint256)": "9255",
								"getRoleAdmin(bytes32)": "2523",
								"getUserSourceRequests(address,uint256,uint256)": "infinite",
								"getUserTargetRequests(address,uint256,uint256)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2727",
								"isRequestIdUsed(uint256)": "2493",
								"mainContract()": "2480",
								"mintWeUSD(address,uint256)": "infinite",
								"mintWeUSDCrossChain(uint256,uint256,uint256,address)": "infinite",
								"pause()": "infinite",
								"paused()": "2392",
								"registerStablecoin(address)": "infinite",
								"registeredStablecoins(address)": "2640",
								"renounceRole(bytes32,address)": "29108",
								"requestCount()": "2350",
								"requestExists(uint256)": "2557",
								"requestIdToSourceActiveIndex(uint256)": "2513",
								"requestIdToTargetActiveIndex(uint256)": "2557",
								"revokeRole(bytes32,address)": "infinite",
								"setFeeRecipient(address)": "infinite",
								"setGasfee(uint256)": "infinite",
								"supportsInterface(bytes4)": "503",
								"unpause()": "infinite",
								"usedRequestIds(uint256)": "2493",
								"weUSD()": "2425"
							},
							"internal": {
								"_createRequest(uint256,address,uint256,bool)": "infinite",
								"convertDecimals(uint256,uint8,uint8)": "infinite",
								"convertDecimalsCeil(uint256,uint8,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 534,
									"end": 17479,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 993,
									"end": 1004,
									"name": "PUSH",
									"source": 11,
									"value": "7A120"
								},
								{
									"begin": 969,
									"end": 1004,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 969,
									"end": 1004,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2130,
									"end": 2641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2130,
									"end": 2641,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2260,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "DUP11",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "AND",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2255,
									"end": 2280,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2291,
									"end": 2326,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2291,
									"end": 2326,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2291,
									"end": 2326,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2291,
									"end": 2326,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2291,
									"end": 2326,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2291,
									"end": 2326,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2291,
									"end": 2326,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2291,
									"end": 2326,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2291,
									"end": 2326,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2337,
									"end": 2379,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2368,
									"end": 2378,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 2337,
									"end": 2347,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2337,
									"end": 2379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2337,
									"end": 2379,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2337,
									"end": 2379,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2390,
									"end": 2424,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 667,
									"end": 690,
									"name": "PUSH",
									"source": 11,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 2413,
									"end": 2423,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2400,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2390,
									"end": 2424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2424,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 2390,
									"end": 2424,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2435,
									"end": 2489,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 816,
									"end": 852,
									"name": "PUSH",
									"source": 11,
									"value": "41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704"
								},
								{
									"begin": 2471,
									"end": 2488,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2435,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2435,
									"end": 2489,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2435,
									"end": 2489,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2435,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2500,
									"end": 2542,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 735,
									"end": 759,
									"name": "PUSH",
									"source": 11,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 2524,
									"end": 2541,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2500,
									"end": 2510,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2500,
									"end": 2542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2500,
									"end": 2542,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 2500,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2574,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2587,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2594,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2594,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2553,
									"end": 2594,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2590,
									"end": 2594,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2553,
									"end": 2594,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2594,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2553,
									"end": 2594,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2617,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "AND",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2633,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 355,
									"end": 408,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 355,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 404,
									"end": 405,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 402,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 394,
									"end": 406,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 355,
									"end": 408,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 457,
									"end": 466,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 427,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 427,
									"end": 467,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 427,
									"end": 467,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 417,
									"end": 467,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 417,
									"end": 467,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 516,
									"end": 534,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 486,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 486,
									"end": 535,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 486,
									"end": 535,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 476,
									"end": 535,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 476,
									"end": 535,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 588,
									"end": 597,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 584,
									"end": 602,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 554,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 554,
									"end": 603,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 554,
									"end": 603,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 544,
									"end": 603,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 667,
									"end": 669,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 656,
									"end": 665,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 652,
									"end": 670,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 622,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 622,
									"end": 671,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 622,
									"end": 671,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 612,
									"end": 671,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 612,
									"end": 671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 724,
									"end": 733,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 720,
									"end": 739,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 690,
									"end": 740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 690,
									"end": 740,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 690,
									"end": 740,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 680,
									"end": 740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 680,
									"end": 740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 17479,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043c091aa4a94152f4445b337be5de9e6b3d6fa063bc9244af3e6de28840319be64736f6c634300081a0033",
									".code": [
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "854935F1"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "C5494FFB"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "E63AB1E9"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "E74B981B"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "EA277ECA"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "EDA87EFF"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "C5494FFB"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "C6400657"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "C99773CE"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "D19FAD37"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "D270E7AB"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "A2519AE4"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "A62E1B3E"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "BB93EDE0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "BEAD8D26"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "854935F1"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "973697BD"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "9EA4F3A4"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "2F92893C"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "46904840"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "46904840"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "5BADBE4C"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "75B238FC"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "2F92893C"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "34D8C7D5"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "37174202"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "1E7502D7"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "1E7502D7"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "1F224564"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "26757B73"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "677016"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "BD31A57"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "1008776F"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 534,
											"end": 17479,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1004,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 645,
											"end": 667,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 627,
											"end": 668,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 627,
											"end": 668,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 487,
											"end": 674,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7622,
											"end": 8566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 7622,
											"end": 8566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4459,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 4459,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10236,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 10114,
											"end": 10236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 10114,
											"end": 10236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 10114,
											"end": 10236,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10236,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10114,
											"end": 10236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 10114,
											"end": 10236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10236,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 10114,
											"end": 10236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10179,
											"end": 10183,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10203,
											"end": 10217,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10236,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 9413,
											"end": 10106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 9413,
											"end": 10106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 10607,
											"end": 10738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10710,
											"end": 10730,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10718,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 10710,
											"end": 10730,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10730,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10730,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10607,
											"end": 10738,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2868,
											"end": 2900,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2868,
											"end": 2900,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 2964,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2948,
											"end": 2965,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2965,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2942,
											"end": 2966,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2938,
											"end": 2988,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2936,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2989,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3049,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3027,
											"end": 3051,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3005,
											"end": 3025,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3005,
											"end": 3025,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3005,
											"end": 3025,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2998,
											"end": 3052,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3122,
											"end": 3126,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3110,
											"end": 3127,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3110,
											"end": 3127,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3110,
											"end": 3127,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3128,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3097,
											"end": 3129,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3130,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3061,
											"end": 3131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3061,
											"end": 3131,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3061,
											"end": 3131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3061,
											"end": 3131,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2840,
											"end": 2859,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2840,
											"end": 2859,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2663,
											"end": 3137,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1197,
											"end": 1243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1243,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1091,
											"end": 1128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1091,
											"end": 1128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 766,
											"end": 852,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 766,
											"end": 852,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 766,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 816,
											"end": 852,
											"name": "PUSH",
											"source": 11,
											"value": "41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704"
										},
										{
											"begin": 766,
											"end": 852,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 766,
											"end": 852,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 2807,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 2730,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2730,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2730,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3611,
											"end": 3643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3611,
											"end": 3643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3611,
											"end": 3643,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3593,
											"end": 3644,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3593,
											"end": 3644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3583,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 3447,
											"end": 3650,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 888,
											"end": 915,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 888,
											"end": 915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 888,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 888,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 888,
											"end": 915,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 888,
											"end": 915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 888,
											"end": 915,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 630,
											"end": 690,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 630,
											"end": 690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 630,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 630,
											"end": 690,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 630,
											"end": 690,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2649,
											"end": 2722,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 2649,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2649,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2649,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2649,
											"end": 2722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1047,
											"end": 1084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 1047,
											"end": 1084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 11784,
											"end": 13279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 11784,
											"end": 13279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 11784,
											"end": 13279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1137,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1190,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 5163,
											"end": 5799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 5163,
											"end": 5799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 859,
											"end": 881,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 859,
											"end": 881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 859,
											"end": 881,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 859,
											"end": 881,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 859,
											"end": 881,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 859,
											"end": 881,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 859,
											"end": 881,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 859,
											"end": 881,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 13903,
											"end": 15398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 13903,
											"end": 15398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1377,
											"end": 1440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1440,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 3086,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3086,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3954,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3954,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1307,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1370,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 6314,
											"end": 6905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6314,
											"end": 6905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 590,
											"end": 623,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 590,
											"end": 623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 590,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 590,
											"end": 623,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 590,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 590,
											"end": 623,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 590,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 590,
											"end": 623,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 590,
											"end": 623,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 590,
											"end": 623,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 590,
											"end": 623,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 590,
											"end": 623,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 697,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 697,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 735,
											"end": 759,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 697,
											"end": 759,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 697,
											"end": 759,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3497,
											"end": 3622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 3497,
											"end": 3622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 11017,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11081,
											"end": 11085,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11113,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11135,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11140,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11140,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 922,
											"end": 962,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 922,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 922,
											"end": 962,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 922,
											"end": 962,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 922,
											"end": 962,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 922,
											"end": 962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 922,
											"end": 962,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 962,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5712,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5696,
											"end": 5713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5696,
											"end": 5713,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5696,
											"end": 5713,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5714,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5714,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 922,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5536,
											"end": 5720,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7769,
											"end": 7782,
											"modifierDepth": 1,
											"name": "CHAINID",
											"source": 11
										},
										{
											"begin": 7752,
											"end": 7765,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7752,
											"end": 7782,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7744,
											"end": 7835,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7744,
											"end": 7835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5927,
											"end": 5929,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7744,
											"end": 7835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5909,
											"end": 5930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 5946,
											"end": 5964,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5946,
											"end": 5964,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5946,
											"end": 5964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5939,
											"end": 5969,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6005,
											"end": 6039,
											"name": "PUSH",
											"source": 12,
											"value": "54617267657420636861696E206D75737420626520646966666572656E742066"
										},
										{
											"begin": 5985,
											"end": 6003,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5985,
											"end": 6003,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5985,
											"end": 6003,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 6040,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3937B69039B7BAB931B29031B430B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6095,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6131,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6112,
											"end": 6131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7744,
											"end": 7835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7863,
											"end": 7869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7863,
											"end": 7869,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 7860,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 7869,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7846,
											"end": 7908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 7846,
											"end": 7908,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7846,
											"end": 7908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7846,
											"end": 7908,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7846,
											"end": 7908,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7846,
											"end": 7908,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6344,
											"end": 6346,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7846,
											"end": 7908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7846,
											"end": 7908,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7846,
											"end": 7908,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6326,
											"end": 6347,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6422,
											"end": 6456,
											"name": "PUSH",
											"source": 12,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2067617366"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6457,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6466,
											"end": 6498,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7846,
											"end": 7908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 6142,
											"end": 6540,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7846,
											"end": 7908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 7846,
											"end": 7908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7927,
											"end": 7951,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7927,
											"end": 7951,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7919,
											"end": 7983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 7919,
											"end": 7983,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7919,
											"end": 7983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7919,
											"end": 7983,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7919,
											"end": 7983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7919,
											"end": 7983,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6747,
											"end": 6749,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7919,
											"end": 7983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7919,
											"end": 7983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7919,
											"end": 7983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6729,
											"end": 6750,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6786,
											"end": 6788,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6759,
											"end": 6789,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 6854,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420746172676574207573657220616464726573730000000000"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6798,
											"end": 6855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7919,
											"end": 7983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 6545,
											"end": 6896,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7919,
											"end": 7983,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 7919,
											"end": 7983,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8018,
											"end": 8031,
											"modifierDepth": 1,
											"name": "CHAINID",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8042,
											"end": 8059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8140,
											"end": 8152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 8140,
											"end": 8152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8152,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 8138,
											"end": 8152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 8138,
											"end": 8152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 8138,
											"end": 8152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8152,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8152,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8080,
											"end": 8083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 8063,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8063,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8063,
											"end": 8083,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 8105,
											"end": 8108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8088,
											"end": 8108,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8088,
											"end": 8108,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8088,
											"end": 8108,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 8062,
											"end": 8109,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8113,
											"end": 8128,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8134,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 8062,
											"end": 8135,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8062,
											"end": 8152,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8062,
											"end": 8152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8172,
											"end": 8196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 8062,
											"end": 8152,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11081,
											"end": 11085,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11113,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11135,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11140,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11140,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8172,
											"end": 8196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 8172,
											"end": 8196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8171,
											"end": 8196,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8163,
											"end": 8226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 8163,
											"end": 8226,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8163,
											"end": 8226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8226,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8163,
											"end": 8226,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8163,
											"end": 8226,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7375,
											"end": 7377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8163,
											"end": 8226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8163,
											"end": 8226,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7378,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7414,
											"end": 7416,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 7394,
											"end": 7412,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7394,
											"end": 7412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7394,
											"end": 7412,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7387,
											"end": 7417,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5265717565737420494420616C726561647920657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7433,
											"end": 7451,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7433,
											"end": 7451,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7451,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7426,
											"end": 7481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 7173,
											"end": 7522,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8226,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 8163,
											"end": 8226,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8237,
											"end": 8255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8267,
											"end": 8273,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8258,
											"end": 8264,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8258,
											"end": 8273,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 8258,
											"end": 8273,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8258,
											"end": 8273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8258,
											"end": 8273,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 8258,
											"end": 8273,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8258,
											"end": 8273,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 8258,
											"end": 8273,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8315,
											"end": 8327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 8315,
											"end": 8327,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8329,
											"end": 8335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8329,
											"end": 8335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8329,
											"end": 8335,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8284,
											"end": 8336,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8303,
											"end": 8313,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 7913,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7913,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7913,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7913,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8315,
											"end": 8327,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8315,
											"end": 8327,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8315,
											"end": 8327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7982,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7991,
											"end": 8025,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8237,
											"end": 8273,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8237,
											"end": 8273,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 8284,
											"end": 8302,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 8284,
											"end": 8336,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 8284,
											"end": 8336,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8347,
											"end": 8352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8347,
											"end": 8352,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8385,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79CC679"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8347,
											"end": 8385,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8362,
											"end": 8372,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8492,
											"end": 8543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8347,
											"end": 8352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8352,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8352,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "79CC6790"
										},
										{
											"begin": 8347,
											"end": 8361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8385,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8385,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8396,
											"end": 8451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 8411,
											"end": 8420,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8422,
											"end": 8432,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8434,
											"end": 8444,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8446,
											"end": 8450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8396,
											"end": 8410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 8396,
											"end": 8451,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8396,
											"end": 8451,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 8396,
											"end": 8451,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8467,
											"end": 8558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8467,
											"end": 8558,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8467,
											"end": 8558,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8828,
											"end": 8853,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8828,
											"end": 8853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8828,
											"end": 8853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8884,
											"end": 8886,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8869,
											"end": 8887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8869,
											"end": 8887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8862,
											"end": 8896,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8862,
											"end": 8896,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8862,
											"end": 8896,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8939,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8975,
											"end": 9007,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8975,
											"end": 9007,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8970,
											"end": 8972,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8955,
											"end": 8973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8955,
											"end": 8973,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8948,
											"end": 9008,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8493,
											"end": 8503,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8493,
											"end": 8503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8482,
											"end": 8491,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8482,
											"end": 8491,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8467,
											"end": 8558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "26C32CC5FF12981B55681844F2FB47D52C5E521C58D5288B1325F3304A7E8852"
										},
										{
											"begin": 8467,
											"end": 8558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8815,
											"end": 8818,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8800,
											"end": 8819,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8467,
											"end": 8558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8467,
											"end": 8558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8467,
											"end": 8558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8467,
											"end": 8558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8467,
											"end": 8558,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8467,
											"end": 8558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8467,
											"end": 8558,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 7733,
											"end": 8566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7733,
											"end": 8566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7733,
											"end": 8566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7622,
											"end": 8566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7622,
											"end": 8566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4582,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4546,
											"end": 4579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4587,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4587,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4587,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4587,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4603,
											"end": 4632,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4603,
											"end": 4632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FA63555FE68CAD70E08233633567493A3C74AFDC8C7FB9F0C03A8E74F1A137A"
										},
										{
											"begin": 4603,
											"end": 4632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4582,
											"end": 4587,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4603,
											"end": 4632,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 852,
											"name": "PUSH",
											"source": 11,
											"value": "41DE7AE3BECAF069074D499EBCBD36DF88385BA1E2946870F7E4674AECD43704"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1474,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9613,
											"end": 9626,
											"modifierDepth": 2,
											"name": "CHAINID",
											"source": 11
										},
										{
											"begin": 9596,
											"end": 9609,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9596,
											"end": 9626,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9588,
											"end": 9679,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 9588,
											"end": 9679,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9588,
											"end": 9679,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9588,
											"end": 9679,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9588,
											"end": 9679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9588,
											"end": 9679,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9221,
											"end": 9223,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9588,
											"end": 9679,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9588,
											"end": 9679,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9588,
											"end": 9679,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9203,
											"end": 9224,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9260,
											"end": 9262,
											"name": "PUSH",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9233,
											"end": 9263,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9333,
											"name": "PUSH",
											"source": 12,
											"value": "536F7572636520636861696E206D75737420626520646966666572656E742066"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9272,
											"end": 9334,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3937B6903A30B933B2BA1031B430B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9350,
											"end": 9368,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9350,
											"end": 9368,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9368,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9343,
											"end": 9389,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9406,
											"end": 9425,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9406,
											"end": 9425,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9588,
											"end": 9679,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 9019,
											"end": 9431,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9588,
											"end": 9679,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 9588,
											"end": 9679,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9707,
											"end": 9708,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9698,
											"end": 9704,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9698,
											"end": 9708,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9690,
											"end": 9742,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 9690,
											"end": 9742,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9690,
											"end": 9742,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9690,
											"end": 9742,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9690,
											"end": 9742,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9690,
											"end": 9742,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9638,
											"end": 9640,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9690,
											"end": 9742,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9690,
											"end": 9742,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9690,
											"end": 9742,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9620,
											"end": 9641,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9677,
											"end": 9679,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9650,
											"end": 9680,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9716,
											"end": 9747,
											"name": "PUSH",
											"source": 12,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 9696,
											"end": 9714,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9696,
											"end": 9714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9696,
											"end": 9714,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9689,
											"end": 9748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9783,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9765,
											"end": 9783,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9742,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 9436,
											"end": 9789,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9742,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 9690,
											"end": 9742,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9761,
											"end": 9785,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9761,
											"end": 9785,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9753,
											"end": 9817,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9753,
											"end": 9817,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9753,
											"end": 9817,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6747,
											"end": 6749,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9753,
											"end": 9817,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6729,
											"end": 6750,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6786,
											"end": 6788,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6759,
											"end": 6789,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 6854,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420746172676574207573657220616464726573730000000000"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6798,
											"end": 6855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 6545,
											"end": 6896,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11081,
											"end": 11085,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11113,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11135,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11140,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9828,
											"end": 9891,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 9828,
											"end": 9891,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9828,
											"end": 9891,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9828,
											"end": 9891,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9828,
											"end": 9891,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9828,
											"end": 9891,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7375,
											"end": 7377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9828,
											"end": 9891,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9828,
											"end": 9891,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9828,
											"end": 9891,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7378,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7414,
											"end": 7416,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 7394,
											"end": 7412,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7394,
											"end": 7412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7394,
											"end": 7412,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7387,
											"end": 7417,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5265717565737420494420616C726561647920657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7433,
											"end": 7451,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7433,
											"end": 7451,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7451,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7426,
											"end": 7481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 9891,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 7173,
											"end": 7522,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 9891,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 9828,
											"end": 9891,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 9902,
											"end": 9907,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9902,
											"end": 9932,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9902,
											"end": 9932,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8510,
											"end": 8542,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8542,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9902,
											"end": 9932,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8492,
											"end": 8543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9902,
											"end": 9907,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9907,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9907,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9907,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9912,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 9902,
											"end": 9912,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9932,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9932,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9902,
											"end": 9932,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9943,
											"end": 9995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 9958,
											"end": 9967,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9969,
											"end": 9979,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9981,
											"end": 9987,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9989,
											"end": 9994,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9943,
											"end": 9957,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 9943,
											"end": 9995,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9943,
											"end": 9995,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 9943,
											"end": 9995,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10011,
											"end": 10098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10098,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8828,
											"end": 8853,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8828,
											"end": 8853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8828,
											"end": 8853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10064,
											"end": 10077,
											"modifierDepth": 2,
											"name": "CHAINID",
											"source": 11
										},
										{
											"begin": 8884,
											"end": 8886,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8869,
											"end": 8887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8869,
											"end": 8887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8862,
											"end": 8896,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8939,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8939,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8975,
											"end": 9007,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8975,
											"end": 9007,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8970,
											"end": 8972,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8955,
											"end": 8973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8955,
											"end": 8973,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8948,
											"end": 9008,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10037,
											"end": 10047,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10037,
											"end": 10047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10026,
											"end": 10035,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10026,
											"end": 10035,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "7690D9CEDF96F067BDA7114C24BBA31BE184AE045D199979A0A373862E70D46B"
										},
										{
											"begin": 10011,
											"end": 10098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8815,
											"end": 8818,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8800,
											"end": 8819,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10011,
											"end": 10098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10011,
											"end": 10098,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10098,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10098,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10098,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10098,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10098,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 10106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1128,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2807,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2730,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 735,
											"end": 759,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 2789,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 2789,
											"end": 2799,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2789,
											"end": 2799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 2789,
											"end": 2799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 2807,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 2807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2649,
											"end": 2722,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2649,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 735,
											"end": 759,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 2706,
											"end": 2712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 2706,
											"end": 2714,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1084,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11885,
											"end": 11901,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11903,
											"end": 11910,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11931,
											"end": 11941,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11931,
											"end": 11941,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11931,
											"end": 11941,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11931,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 11931,
											"end": 11959,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11945,
											"end": 11959,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11945,
											"end": 11959,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11931,
											"end": 11959,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 11931,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11931,
											"end": 11991,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11931,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 11931,
											"end": 11991,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11931,
											"end": 11991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11972,
											"end": 11973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11964,
											"end": 11969,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11964,
											"end": 11973,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11964,
											"end": 11990,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11964,
											"end": 11990,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11964,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 11964,
											"end": 11990,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11964,
											"end": 11990,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11989,
											"end": 11990,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 11986,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11964,
											"end": 11990,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 11964,
											"end": 11990,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9978,
											"end": 9999,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10037,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10008,
											"end": 10038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642070616765206F7220706167652073697A65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10047,
											"end": 10102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 9794,
											"end": 10143,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 11923,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12055,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12084,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12070,
											"end": 12257,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 12070,
											"end": 12257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12094,
											"end": 12114,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 12094,
											"end": 12121,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12090,
											"end": 12121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12090,
											"end": 12121,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12070,
											"end": 12257,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12070,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 12070,
											"end": 12257,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12189,
											"end": 12194,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12147,
											"end": 12194,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12155,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12176,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 12177,
											"end": 12178,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12156,
											"end": 12179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12180,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12185,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 12147,
											"end": 12185,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12185,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12147,
											"end": 12185,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12194,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12143,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 12143,
											"end": 12246,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 12215,
											"end": 12230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12143,
											"end": 12246,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 12143,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12123,
											"end": 12126,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 12123,
											"end": 12126,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12070,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 12070,
											"end": 12257,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12070,
											"end": 12257,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 12070,
											"end": 12257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12269,
											"end": 12287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12321,
											"end": 12334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12360,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12360,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12360,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12360,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12351,
											"end": 12377,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12376,
											"end": 12377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12364,
											"end": 12373,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12364,
											"end": 12377,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12377,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12351,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12347,
											"end": 12632,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12347,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12347,
											"end": 12632,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12424,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 12432,
											"end": 12441,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12424,
											"end": 12429,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 12424,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 12424,
											"end": 12441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12424,
											"end": 12441,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 12424,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12407,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 12407,
											"end": 12442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12407,
											"end": 12420,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12407,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 12407,
											"end": 12442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12407,
											"end": 12442,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 12407,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12442,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12474,
											"end": 12487,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12461,
											"end": 12471,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12461,
											"end": 12487,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12457,
											"end": 12503,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12457,
											"end": 12503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 12457,
											"end": 12503,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12502,
											"end": 12503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12489,
											"end": 12503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12457,
											"end": 12503,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 12457,
											"end": 12503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12529,
											"end": 12551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12542,
											"end": 12551,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12529,
											"end": 12539,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12529,
											"end": 12551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 12529,
											"end": 12551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12529,
											"end": 12551,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12529,
											"end": 12551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12518,
											"end": 12551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12518,
											"end": 12551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12581,
											"end": 12594,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12578,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12594,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12566,
											"end": 12620,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12566,
											"end": 12620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12566,
											"end": 12620,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12607,
											"end": 12620,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12566,
											"end": 12620,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12566,
											"end": 12620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12644,
											"end": 12679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12696,
											"end": 12717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 12707,
											"end": 12717,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12696,
											"end": 12704,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12696,
											"end": 12717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 12696,
											"end": 12717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12696,
											"end": 12717,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 12696,
											"end": 12717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 12682,
											"end": 12718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 12682,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12776,
											"end": 12796,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 12776,
											"end": 12803,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12644,
											"end": 12718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12644,
											"end": 12718,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12729,
											"end": 12742,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12729,
											"end": 12742,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12759,
											"end": 13217,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 12759,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12809,
											"end": 12810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12805,
											"end": 12806,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12810,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12847,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12847,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 12805,
											"end": 12847,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12822,
											"end": 12847,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12814,
											"end": 12819,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12814,
											"end": 12847,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12847,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 12805,
											"end": 12847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12759,
											"end": 13217,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12759,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 12759,
											"end": 13217,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12869,
											"end": 12886,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12889,
											"end": 12909,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 12910,
											"end": 12913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 12912,
											"end": 12913,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 12910,
											"end": 12911,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12910,
											"end": 12913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 12910,
											"end": 12913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12910,
											"end": 12913,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 12910,
											"end": 12913,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12889,
											"end": 12914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12941,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12957,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 12933,
											"end": 12957,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12957,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12914,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12933,
											"end": 12966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12966,
											"name": "DUP15",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12966,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12957,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12966,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12929,
											"end": 13206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 12929,
											"end": 13206,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13015,
											"end": 13025,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12991,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 13007,
											"end": 13012,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12991,
											"end": 13004,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 12991,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 12991,
											"end": 13012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12991,
											"end": 13012,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 12991,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12991,
											"end": 13025,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12987,
											"end": 13191,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12987,
											"end": 13191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 12987,
											"end": 13191,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13078,
											"end": 13087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13068,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13069,
											"end": 13074,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 13050,
											"end": 13075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13050,
											"end": 13087,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 13110,
											"end": 13117,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 13110,
											"end": 13117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13117,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 13110,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13117,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12987,
											"end": 13191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 12987,
											"end": 13191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12987,
											"end": 13191,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 12987,
											"end": 13191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13166,
											"end": 13171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13166,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 13166,
											"end": 13171,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12987,
											"end": 13191,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 12987,
											"end": 13191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12849,
											"end": 12852,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 12849,
											"end": 12852,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 12849,
											"end": 12852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12852,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 12849,
											"end": 12852,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12852,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12852,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12852,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12759,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 12759,
											"end": 13217,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12759,
											"end": 13217,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 12759,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13237,
											"end": 13255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13237,
											"end": 13255,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13257,
											"end": 13270,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13257,
											"end": 13270,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 13279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11058,
											"end": 11060,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11061,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11097,
											"end": 11099,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11070,
											"end": 11100,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11109,
											"end": 11164,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11181,
											"end": 11199,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11181,
											"end": 11199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 10856,
											"end": 11205,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5357,
											"end": 5392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5392,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 5357,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5357,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5405,
											"end": 5424,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5427,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5427,
											"end": 5496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5496,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5427,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5612,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5600,
											"end": 5612,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5580,
											"end": 5590,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 7913,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5600,
											"end": 5612,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5600,
											"end": 5612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5612,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5612,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5612,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5612,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7982,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7991,
											"end": 8025,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7991,
											"end": 8025,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7991,
											"end": 8025,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 5496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5405,
											"end": 5496,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5548,
											"end": 5579,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5579,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5579,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 5548,
											"end": 5579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 5548,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 5548,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11690,
											"end": 11692,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11672,
											"end": 11693,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11729,
											"end": 11731,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 11709,
											"end": 11727,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11709,
											"end": 11727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11709,
											"end": 11727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11702,
											"end": 11732,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11768,
											"end": 11796,
											"name": "PUSH",
											"source": 12,
											"value": "537461626C65636F696E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11741,
											"end": 11797,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 11488,
											"end": 11838,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 5540,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5679,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5674,
											"end": 5679,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8492,
											"end": 8543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5674,
											"end": 5679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5679,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5679,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5684,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 5674,
											"end": 5684,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 5674,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12017,
											"end": 12042,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12017,
											"end": 12042,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12017,
											"end": 12042,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12073,
											"end": 12075,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12058,
											"end": 12076,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12058,
											"end": 12076,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12085,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12085,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "PUSH",
											"source": 11,
											"value": "66C62F0863782653C5C44E10BF21D9DEF60984CE20D9F75549575A8910896587"
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11990,
											"end": 12008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 5237,
											"end": 5799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5237,
											"end": 5799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 13903,
											"end": 15398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14004,
											"end": 14020,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 14022,
											"end": 14029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14050,
											"end": 14060,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14050,
											"end": 14060,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14050,
											"end": 14060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14050,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 14050,
											"end": 14078,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14064,
											"end": 14078,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14064,
											"end": 14078,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14050,
											"end": 14078,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 14050,
											"end": 14078,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14050,
											"end": 14110,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14050,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 14050,
											"end": 14110,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14050,
											"end": 14110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14091,
											"end": 14092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14083,
											"end": 14088,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14092,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14109,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14109,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 14083,
											"end": 14109,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14109,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14108,
											"end": 14109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14096,
											"end": 14105,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14096,
											"end": 14109,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14109,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 14083,
											"end": 14109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9978,
											"end": 9999,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10037,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10008,
											"end": 10038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642070616765206F7220706167652073697A65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10047,
											"end": 10102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 9794,
											"end": 10143,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 14042,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14153,
											"end": 14174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14194,
											"end": 14203,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14189,
											"end": 14376,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 14189,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14213,
											"end": 14233,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 14213,
											"end": 14240,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14209,
											"end": 14240,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14209,
											"end": 14240,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 14189,
											"end": 14376,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14189,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 14189,
											"end": 14376,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14308,
											"end": 14313,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14266,
											"end": 14313,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14274,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14275,
											"end": 14295,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 14296,
											"end": 14297,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 14275,
											"end": 14298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14298,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14299,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14304,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14266,
											"end": 14304,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14304,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14266,
											"end": 14304,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14266,
											"end": 14313,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14262,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 14262,
											"end": 14365,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14334,
											"end": 14349,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14334,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 14334,
											"end": 14349,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14334,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 14334,
											"end": 14349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14334,
											"end": 14349,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 14334,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14334,
											"end": 14349,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14334,
											"end": 14349,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14334,
											"end": 14349,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14262,
											"end": 14365,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 14262,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14242,
											"end": 14245,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14242,
											"end": 14245,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14189,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 14189,
											"end": 14376,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14189,
											"end": 14376,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 14189,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14388,
											"end": 14406,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14440,
											"end": 14453,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14470,
											"end": 14479,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14470,
											"end": 14479,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14470,
											"end": 14479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14470,
											"end": 14479,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14470,
											"end": 14479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14470,
											"end": 14496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 14470,
											"end": 14496,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14470,
											"end": 14496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14495,
											"end": 14496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14483,
											"end": 14492,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14483,
											"end": 14496,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14470,
											"end": 14496,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 14470,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14466,
											"end": 14751,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14466,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 14466,
											"end": 14751,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14543,
											"end": 14560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 14551,
											"end": 14560,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14543,
											"end": 14548,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 14543,
											"end": 14560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 14543,
											"end": 14560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14543,
											"end": 14560,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 14543,
											"end": 14560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14526,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 14526,
											"end": 14561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14526,
											"end": 14539,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14526,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 14526,
											"end": 14561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14526,
											"end": 14561,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 14526,
											"end": 14561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14513,
											"end": 14561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14513,
											"end": 14561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14593,
											"end": 14606,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14580,
											"end": 14590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14580,
											"end": 14606,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14576,
											"end": 14622,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14576,
											"end": 14622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 14576,
											"end": 14622,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14621,
											"end": 14622,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14608,
											"end": 14622,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14608,
											"end": 14622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14576,
											"end": 14622,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 14576,
											"end": 14622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14648,
											"end": 14670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 14661,
											"end": 14670,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14648,
											"end": 14658,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14648,
											"end": 14670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 14648,
											"end": 14670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14648,
											"end": 14670,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 14648,
											"end": 14670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14637,
											"end": 14670,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14637,
											"end": 14670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14700,
											"end": 14713,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14689,
											"end": 14697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14689,
											"end": 14713,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14685,
											"end": 14739,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14685,
											"end": 14739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 14685,
											"end": 14739,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14726,
											"end": 14739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14685,
											"end": 14739,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 14685,
											"end": 14739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14763,
											"end": 14798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14815,
											"end": 14836,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 14826,
											"end": 14836,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14815,
											"end": 14823,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14815,
											"end": 14836,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 14815,
											"end": 14836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14815,
											"end": 14836,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 14815,
											"end": 14836,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 14801,
											"end": 14837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 14801,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14895,
											"end": 14915,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 14895,
											"end": 14922,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14763,
											"end": 14837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14763,
											"end": 14837,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14848,
											"end": 14861,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14848,
											"end": 14861,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14878,
											"end": 15336,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 14878,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14928,
											"end": 14929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14924,
											"end": 14925,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14929,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14966,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 14924,
											"end": 14966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14941,
											"end": 14959,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14941,
											"end": 14966,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14933,
											"end": 14938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14933,
											"end": 14966,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14966,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 14924,
											"end": 14966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14878,
											"end": 15336,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14878,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 14878,
											"end": 15336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14988,
											"end": 15005,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15008,
											"end": 15028,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 15029,
											"end": 15032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 15031,
											"end": 15032,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15029,
											"end": 15030,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15029,
											"end": 15032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 15029,
											"end": 15032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15029,
											"end": 15032,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 15029,
											"end": 15032,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 15008,
											"end": 15033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15060,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15076,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15052,
											"end": 15076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15076,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15008,
											"end": 15033,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15052,
											"end": 15085,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15085,
											"name": "DUP15",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15085,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15076,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15076,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15085,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15048,
											"end": 15325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 15048,
											"end": 15325,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15134,
											"end": 15144,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15110,
											"end": 15131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 15126,
											"end": 15131,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15110,
											"end": 15123,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 15110,
											"end": 15131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 15110,
											"end": 15131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15110,
											"end": 15131,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 15110,
											"end": 15131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15110,
											"end": 15144,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15106,
											"end": 15310,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15106,
											"end": 15310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 15106,
											"end": 15310,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15197,
											"end": 15206,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15187,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15188,
											"end": 15193,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 15169,
											"end": 15194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15194,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15206,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15236,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 15229,
											"end": 15236,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 15229,
											"end": 15236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15236,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 15229,
											"end": 15236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15236,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15106,
											"end": 15310,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 15106,
											"end": 15310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14968,
											"end": 14971,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14968,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 14968,
											"end": 14971,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14968,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 14968,
											"end": 14971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14968,
											"end": 14971,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 14968,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14968,
											"end": 14971,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14968,
											"end": 14971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14968,
											"end": 14971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14878,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 14878,
											"end": 15336,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3086,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3163,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3163,
											"end": 3179,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4043,
											"end": 4076,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4076,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4043,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4076,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4076,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4076,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4076,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4076,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4043,
											"end": 4083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4079,
											"end": 4083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4043,
											"end": 4083,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4083,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4099,
											"end": 4131,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4099,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "D8B2DC62B787EC8AFBC8A664CF2FD7C1E7851721ACC9E0069132CECE3C529C2E"
										},
										{
											"begin": 4099,
											"end": 4131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4099,
											"end": 4131,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 4139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 4139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6314,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11058,
											"end": 11060,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11061,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11097,
											"end": 11099,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11070,
											"end": 11100,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD18589B1958DBDA5B881B9BDD081C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11109,
											"end": 11164,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11181,
											"end": 11199,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11181,
											"end": 11199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 10856,
											"end": 11205,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 6394,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6500,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6528,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6503,
											"end": 6538,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6538,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 6503,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6551,
											"end": 6575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 6598,
											"end": 6609,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6627,
											"end": 6645,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 6578,
											"end": 6646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6578,
											"end": 6646,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 6578,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1795588D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7880,
											"end": 7912,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7880,
											"end": 7912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7880,
											"end": 7912,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 7913,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7982,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7991,
											"end": 8025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7991,
											"end": 8025,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7991,
											"end": 8025,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6551,
											"end": 6646,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6551,
											"end": 6646,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6723,
											"name": "PUSH",
											"source": 11,
											"value": "5E556234"
										},
										{
											"begin": 6692,
											"end": 6723,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 6692,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79CC679"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6791,
											"end": 6801,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8492,
											"end": 8543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6776,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "79CC6790"
										},
										{
											"begin": 6776,
											"end": 6790,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 6776,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6831,
											"end": 6897,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6831,
											"end": 6897,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 6897,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12017,
											"end": 12042,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12017,
											"end": 12042,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12017,
											"end": 12042,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12073,
											"end": 12075,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12058,
											"end": 12076,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12058,
											"end": 12076,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12085,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12085,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6831,
											"end": 6897,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 6897,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 6897,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6843,
											"end": 6853,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6843,
											"end": 6853,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6831,
											"end": 6897,
											"name": "PUSH",
											"source": 11,
											"value": "3D9842CBDFA603AB9534D6E362BF28B3061318F57FED5E7087DFC956A9D74442"
										},
										{
											"begin": 6831,
											"end": 6897,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11990,
											"end": 12008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 11843,
											"end": 12091,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 3497,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15666,
											"end": 16401,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 15666,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15980,
											"end": 16000,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16000,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16000,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 15988,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 15980,
											"end": 16000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16000,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16000,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16000,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16000,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16000,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16013,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15959,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16024,
											"end": 16167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 16024,
											"end": 16167,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16070,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "PUSH",
											"source": 11,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16050,
											"end": 16087,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 16024,
											"end": 16167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 16024,
											"end": 16167,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16024,
											"end": 16167,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 16024,
											"end": 16167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16138,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "PUSH",
											"source": 11,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16155,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 16024,
											"end": 16167,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 16024,
											"end": 16167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16180,
											"end": 16187,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16177,
											"end": 16394,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16177,
											"end": 16394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 16177,
											"end": 16394,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16246,
											"end": 16266,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 16246,
											"end": 16273,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16246,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 16246,
											"end": 16277,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16276,
											"end": 16277,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16276,
											"end": 16277,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16246,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 16246,
											"end": 16277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16246,
											"end": 16277,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 16246,
											"end": 16277,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16203,
											"end": 16243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16203,
											"end": 16243,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16203,
											"end": 16243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16203,
											"end": 16243,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16203,
											"end": 16231,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 16203,
											"end": 16243,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16203,
											"end": 16243,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16203,
											"end": 16243,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16203,
											"end": 16243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16203,
											"end": 16243,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 16203,
											"end": 16277,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 16177,
											"end": 16394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 16177,
											"end": 16394,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16177,
											"end": 16394,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 16177,
											"end": 16394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16351,
											"end": 16371,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 16351,
											"end": 16378,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16351,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 16351,
											"end": 16382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16381,
											"end": 16382,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16381,
											"end": 16382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16351,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 16351,
											"end": 16382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16351,
											"end": 16382,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 16351,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16308,
											"end": 16348,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16308,
											"end": 16348,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16308,
											"end": 16348,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16308,
											"end": 16348,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16308,
											"end": 16336,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 16308,
											"end": 16348,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16308,
											"end": 16348,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16308,
											"end": 16348,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16308,
											"end": 16348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16308,
											"end": 16348,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 16308,
											"end": 16382,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 16177,
											"end": 16394,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 16177,
											"end": 16394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15765,
											"end": 16401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15666,
											"end": 16401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15666,
											"end": 16401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15666,
											"end": 16401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15666,
											"end": 16401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15666,
											"end": 16401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "463"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 5,
											"value": "463"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "466"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3611,
											"end": 3643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3611,
											"end": 3643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3611,
											"end": 3643,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3593,
											"end": 3644,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3593,
											"end": 3644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3583,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "469"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 5,
											"value": "469"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "466"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16411,
											"end": 16880,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 16411,
											"end": 16880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16552,
											"end": 16566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16583,
											"end": 16615,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 16583,
											"end": 16615,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16583,
											"end": 16597,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16583,
											"end": 16615,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 16583,
											"end": 16615,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16583,
											"end": 16615,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16579,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 16579,
											"end": 16873,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16641,
											"end": 16646,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16579,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 16579,
											"end": 16873,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16579,
											"end": 16873,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 16579,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16685,
											"end": 16699,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16668,
											"end": 16699,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 16668,
											"end": 16699,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16668,
											"end": 16682,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16668,
											"end": 16699,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 16668,
											"end": 16699,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16668,
											"end": 16699,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 16664,
											"end": 16873,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16664,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 16664,
											"end": 16873,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16739,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 16756,
											"end": 16770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16739,
											"end": 16753,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16739,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 16739,
											"end": 16770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16739,
											"end": 16770,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 16739,
											"end": 16770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 16734,
											"end": 16771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16736,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 16734,
											"end": 16771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 16734,
											"end": 16771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16771,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 16734,
											"end": 16771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16725,
											"end": 16772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 16725,
											"end": 16772,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16725,
											"end": 16730,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16725,
											"end": 16772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 16725,
											"end": 16772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16725,
											"end": 16772,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 16725,
											"end": 16772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16716,
											"end": 16772,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16716,
											"end": 16772,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16664,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 16664,
											"end": 16873,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16664,
											"end": 16873,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 16664,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16828,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 16845,
											"end": 16859,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16828,
											"end": 16842,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16828,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 16828,
											"end": 16859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16828,
											"end": 16859,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 16828,
											"end": 16859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16823,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 16823,
											"end": 16860,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16823,
											"end": 16825,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 16823,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 16823,
											"end": 16860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16823,
											"end": 16860,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 16823,
											"end": 16860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16814,
											"end": 16861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 16814,
											"end": 16861,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16814,
											"end": 16819,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16814,
											"end": 16861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 16814,
											"end": 16861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16814,
											"end": 16861,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 16814,
											"end": 16861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16805,
											"end": 16861,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16805,
											"end": 16861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16664,
											"end": 16873,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 16664,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16411,
											"end": 16880,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16411,
											"end": 16880,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16411,
											"end": 16880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16411,
											"end": 16880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16411,
											"end": 16880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16411,
											"end": 16880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16888,
											"end": 17476,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 16888,
											"end": 17476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17033,
											"end": 17047,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17082,
											"end": 17096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17064,
											"end": 17096,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 17064,
											"end": 17096,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17064,
											"end": 17078,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17064,
											"end": 17096,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 17064,
											"end": 17096,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17064,
											"end": 17096,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17060,
											"end": 17469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 17060,
											"end": 17469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17122,
											"end": 17127,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17060,
											"end": 17469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 17060,
											"end": 17469,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17060,
											"end": 17469,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 17060,
											"end": 17469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17166,
											"end": 17180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17149,
											"end": 17180,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 17149,
											"end": 17180,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17149,
											"end": 17163,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17149,
											"end": 17180,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 17149,
											"end": 17180,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17149,
											"end": 17180,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 17145,
											"end": 17469,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17145,
											"end": 17469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 17145,
											"end": 17469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17220,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 17237,
											"end": 17251,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17220,
											"end": 17234,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17220,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 17220,
											"end": 17251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17145,
											"end": 17469,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 17145,
											"end": 17469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17286,
											"end": 17298,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17306,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 17323,
											"end": 17337,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17306,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 17306,
											"end": 17337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17306,
											"end": 17337,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 17306,
											"end": 17337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17301,
											"end": 17338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 17301,
											"end": 17338,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17301,
											"end": 17303,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 17301,
											"end": 17338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 17301,
											"end": 17338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17301,
											"end": 17338,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 17301,
											"end": 17338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17286,
											"end": 17338,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17362,
											"end": 17374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 17286,
											"end": 17338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17362,
											"end": 17367,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 17362,
											"end": 17374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 17362,
											"end": 17374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17362,
											"end": 17374,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 17362,
											"end": 17374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17353,
											"end": 17374,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17393,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 17401,
											"end": 17405,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17393,
											"end": 17398,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 17393,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 17393,
											"end": 17405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17393,
											"end": 17405,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 17393,
											"end": 17405,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17393,
											"end": 17410,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17389,
											"end": 17458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 17389,
											"end": 17458,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17431,
											"end": 17442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 17441,
											"end": 17442,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 17431,
											"end": 17442,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17431,
											"end": 17442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 17431,
											"end": 17442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17431,
											"end": 17442,
											"name": "tag",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 17431,
											"end": 17442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17431,
											"end": 17442,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17431,
											"end": 17442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17389,
											"end": 17458,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 17389,
											"end": 17458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16888,
											"end": 17476,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16888,
											"end": 17476,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16888,
											"end": 17476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16888,
											"end": 17476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16888,
											"end": 17476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16888,
											"end": 17476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8510,
											"end": 8542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8542,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8492,
											"end": 8543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8318,
											"end": 8592,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 196,
											"end": 482,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 196,
											"end": 482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 349,
											"end": 372,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 401,
											"end": 433,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 401,
											"end": 433,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 391,
											"end": 434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 391,
											"end": 434,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 381,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 381,
											"end": 452,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 448,
											"end": 449,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 438,
											"end": 450,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 679,
											"end": 852,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 679,
											"end": 852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 747,
											"end": 767,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 747,
											"end": 767,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 796,
											"end": 827,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 827,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 786,
											"end": 828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 786,
											"end": 828,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 776,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 776,
											"end": 846,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 840,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 832,
											"end": 844,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 776,
											"end": 846,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 776,
											"end": 846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 679,
											"end": 852,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 679,
											"end": 852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 679,
											"end": 852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 679,
											"end": 852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 934,
											"end": 940,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 950,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1005,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 982,
											"end": 989,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 978,
											"end": 1001,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 974,
											"end": 1006,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 971,
											"end": 1023,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 971,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 971,
											"end": 1023,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1017,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1009,
											"end": 1021,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 971,
											"end": 1023,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 971,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1064,
											"end": 1087,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1064,
											"end": 1087,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1064,
											"end": 1087,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1184,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1156,
											"end": 1188,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1156,
											"end": 1188,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1233,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 1233,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1233,
											"end": 1271,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 1233,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1223,
											"end": 1271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1223,
											"end": 1271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 857,
											"end": 1277,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 857,
											"end": 1277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1282,
											"end": 1468,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1282,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1396,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1391,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1392,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1365,
											"end": 1397,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1400,
											"end": 1412,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 1433,
											"end": 1462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1699,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1473,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1532,
											"end": 1538,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1582,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1564,
											"end": 1571,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1556,
											"end": 1588,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1605,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 1553,
											"end": 1605,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1605,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 1553,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1669,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1646,
											"end": 1669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1473,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1806,
											"end": 1812,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1870,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1846,
											"end": 1853,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1842,
											"end": 1865,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1871,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1835,
											"end": 1888,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1835,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 1835,
											"end": 1888,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1882,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 1886,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1835,
											"end": 1888,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 1835,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 1952,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 1952,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 1952,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2021,
											"end": 2053,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2021,
											"end": 2053,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2156,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2156,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2201,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 2201,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2239,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 2201,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 2245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3442,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 3142,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3271,
											"end": 3273,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3250,
											"end": 3257,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3246,
											"end": 3269,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3242,
											"end": 3274,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3277,
											"end": 3289,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3332,
											"end": 3355,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3332,
											"end": 3355,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3332,
											"end": 3355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3398,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 3432,
											"end": 3434,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3398,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 3398,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3398,
											"end": 3436,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 3398,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3388,
											"end": 3436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3388,
											"end": 3436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3442,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3442,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 4075,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 3655,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3738,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3801,
											"end": 3803,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3789,
											"end": 3798,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3780,
											"end": 3787,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 3799,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3769,
											"end": 3821,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3769,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 3769,
											"end": 3821,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3815,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3769,
											"end": 3821,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 3769,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3840,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3840,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 3840,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3840,
											"end": 3869,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 3840,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3869,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3938,
											"end": 3940,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3910,
											"end": 3942,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3910,
											"end": 3942,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4041,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4024,
											"end": 4042,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4024,
											"end": 4042,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4024,
											"end": 4042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4043,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4043,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 4075,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3655,
											"end": 4075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4770,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 4080,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4298,
											"end": 4300,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4310,
											"end": 4331,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4310,
											"end": 4331,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4310,
											"end": 4331,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4380,
											"end": 4393,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4380,
											"end": 4393,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4283,
											"end": 4301,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4283,
											"end": 4301,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4283,
											"end": 4301,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4402,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4402,
											"end": 4424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4402,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4254,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4493,
											"end": 4497,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4498,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4498,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4455,
											"end": 4457,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4254,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4699,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 4526,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4540,
											"end": 4546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4538,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4534,
											"end": 4547,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4699,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 4526,
											"end": 4699,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4601,
											"end": 4614,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4601,
											"end": 4614,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4589,
											"end": 4615,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4589,
											"end": 4615,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4644,
											"end": 4648,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4672,
											"end": 4689,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4672,
											"end": 4689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4672,
											"end": 4689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4672,
											"end": 4689,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4635,
											"end": 4649,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4635,
											"end": 4649,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4635,
											"end": 4649,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4635,
											"end": 4649,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4562,
											"end": 4563,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4555,
											"end": 4564,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 4526,
											"end": 4699,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4699,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 4526,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4750,
											"end": 4754,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4755,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4755,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4764,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4764,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4764,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4764,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4080,
											"end": 4770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 5075,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 4775,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4843,
											"end": 4849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4857,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4906,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4883,
											"end": 4890,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4879,
											"end": 4902,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4872,
											"end": 4924,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4872,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 4872,
											"end": 4924,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4920,
											"end": 4921,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4918,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4872,
											"end": 4924,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 4872,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4943,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 4962,
											"end": 4971,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4943,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 4943,
											"end": 4972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4943,
											"end": 4972,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 4943,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4972,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5043,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5026,
											"end": 5044,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5044,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5045,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5045,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4775,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6901,
											"end": 7028,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 6901,
											"end": 7028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6962,
											"end": 6972,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 6957,
											"end": 6960,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6950,
											"end": 6951,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6974,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6993,
											"end": 6997,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6983,
											"end": 6998,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7017,
											"end": 7021,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7168,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 7033,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7072,
											"end": 7075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7110,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7093,
											"end": 7110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7093,
											"end": 7110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7090,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 7090,
											"end": 7133,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 7113,
											"end": 7131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7160,
											"end": 7161,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7149,
											"end": 7162,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7527,
											"end": 7655,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 7527,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7594,
											"end": 7603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7594,
											"end": 7603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7594,
											"end": 7603,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7626,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7626,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7626,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7612,
											"end": 7649,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7612,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 7612,
											"end": 7649,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 7629,
											"end": 7647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8036,
											"end": 8313,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 8036,
											"end": 8313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8103,
											"end": 8109,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8156,
											"end": 8158,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8144,
											"end": 8153,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8135,
											"end": 8142,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8131,
											"end": 8154,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8127,
											"end": 8159,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8176,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 8124,
											"end": 8176,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8170,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8162,
											"end": 8174,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8176,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 8124,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8204,
											"end": 8213,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8198,
											"end": 8214,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8257,
											"end": 8262,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8250,
											"end": 8263,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8243,
											"end": 8264,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8241,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8233,
											"end": 8265,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8223,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 8223,
											"end": 8283,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8276,
											"end": 8277,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10148,
											"end": 10275,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 10148,
											"end": 10275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10209,
											"end": 10219,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 10204,
											"end": 10207,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 10200,
											"end": 10220,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10197,
											"end": 10198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10190,
											"end": 10221,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10240,
											"end": 10244,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 10237,
											"end": 10238,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10264,
											"end": 10268,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10261,
											"end": 10262,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10269,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10280,
											"end": 10448,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 10280,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10353,
											"end": 10362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10353,
											"end": 10362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10353,
											"end": 10362,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10384,
											"end": 10393,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10384,
											"end": 10393,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10401,
											"end": 10416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10401,
											"end": 10416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10401,
											"end": 10416,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10417,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10417,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10381,
											"end": 10418,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 10371,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 10371,
											"end": 10442,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10422,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 10422,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 10422,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10578,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 10453,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10539,
											"end": 10549,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10539,
											"end": 10549,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10539,
											"end": 10549,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10536,
											"end": 10572,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10536,
											"end": 10572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 10536,
											"end": 10572,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10552,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 10552,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 10552,
											"end": 10570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10583,
											"end": 10710,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 10583,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10644,
											"end": 10654,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 10639,
											"end": 10642,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 10635,
											"end": 10655,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10632,
											"end": 10633,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10625,
											"end": 10656,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10675,
											"end": 10679,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 10672,
											"end": 10673,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10665,
											"end": 10680,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10699,
											"end": 10703,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10696,
											"end": 10697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 10704,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 10851,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10715,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10754,
											"end": 10757,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 10787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10772,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 10772,
											"end": 10811,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10791,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 10791,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 10791,
											"end": 10809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10791,
											"end": 10809,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 10791,
											"end": 10809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 10851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11210,
											"end": 11483,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 11210,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11278,
											"end": 11284,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11331,
											"end": 11333,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11319,
											"end": 11328,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11310,
											"end": 11317,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11306,
											"end": 11329,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11302,
											"end": 11334,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11299,
											"end": 11351,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11299,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 11299,
											"end": 11351,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11347,
											"end": 11348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11344,
											"end": 11345,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11337,
											"end": 11349,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11299,
											"end": 11351,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 11299,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11379,
											"end": 11388,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11373,
											"end": 11389,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11429,
											"end": 11433,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 11422,
											"end": 11427,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11418,
											"end": 11434,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11411,
											"end": 11416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11408,
											"end": 11435,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11398,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 11398,
											"end": 11453,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11449,
											"end": 11450,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11446,
											"end": 11447,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11439,
											"end": 11451,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12096,
											"end": 12247,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 12096,
											"end": 12247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12190,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 12179,
											"end": 12191,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12179,
											"end": 12191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12179,
											"end": 12191,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12165,
											"end": 12177,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12165,
											"end": 12177,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12165,
											"end": 12177,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12161,
											"end": 12192,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12161,
											"end": 12192,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12218,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12218,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12201,
											"end": 12241,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12201,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 12201,
											"end": 12241,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 12221,
											"end": 12239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12252,
											"end": 12627,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 12252,
											"end": 12627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12340,
											"end": 12341,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12358,
											"end": 12363,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12372,
											"end": 12621,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 12372,
											"end": 12621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12393,
											"end": 12394,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12383,
											"end": 12391,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12380,
											"end": 12395,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12372,
											"end": 12621,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12372,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 12372,
											"end": 12621,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12443,
											"end": 12447,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12438,
											"end": 12441,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12434,
											"end": 12448,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12428,
											"end": 12432,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12425,
											"end": 12449,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12422,
											"end": 12472,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12422,
											"end": 12472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 12422,
											"end": 12472,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 12452,
											"end": 12470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12502,
											"end": 12503,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12492,
											"end": 12500,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12488,
											"end": 12504,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12485,
											"end": 12534,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12485,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 12485,
											"end": 12534,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12516,
											"end": 12532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12516,
											"end": 12532,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12516,
											"end": 12532,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12516,
											"end": 12532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12485,
											"end": 12534,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 12485,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12599,
											"end": 12600,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12595,
											"end": 12611,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12595,
											"end": 12611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12595,
											"end": 12611,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12595,
											"end": 12611,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 12595,
											"end": 12611,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12555,
											"end": 12570,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12555,
											"end": 12570,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12372,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 12372,
											"end": 12621,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 13534,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 12632,
											"end": 13534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12681,
											"end": 12686,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12711,
											"end": 12719,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12701,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 12701,
											"end": 12781,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12752,
											"end": 12753,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12766,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 12766,
											"end": 12771,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12701,
											"end": 12781,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 12701,
											"end": 12781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12800,
											"end": 12804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12790,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 12790,
											"end": 12866,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12837,
											"end": 12838,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 12851,
											"end": 12856,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12790,
											"end": 12866,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 12790,
											"end": 12866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12882,
											"end": 12886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12900,
											"end": 12901,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12895,
											"end": 12954,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12895,
											"end": 12954,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12895,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 12895,
											"end": 12954,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12968,
											"end": 12969,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12963,
											"end": 13137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12963,
											"end": 13137,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12963,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 12963,
											"end": 13137,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 12875,
											"end": 13137,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12895,
											"end": 12954,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 12895,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12926,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12916,
											"end": 12926,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12939,
											"end": 12944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12939,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 12939,
											"end": 12944,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12963,
											"end": 13137,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 12963,
											"end": 13137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13000,
											"end": 13003,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 12990,
											"end": 12998,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12987,
											"end": 13004,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13027,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 12984,
											"end": 13027,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 13007,
											"end": 13025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13063,
											"end": 13064,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13049,
											"end": 13065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13049,
											"end": 13065,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 13122,
											"end": 13127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 13122,
											"end": 13127,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 13137,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 12875,
											"end": 13137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 13137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13221,
											"end": 13223,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13211,
											"end": 13219,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13208,
											"end": 13224,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13202,
											"end": 13205,
											"name": "PUSH",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 13196,
											"end": 13200,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13193,
											"end": 13206,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13189,
											"end": 13225,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13185,
											"name": "PUSH",
											"source": 12,
											"value": "4E"
										},
										{
											"begin": 13173,
											"end": 13181,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13170,
											"end": 13186,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13167,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 13159,
											"end": 13163,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13156,
											"end": 13168,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13152,
											"end": 13187,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13149,
											"end": 13226,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 13146,
											"end": 13349,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13146,
											"end": 13349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 13146,
											"end": 13349,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13258,
											"end": 13277,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13258,
											"end": 13277,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13258,
											"end": 13277,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 13334,
											"end": 13339,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13146,
											"end": 13349,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 13146,
											"end": 13349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13381,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13406,
											"end": 13414,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13400,
											"end": 13404,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13381,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 13381,
											"end": 13423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13381,
											"end": 13423,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 13381,
											"end": 13423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13459,
											"end": 13465,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13455,
											"end": 13456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13451,
											"end": 13457,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 13447,
											"end": 13466,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13438,
											"end": 13445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13435,
											"end": 13467,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13432,
											"end": 13490,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13432,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 13432,
											"end": 13490,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13470,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 13470,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 13470,
											"end": 13488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13470,
											"end": 13488,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 13470,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13508,
											"end": 13528,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 13508,
											"end": 13528,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 13534,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12632,
											"end": 13534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13679,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 13539,
											"end": 13679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13597,
											"end": 13602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13626,
											"end": 13673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 13667,
											"end": 13671,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 13657,
											"end": 13665,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13653,
											"end": 13672,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13647,
											"end": 13651,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13626,
											"end": 13673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 13626,
											"end": 13673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13684,
											"end": 13811,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 13684,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13745,
											"end": 13755,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 13740,
											"end": 13743,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 13736,
											"end": 13756,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 13733,
											"end": 13734,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13776,
											"end": 13780,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 13773,
											"end": 13774,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13766,
											"end": 13781,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13800,
											"end": 13804,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13797,
											"end": 13798,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13790,
											"end": 13805,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13816,
											"end": 13936,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 13816,
											"end": 13936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13856,
											"end": 13857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13882,
											"end": 13883,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13872,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 13872,
											"end": 13907,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13887,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 13887,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 13887,
											"end": 13905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13887,
											"end": 13905,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 13887,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13921,
											"end": 13930,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13921,
											"end": 13930,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13816,
											"end": 13936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13941,
											"end": 14053,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 13941,
											"end": 14053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13973,
											"end": 13974,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13999,
											"end": 14000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13989,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 13989,
											"end": 14024,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 14004,
											"end": 14022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14038,
											"end": 14047,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 14038,
											"end": 14047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13941,
											"end": 14053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									],
									".data": {
										"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"weusd/IMainContract.sol",
								"weusd/IPicweUSD.sol",
								"weusd/manageusd.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"CROSS_CHAIN_MINTER_ROLE()": "37174202",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"PAUSER_ROLE()": "e63ab1e9",
							"WEUSD_DECIMALS()": "eda87eff",
							"activeSourceRequests(uint256)": "854935f1",
							"activeTargetRequests(uint256)": "34d8c7d5",
							"burnWeUSD(address,uint256)": "d19fad37",
							"burnWeUSDCrossChain(uint256,uint256,address)": "0bd31a57",
							"deleteStablecoin(address)": "1008776f",
							"feeRecipient()": "46904840",
							"gasfee()": "00677016",
							"getRequestById(uint256)": "26757b73",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getUserSourceRequests(address,uint256,uint256)": "973697bd",
							"getUserTargetRequests(address,uint256,uint256)": "bb93ede0",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isRequestIdUsed(uint256)": "1e7502d7",
							"mainContract()": "d270e7ab",
							"mintWeUSD(address,uint256)": "a2519ae4",
							"mintWeUSDCrossChain(uint256,uint256,uint256,address)": "1f224564",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"registerStablecoin(address)": "c6400657",
							"registeredStablecoins(address)": "9ea4f3a4",
							"renounceRole(bytes32,address)": "36568abe",
							"requestCount()": "5badbe4c",
							"requestExists(uint256)": "ea277eca",
							"requestIdToSourceActiveIndex(uint256)": "c99773ce",
							"requestIdToTargetActiveIndex(uint256)": "bead8d26",
							"revokeRole(bytes32,address)": "d547741f",
							"setFeeRecipient(address)": "e74b981b",
							"setGasfee(uint256)": "c5494ffb",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unpause()": "3f4ba83a",
							"usedRequestIds(uint256)": "2f92893c",
							"weUSD()": "a62e1b3e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weUSD\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_crossChainMinter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_main\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weUSDAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stablecoinAmount\",\"type\":\"uint256\"}],\"name\":\"BurnedWeUSD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetUser\",\"type\":\"address\"}],\"name\":\"CrossChainBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetUser\",\"type\":\"address\"}],\"name\":\"CrossChainMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stablecoinAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weUSDAmount\",\"type\":\"uint256\"}],\"name\":\"MintedWeUSD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"}],\"name\":\"StablecoinDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"}],\"name\":\"StablecoinRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CROSS_CHAIN_MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEUSD_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeSourceRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeTargetRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weUSDAmount\",\"type\":\"uint256\"}],\"name\":\"burnWeUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"targetUser\",\"type\":\"address\"}],\"name\":\"burnWeUSDCrossChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"}],\"name\":\"deleteStablecoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getRequestById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isburn\",\"type\":\"bool\"}],\"internalType\":\"struct RequestData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pageSize\",\"type\":\"uint256\"}],\"name\":\"getUserSourceRequests\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pageSize\",\"type\":\"uint256\"}],\"name\":\"getUserTargetRequests\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"isRequestIdUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainContract\",\"outputs\":[{\"internalType\":\"contract IMainContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stablecoinAmount\",\"type\":\"uint256\"}],\"name\":\"mintWeUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"targetUser\",\"type\":\"address\"}],\"name\":\"mintWeUSDCrossChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"}],\"name\":\"registerStablecoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registeredStablecoins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"requestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIdToSourceActiveIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIdToTargetActiveIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasfee\",\"type\":\"uint256\"}],\"name\":\"setGasfee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedRequestIds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weUSD\",\"outputs\":[{\"internalType\":\"contract IPicweUSD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"burnWeUSD(address,uint256)\":{\"details\":\"Burns weUSD tokens and returns stablecoins to the user.\",\"params\":{\"stablecoin\":\"The address of the stablecoin to be returned.\",\"weUSDAmount\":\"The amount of weUSD to be burned.\"}},\"burnWeUSDCrossChain(uint256,uint256,address)\":{\"details\":\"Burns weUSD tokens on the source chain for cross-chain transfer.\",\"params\":{\"amount\":\"The total amount of weUSD to be burned (including gas fee).\",\"targetChainId\":\"The ID of the target chain where weUSD will be minted.\",\"targetUser\":\"The address of the user on the target chain to receive the minted weUSD.\"}},\"deleteStablecoin(address)\":{\"details\":\"Deletes a stablecoin (stablecoin).\",\"params\":{\"stablecoin\":\"The address of the stablecoin to be deleted. \"}},\"getRequestById(uint256)\":{\"details\":\"Retrieves the request data for a given request ID\",\"params\":{\"_requestId\":\"The unique identifier of the request\"},\"returns\":{\"_0\":\"RequestData struct containing the request details \"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getUserSourceRequests(address,uint256,uint256)\":{\"details\":\"Get all source chain request IDs for a specific user\",\"params\":{\"_page\":\"Page number (starting from 1)\",\"_pageSize\":\"Number of items per page\",\"_user\":\"User address\"},\"returns\":{\"_0\":\"uint256[] Array containing source chain request IDs for the user's specified page\",\"_1\":\"uint256 Total number of source chain requests for the user \"}},\"getUserTargetRequests(address,uint256,uint256)\":{\"details\":\"Get all target chain request IDs for a specific user\",\"params\":{\"_page\":\"Page number (starting from 1)\",\"_pageSize\":\"Number of items per page\",\"_user\":\"User address\"},\"returns\":{\"_0\":\"uint256[] Array containing target chain request IDs for the user's specified page\",\"_1\":\"uint256 Total number of target chain requests for the user \"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mintWeUSD(address,uint256)\":{\"details\":\"Mints weUSD tokens in exchange for stablecoins.\",\"params\":{\"stablecoin\":\"The address of the stablecoin to be exchanged.\",\"stablecoinAmount\":\"The amount of stablecoin to be exchanged.\"}},\"mintWeUSDCrossChain(uint256,uint256,uint256,address)\":{\"details\":\"Mints weUSD tokens on the target chain for cross-chain transfer.\",\"params\":{\"amount\":\"Amount of weUSD to be minted\",\"requestId\":\"Unique request ID to prevent duplicate processing\",\"sourceChainId\":\"ID of the source chain\",\"targetUser\":\"Address of the target user to receive the minted weUSD\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"registerStablecoin(address)\":{\"details\":\"Registers a stablecoin (stablecoin).\",\"params\":{\"stablecoin\":\"The address of the stablecoin to be registered. \"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"requestExists(uint256)\":{\"details\":\"Checks if a request exists for a given request ID\",\"params\":{\"_requestId\":\"The unique identifier of the request\"},\"returns\":{\"_0\":\"bool indicating whether the request exists \"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setFeeRecipient(address)\":{\"details\":\"Sets the fee recipient (feeRecipient).\",\"params\":{\"_feeRecipient\":\"The new fee recipient address. \"}},\"setGasfee(uint256)\":{\"details\":\"Sets the gas fee (gasfee).\",\"params\":{\"_gasfee\":\"The new gas fee amount. \"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnWeUSD(address,uint256)\":{\"notice\":\"This function can be called by any user.The stablecoin must be registered.The weUSD amount is converted to stablecoin based on the decimal difference.A BurnedWeUSD event will be emitted after successful burning.\"},\"burnWeUSDCrossChain(uint256,uint256,address)\":{\"notice\":\"This function can be called by any user when the contract is not paused.A portion of the amount is deducted as gas fee and transferred to the fee recipient.The remaining amount is burned from the sender's balance.A CrossChainBurn event is emitted after successful burning.\"},\"deleteStablecoin(address)\":{\"notice\":\"This function can only be called by users with the ADMIN_ROLE.A StablecoinDeleted event will be triggered after successful deletion.\"},\"getRequestById(uint256)\":{\"notice\":\"This function can be called by any addressReturns a struct with default values if the request ID doesn't exist\"},\"getUserSourceRequests(address,uint256,uint256)\":{\"notice\":\"This function can be called by any addressIf the user has no source chain requests, an empty array will be returnedIf _page or _pageSize is 0, all requests will be returned\"},\"getUserTargetRequests(address,uint256,uint256)\":{\"notice\":\"Any address can call this functionIf the user has no target chain requests, an empty array will be returnedIf _page or _pageSize is 0, all requests will be returned\"},\"mintWeUSD(address,uint256)\":{\"notice\":\"This function can be called by any user.The stablecoin must be registered.The stablecoin amount is converted to weUSD based on the decimal difference.A MintedWeUSD event will be emitted after successful minting.\"},\"mintWeUSDCrossChain(uint256,uint256,uint256,address)\":{\"notice\":\"This function can only be called by addresses with the CROSS_CHAIN_MINTER_ROLE role when the contract is not pausedThe requestId must not have been used beforeThe source chain must be different from the current chainThe minting amount must be greater than 0The target user address cannot be the zero addressA CrossChainMint event will be emitted after successful minting\"},\"registerStablecoin(address)\":{\"notice\":\"This function can only be called by users with the ADMIN_ROLE.A StablecoinRegistered event will be triggered after successful registration.\"},\"requestExists(uint256)\":{\"notice\":\"This function can be called by any address\"},\"setFeeRecipient(address)\":{\"notice\":\"This function can only be called by users with the ADMIN_ROLE.A FeeRecipientSet event will be triggered after successful setting.\"},\"setGasfee(uint256)\":{\"notice\":\"This function can only be called by users with the ADMIN_ROLE.A GasFeeSet event will be triggered after successful setting.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"weusd/manageusd.sol\":\"weUSD_manager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"weusd/IMainContract.sol\":{\"keccak256\":\"0x9b7ab6959d856e16823cde7e1e20a93fa5704ea016f41891cf462fb389224cf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b02e889d923d01ef0a0c3573b1e2b6383e44f12d64578b0b0c890caa4d2ded0\",\"dweb:/ipfs/QmbMZcqQZuV8rJgJMmmUp3xgTzQggRLx4FhQwLKyjKXLoJ\"]},\"weusd/IPicweUSD.sol\":{\"keccak256\":\"0xca916d69b6d6e91272bdbf75d78ab96a83c86f619d847916c4b1cd1c91830870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89fecb9f4008c4ee310666ddbc8d4a2d60736c0596bef739212c3f4cc418a01a\",\"dweb:/ipfs/QmWZP6ZFXAyk6KoXryvP8Cb5j9NuSKyZYFchsTXUZPVNiz\"]},\"weusd/manageusd.sol\":{\"keccak256\":\"0x059cc7937e23c7a80be9889a7a25968d13a1c7e6b4af2421944d40023eb1a747\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://715cde4cf7fd32db528d2e92978bae65228e3791afe0f7b6b4b72e0892c7f6b3\",\"dweb:/ipfs/QmNWmMpZYewtx2kZV7dWUwAUotgGg5VL96zt1rfMzX2fbK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 521,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 1776,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "mainContract",
								"offset": 1,
								"slot": "1",
								"type": "t_contract(IMainContract)1731"
							},
							{
								"astId": 1794,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "weUSD",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IPicweUSD)1751"
							},
							{
								"astId": 1796,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "requestCount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1809,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "gasfee",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1811,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "feeRecipient",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1814,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "activeSourceRequests",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1817,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "activeTargetRequests",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1821,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "registeredStablecoins",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1825,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "usedRequestIds",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 1830,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "requests",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_struct(RequestData)1769_storage)"
							},
							{
								"astId": 1834,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "requestIdToSourceActiveIndex",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1838,
								"contract": "weusd/manageusd.sol:weUSD_manager",
								"label": "requestIdToTargetActiveIndex",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMainContract)1731": {
								"encoding": "inplace",
								"label": "contract IMainContract",
								"numberOfBytes": "20"
							},
							"t_contract(IPicweUSD)1751": {
								"encoding": "inplace",
								"label": "contract IPicweUSD",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(RequestData)1769_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct RequestData)",
								"numberOfBytes": "32",
								"value": "t_struct(RequestData)1769_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(RequestData)1769_storage": {
								"encoding": "inplace",
								"label": "struct RequestData",
								"members": [
									{
										"astId": 1762,
										"contract": "weusd/manageusd.sol:weUSD_manager",
										"label": "requestId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1764,
										"contract": "weusd/manageusd.sol:weUSD_manager",
										"label": "user",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1766,
										"contract": "weusd/manageusd.sol:weUSD_manager",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1768,
										"contract": "weusd/manageusd.sol:weUSD_manager",
										"label": "isburn",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "weusd/manageusd.sol:weUSD_manager",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "weusd/manageusd.sol:weUSD_manager",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burnWeUSD(address,uint256)": {
								"notice": "This function can be called by any user.The stablecoin must be registered.The weUSD amount is converted to stablecoin based on the decimal difference.A BurnedWeUSD event will be emitted after successful burning."
							},
							"burnWeUSDCrossChain(uint256,uint256,address)": {
								"notice": "This function can be called by any user when the contract is not paused.A portion of the amount is deducted as gas fee and transferred to the fee recipient.The remaining amount is burned from the sender's balance.A CrossChainBurn event is emitted after successful burning."
							},
							"deleteStablecoin(address)": {
								"notice": "This function can only be called by users with the ADMIN_ROLE.A StablecoinDeleted event will be triggered after successful deletion."
							},
							"getRequestById(uint256)": {
								"notice": "This function can be called by any addressReturns a struct with default values if the request ID doesn't exist"
							},
							"getUserSourceRequests(address,uint256,uint256)": {
								"notice": "This function can be called by any addressIf the user has no source chain requests, an empty array will be returnedIf _page or _pageSize is 0, all requests will be returned"
							},
							"getUserTargetRequests(address,uint256,uint256)": {
								"notice": "Any address can call this functionIf the user has no target chain requests, an empty array will be returnedIf _page or _pageSize is 0, all requests will be returned"
							},
							"mintWeUSD(address,uint256)": {
								"notice": "This function can be called by any user.The stablecoin must be registered.The stablecoin amount is converted to weUSD based on the decimal difference.A MintedWeUSD event will be emitted after successful minting."
							},
							"mintWeUSDCrossChain(uint256,uint256,uint256,address)": {
								"notice": "This function can only be called by addresses with the CROSS_CHAIN_MINTER_ROLE role when the contract is not pausedThe requestId must not have been used beforeThe source chain must be different from the current chainThe minting amount must be greater than 0The target user address cannot be the zero addressA CrossChainMint event will be emitted after successful minting"
							},
							"registerStablecoin(address)": {
								"notice": "This function can only be called by users with the ADMIN_ROLE.A StablecoinRegistered event will be triggered after successful registration."
							},
							"requestExists(uint256)": {
								"notice": "This function can be called by any address"
							},
							"setFeeRecipient(address)": {
								"notice": "This function can only be called by users with the ADMIN_ROLE.A FeeRecipientSet event will be triggered after successful setting."
							},
							"setGasfee(uint256)": {
								"notice": "This function can only be called by users with the ADMIN_ROLE.A GasFeeSet event will be triggered after successful setting."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							512
						],
						"ERC165": [
							653
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 513,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 512,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 654,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 653,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 512,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 653,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								653,
								665,
								378,
								512
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										652
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 652,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 456,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 456,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 456,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 456,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 456,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 456,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						],
						"IERC20Metadata": [
							482
						]
					},
					"id": 483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 483,
							"sourceUnit": 457,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 459,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 456,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 462,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 456,
										"src": "305:6:3"
									},
									"id": 463,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 482,
							"linearizedBaseContracts": [
								482,
								456
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 482,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 482,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 482,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 483,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							512
						]
					},
					"id": 513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 484,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 485,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 490,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 489,
												"id": 492,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 512,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 499,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 498,
												"id": 501,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 512,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 507,
												"id": 509,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 512,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 513,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							512
						],
						"Pausable": [
							629
						]
					},
					"id": 630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 513,
							"src": "128:45:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 515,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 512,
										"src": "136:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 518,
										"name": "Context",
										"nameLocations": [
											"645:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 512,
										"src": "645:7:5"
									},
									"id": 519,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:5"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 517,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:5",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 629,
							"linearizedBaseContracts": [
								629,
								512
							],
							"name": "Pausable",
							"nameLocation": "633:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 521,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 629,
									"src": "659:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 520,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:5",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 526,
									"name": "Paused",
									"nameLocation": "770:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "777:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:5"
									},
									"src": "764:30:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:5",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 531,
									"name": "Unpaused",
									"nameLocation": "881:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "890:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:5"
									},
									"src": "875:32:5"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:5",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 534,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:5"
									},
									"src": "994:22:5"
								},
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:5",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 537,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:5"
									},
									"src": "1107:22:5"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "1221:32:5",
										"statements": [
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 541,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1231:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:5",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 546,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:5"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:5"
									},
									"scope": 629,
									"src": "1207:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "1464:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 549,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "1474:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:5"
											},
											{
												"id": 552,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:5"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:5",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 554,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:5"
									},
									"src": "1439:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1711:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 557,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "1721:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:5"
											},
											{
												"id": 560,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:5",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 562,
									"name": "whenPaused",
									"nameLocation": "1698:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:5"
									},
									"src": "1689:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "1903:31:5",
										"statements": [
											{
												"expression": {
													"id": 568,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 521,
													"src": "1920:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 567,
												"id": 569,
												"nodeType": "Return",
												"src": "1913:14:5"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:5",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1897:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:5"
									},
									"scope": 629,
									"src": "1850:84:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "2053:77:5",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 575,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "2067:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 581,
												"nodeType": "IfStatement",
												"src": "2063:61:5",
												"trueBody": {
													"id": 580,
													"nodeType": "Block",
													"src": "2077:47:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 577,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "2098:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 579,
															"nodeType": "RevertStatement",
															"src": "2091:22:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:5",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:5"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:5"
									},
									"scope": 629,
									"src": "2002:128:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "2250:78:5",
										"statements": [
											{
												"condition": {
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:5",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 587,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "2265:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "2260:62:5",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "2275:47:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 590,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "2296:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 592,
															"nodeType": "RevertStatement",
															"src": "2289:22:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:5",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:5"
									},
									"scope": 629,
									"src": "2202:126:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "2512:66:5",
										"statements": [
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 602,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2522:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 607,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "2558:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 606,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2551:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "EmitStatement",
												"src": "2546:25:5"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:5",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 600,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 599,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 554,
												"src": "2498:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:5"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:5"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:5"
									},
									"scope": 629,
									"src": "2463:115:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "2758:69:5",
										"statements": [
											{
												"expression": {
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 618,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2768:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 623,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "2807:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 622,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2798:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "EmitStatement",
												"src": "2793:27:5"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:5",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 616,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 615,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 562,
												"src": "2747:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:5"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:5"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:5"
									},
									"scope": 629,
									"src": "2710:117:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 630,
							"src": "615:2214:5",
							"usedErrors": [
								534,
								537
							],
							"usedEvents": [
								526,
								531
							]
						}
					],
					"src": "102:2728:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							653
						],
						"IERC165": [
							665
						]
					},
					"id": 654,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 654,
							"sourceUnit": 666,
							"src": "140:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 632,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 665,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 635,
										"name": "IERC165",
										"nameLocations": [
											"687:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "687:7:6"
									},
									"id": 636,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 653,
							"linearizedBaseContracts": [
								653,
								665
							],
							"name": "ERC165",
							"nameLocation": "677:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										664
									],
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "844:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "861:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 646,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "881:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$665_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$665_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 645,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$665",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 643,
												"id": 650,
												"nodeType": "Return",
												"src": "854:47:6"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "789:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 638,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:6"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "838:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:6"
									},
									"scope": 653,
									"src": "762:146:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 654,
							"src": "659:251:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							665
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 655,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 656,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 665,
							"linearizedBaseContracts": [
								665
							],
							"name": "IERC165",
							"nameLocation": "431:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "817:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 658,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:7"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "860:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:7"
									},
									"scope": 665,
									"src": "790:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 666,
							"src": "421:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1719
						]
					},
					"id": 1720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1719,
							"linearizedBaseContracts": [
								1719
							],
							"name": "Math",
							"nameLocation": "211:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:8",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 671,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:8"
									},
									"src": "277:29:8"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 676,
									"members": [
										{
											"id": 672,
											"name": "Floor",
											"nameLocation": "336:5:8",
											"nodeType": "EnumValue",
											"src": "336:5:8"
										},
										{
											"id": 673,
											"name": "Ceil",
											"nameLocation": "379:4:8",
											"nodeType": "EnumValue",
											"src": "379:4:8"
										},
										{
											"id": 674,
											"name": "Trunc",
											"nameLocation": "421:5:8",
											"nodeType": "EnumValue",
											"src": "421:5:8"
										},
										{
											"id": 675,
											"name": "Expand",
											"nameLocation": "451:6:8",
											"nodeType": "EnumValue",
											"src": "451:6:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:8",
									"nodeType": "EnumDefinition",
									"src": "312:169:8"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "661:140:8",
										"statements": [
											{
												"id": 706,
												"nodeType": "UncheckedBlock",
												"src": "671:124:8",
												"statements": [
													{
														"assignments": [
															689
														],
														"declarations": [
															{
																"constant": false,
																"id": 689,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 706,
																"src": "695:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 688,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 693,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 690,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "707:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 691,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "711:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 694,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "730:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 695,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "734:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 701,
														"nodeType": "IfStatement",
														"src": "726:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 699,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 687,
															"id": 700,
															"nodeType": "Return",
															"src": "737:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 703,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "782:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 687,
														"id": 705,
														"nodeType": "Return",
														"src": "768:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:8"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "646:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "652:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:8"
									},
									"scope": 1719,
									"src": "585:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "984:113:8",
										"statements": [
											{
												"id": 734,
												"nodeType": "UncheckedBlock",
												"src": "994:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1022:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 721,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "1026:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 727,
														"nodeType": "IfStatement",
														"src": "1018:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 719,
															"id": 726,
															"nodeType": "Return",
															"src": "1029:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 729,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "1074:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 730,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "1078:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 732,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 719,
														"id": 733,
														"nodeType": "Return",
														"src": "1060:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "924:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "935:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:8"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "969:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "975:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:8"
									},
									"scope": 1719,
									"src": "908:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "1283:417:8",
										"statements": [
											{
												"id": 776,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 748,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "1551:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 755,
														"nodeType": "IfStatement",
														"src": "1547:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 747,
															"id": 754,
															"nodeType": "Return",
															"src": "1559:16:8"
														}
													},
													{
														"assignments": [
															757
														],
														"declarations": [
															{
																"constant": false,
																"id": 757,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 776,
																"src": "1589:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 756,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 761,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 758,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "1601:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 759,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "1605:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 762,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "1624:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 763,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "1628:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 765,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "1633:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 771,
														"nodeType": "IfStatement",
														"src": "1620:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 769,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 747,
															"id": 770,
															"nodeType": "Return",
															"src": "1636:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 773,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "1681:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 774,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 747,
														"id": 775,
														"nodeType": "Return",
														"src": "1667:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1223:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1234:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:8"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1268:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1274:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:8"
									},
									"scope": 1719,
									"src": "1207:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "1887:114:8",
										"statements": [
											{
												"id": 804,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 790,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "1925:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 797,
														"nodeType": "IfStatement",
														"src": "1921:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 789,
															"id": 796,
															"nodeType": "Return",
															"src": "1933:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 799,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "1978:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 800,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "1982:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 802,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 789,
														"id": 803,
														"nodeType": "Return",
														"src": "1964:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "1827:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "1838:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:8"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "1872:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 785,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "1878:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:8"
									},
									"scope": 1719,
									"src": "1811:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "2198:114:8",
										"statements": [
											{
												"id": 832,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 818,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "2236:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 825,
														"nodeType": "IfStatement",
														"src": "2232:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 823,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 817,
															"id": 824,
															"nodeType": "Return",
															"src": "2244:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 827,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "2289:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 828,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "2293:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 830,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 817,
														"id": 831,
														"nodeType": "Return",
														"src": "2275:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2138:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2149:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:8"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2183:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2189:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:8"
									},
									"scope": 1719,
									"src": "2122:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "2449:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 844,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2466:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 845,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "2470:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 848,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "2478:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:8",
													"trueExpression": {
														"id": 847,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "2474:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 843,
												"id": 850,
												"nodeType": "Return",
												"src": "2459:20:8"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2395:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2406:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:8"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2440:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:8"
									},
									"scope": 1719,
									"src": "2382:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2624:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 862,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "2641:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 863,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "2645:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 866,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2653:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:8",
													"trueExpression": {
														"id": 865,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "2649:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 861,
												"id": 868,
												"nodeType": "Return",
												"src": "2634:20:8"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2570:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2581:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:8"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2615:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:8"
									},
									"scope": 1719,
									"src": "2557:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "2845:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 880,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "2900:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 881,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "2904:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 883,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 884,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "2910:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 885,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "2914:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 887,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 879,
												"id": 891,
												"nodeType": "Return",
												"src": "2892:28:8"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2791:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2802:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:8"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2836:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:8"
									},
									"scope": 1719,
									"src": "2774:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "3219:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 903,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "3233:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 911,
												"nodeType": "IfStatement",
												"src": "3229:127:8",
												"trueBody": {
													"id": 910,
													"nodeType": "Block",
													"src": "3241:115:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 906,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "3340:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 907,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "3344:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 902,
															"id": 909,
															"nodeType": "Return",
															"src": "3333:12:8"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 912,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "3444:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 916,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "3458:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 919,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 920,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "3467:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 902,
												"id": 925,
												"nodeType": "Return",
												"src": "3437:35:8"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "3165:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "3176:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:8"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "3210:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:8"
									},
									"scope": 1719,
									"src": "3148:331:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "3901:4018:8",
										"statements": [
											{
												"id": 1051,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:8",
												"statements": [
													{
														"assignments": [
															940
														],
														"declarations": [
															{
																"constant": false,
																"id": 940,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1051,
																"src": "4232:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 939,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 944,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 941,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "4248:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 942,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "4252:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:8"
													},
													{
														"assignments": [
															946
														],
														"declarations": [
															{
																"constant": false,
																"id": 946,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1051,
																"src": "4312:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 945,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 947,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:8"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:8",
															"nodeType": "YulBlock",
															"src": "4392:122:8",
															"statements": [
																{
																	"nativeSrc": "4410:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:8"
																				},
																				"nativeSrc": "4433:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:8"
																		},
																		"nativeSrc": "4420:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:8",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:8",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:8"
																				},
																				"nativeSrc": "4470:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:8"
																				},
																				"nativeSrc": "4486:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:8"
																		},
																		"nativeSrc": "4466:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 940,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:8",
																"valueSize": 1
															},
															{
																"declaration": 940,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:8",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:8",
																"valueSize": 1
															},
															{
																"declaration": 930,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:8",
																"valueSize": 1
															},
															{
																"declaration": 932,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:8",
																"valueSize": 1
															}
														],
														"id": 948,
														"nodeType": "InlineAssembly",
														"src": "4383:131:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 949,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "4595:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 957,
														"nodeType": "IfStatement",
														"src": "4591:368:8",
														"trueBody": {
															"id": 956,
															"nodeType": "Block",
															"src": "4607:352:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 952,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "4925:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 953,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 934,
																			"src": "4933:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 938,
																	"id": 955,
																	"nodeType": "Return",
																	"src": "4918:26:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 958,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "5065:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 959,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "5080:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 965,
														"nodeType": "IfStatement",
														"src": "5061:88:8",
														"trueBody": {
															"id": 964,
															"nodeType": "Block",
															"src": "5087:62:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 961,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "5112:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 963,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:8"
																}
															]
														}
													},
													{
														"assignments": [
															967
														],
														"declarations": [
															{
																"constant": false,
																"id": 967,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1051,
																"src": "5404:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 966,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 968,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:8"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:8",
															"nodeType": "YulBlock",
															"src": "5444:291:8",
															"statements": [
																{
																	"nativeSrc": "5513:38:8",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:8"
																		},
																		"nativeSrc": "5526:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:8",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:8"
																				},
																				"nativeSrc": "5653:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:8"
																		},
																		"nativeSrc": "5642:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:8",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:8"
																		},
																		"nativeSrc": "5700:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 934,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:8",
																"valueSize": 1
															},
															{
																"declaration": 940,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:8",
																"valueSize": 1
															},
															{
																"declaration": 940,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:8",
																"valueSize": 1
															},
															{
																"declaration": 940,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:8",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:8",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:8",
																"valueSize": 1
															},
															{
																"declaration": 967,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:8",
																"valueSize": 1
															},
															{
																"declaration": 967,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:8",
																"valueSize": 1
															},
															{
																"declaration": 967,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:8",
																"valueSize": 1
															},
															{
																"declaration": 930,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:8",
																"valueSize": 1
															},
															{
																"declaration": 932,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:8",
																"valueSize": 1
															}
														],
														"id": 969,
														"nodeType": "InlineAssembly",
														"src": "5435:300:8"
													},
													{
														"assignments": [
															971
														],
														"declarations": [
															{
																"constant": false,
																"id": 971,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1051,
																"src": "5939:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 970,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 978,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 972,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "5954:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 974,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 934,
																			"src": "5973:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 976,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:8"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:8",
															"nodeType": "YulBlock",
															"src": "6008:362:8",
															"statements": [
																{
																	"nativeSrc": "6073:37:8",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:8"
																		},
																		"nativeSrc": "6088:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:8",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:8"
																		},
																		"nativeSrc": "6186:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:8",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:8"
																						},
																						"nativeSrc": "6333:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:8"
																				},
																				"nativeSrc": "6329:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:8"
																		},
																		"nativeSrc": "6325:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 934,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:8",
																"valueSize": 1
															},
															{
																"declaration": 934,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:8",
																"valueSize": 1
															},
															{
																"declaration": 940,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:8",
																"valueSize": 1
															},
															{
																"declaration": 940,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:8",
																"valueSize": 1
															},
															{
																"declaration": 971,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:8",
																"valueSize": 1
															},
															{
																"declaration": 971,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:8",
																"valueSize": 1
															},
															{
																"declaration": 971,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:8",
																"valueSize": 1
															},
															{
																"declaration": 971,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:8",
																"valueSize": 1
															},
															{
																"declaration": 971,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:8",
																"valueSize": 1
															}
														],
														"id": 979,
														"nodeType": "InlineAssembly",
														"src": "5999:371:8"
													},
													{
														"expression": {
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 980,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "6436:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 981,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "6445:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 982,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "6453:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 985,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:8"
													},
													{
														"assignments": [
															987
														],
														"declarations": [
															{
																"constant": false,
																"id": 987,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1051,
																"src": "6775:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 986,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 994,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 989,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 934,
																			"src": "6798:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 991,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:8"
													},
													{
														"expression": {
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 995,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "7031:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 997,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "7046:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 998,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "7060:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1002,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:8"
													},
													{
														"expression": {
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1003,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "7100:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1005,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "7115:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1006,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "7129:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1010,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:8"
													},
													{
														"expression": {
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1011,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "7170:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1013,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "7185:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1014,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "7199:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1018,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:8"
													},
													{
														"expression": {
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1019,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "7240:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1021,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "7255:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1022,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "7269:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1026,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:8"
													},
													{
														"expression": {
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1027,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "7310:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1029,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "7325:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1030,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "7339:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1034,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:8"
													},
													{
														"expression": {
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1035,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "7381:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1037,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "7396:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1038,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "7410:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1042,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:8"
													},
													{
														"expression": {
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1043,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "7851:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1044,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "7860:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1045,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "7868:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1048,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:8"
													},
													{
														"expression": {
															"id": 1049,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "7896:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 938,
														"id": 1050,
														"nodeType": "Return",
														"src": "7889:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "3819:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "3830:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "3841:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:8"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "3885:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:8"
									},
									"scope": 1719,
									"src": "3803:4116:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "8161:192:8",
										"statements": [
											{
												"assignments": [
													1069
												],
												"declarations": [
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "8171:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1068,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"arguments": [
														{
															"id": 1071,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "8195:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1072,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "8198:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1073,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "8201:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1070,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1053,
															1096
														],
														"referencedDeclaration": 1053,
														"src": "8188:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1077,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "8244:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$676",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$676",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1076,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "8227:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$676_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1080,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "8264:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1081,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "8267:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1082,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "8270:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1079,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "8223:101:8",
												"trueBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "8288:36:8",
													"statements": [
														{
															"expression": {
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1087,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "8302:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1090,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1093,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1069,
													"src": "8340:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1094,
												"nodeType": "Return",
												"src": "8333:13:8"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "8067:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "8078:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "8089:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "8110:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$676",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1062,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1061,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 676,
														"src": "8110:8:8"
													},
													"referencedDeclaration": 676,
													"src": "8110:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$676",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:8"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "8152:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:8"
									},
									"scope": 1719,
									"src": "8051:302:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "8644:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1104,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "8658:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "8654:45:8",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "8666:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1103,
															"id": 1108,
															"nodeType": "Return",
															"src": "8680:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1207,
														"src": "9378:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1121,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1115,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1099,
																			"src": "9406:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1114,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1375,
																			1410
																		],
																		"referencedDeclaration": 1375,
																		"src": "9401:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1119,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:8"
											},
											{
												"id": 1206,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:8",
												"statements": [
													{
														"expression": {
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1122,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "9839:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1123,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "9849:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1124,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "9858:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1125,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "9862:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1128,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1132,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:8"
													},
													{
														"expression": {
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1133,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "9888:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1134,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "9898:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1135,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "9907:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1136,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "9911:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1139,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1143,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:8"
													},
													{
														"expression": {
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1144,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "9937:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1145,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "9947:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1146,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "9956:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1147,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "9960:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1150,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1154,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:8"
													},
													{
														"expression": {
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1155,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "9986:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1156,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "9996:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1157,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "10005:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1158,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "10009:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1161,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1165,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:8"
													},
													{
														"expression": {
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1166,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "10035:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1167,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "10045:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1168,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "10054:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1169,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "10058:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1172,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1176,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:8"
													},
													{
														"expression": {
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1177,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "10084:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1178,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "10094:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1179,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "10103:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1180,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "10107:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1183,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1187,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:8"
													},
													{
														"expression": {
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1188,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "10133:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1189,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "10143:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1190,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "10152:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1191,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "10156:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1194,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1198,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1200,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "10193:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1201,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "10201:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1202,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "10205:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1199,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "10189:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1103,
														"id": 1205,
														"nodeType": "Return",
														"src": "10182:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "8601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:8"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "8635:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:8"
									},
									"scope": 1719,
									"src": "8587:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "10405:164:8",
										"statements": [
											{
												"id": 1241,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:8",
												"statements": [
													{
														"assignments": [
															1220
														],
														"declarations": [
															{
																"constant": false,
																"id": 1220,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1241,
																"src": "10439:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1219,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1224,
														"initialValue": {
															"arguments": [
																{
																	"id": 1222,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "10461:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1221,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1208,
																	1243
																],
																"referencedDeclaration": 1208,
																"src": "10456:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1225,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "10484:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1227,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1214,
																						"src": "10511:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$676",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$676",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1226,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1718,
																					"src": "10494:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$676_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1229,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1220,
																						"src": "10524:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1230,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1220,
																						"src": "10533:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1232,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1211,
																					"src": "10542:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1238,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1218,
														"id": 1240,
														"nodeType": "Return",
														"src": "10477:75:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "10343:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "10354:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$676",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1213,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1212,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 676,
														"src": "10354:8:8"
													},
													"referencedDeclaration": 676,
													"src": "10354:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$676",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:8"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "10396:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:8"
									},
									"scope": 1719,
									"src": "10329:240:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "10760:922:8",
										"statements": [
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1374,
														"src": "10770:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1254,
												"initialValue": {
													"hexValue": "30",
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:8"
											},
											{
												"id": 1371,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1255,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "10826:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1269,
														"nodeType": "IfStatement",
														"src": "10822:99:8",
														"trueBody": {
															"id": 1268,
															"nodeType": "Block",
															"src": "10844:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1260,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1246,
																			"src": "10862:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1263,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:8"
																},
																{
																	"expression": {
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1264,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "10893:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1267,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1270,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "10938:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1284,
														"nodeType": "IfStatement",
														"src": "10934:96:8",
														"trueBody": {
															"id": 1283,
															"nodeType": "Block",
															"src": "10955:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1275,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1246,
																			"src": "10973:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1278,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:8"
																},
																{
																	"expression": {
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1279,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "11003:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1282,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1285,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "11047:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1299,
														"nodeType": "IfStatement",
														"src": "11043:96:8",
														"trueBody": {
															"id": 1298,
															"nodeType": "Block",
															"src": "11064:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1290,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1246,
																			"src": "11082:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1293,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:8"
																},
																{
																	"expression": {
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1294,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "11112:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1297,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1300,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "11156:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1314,
														"nodeType": "IfStatement",
														"src": "11152:96:8",
														"trueBody": {
															"id": 1313,
															"nodeType": "Block",
															"src": "11173:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1246,
																			"src": "11191:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1308,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:8"
																},
																{
																	"expression": {
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1309,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "11221:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1312,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1315,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "11265:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1329,
														"nodeType": "IfStatement",
														"src": "11261:93:8",
														"trueBody": {
															"id": 1328,
															"nodeType": "Block",
															"src": "11281:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1320,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1246,
																			"src": "11299:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1323,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:8"
																},
																{
																	"expression": {
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1324,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "11328:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1327,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1330,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "11371:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1344,
														"nodeType": "IfStatement",
														"src": "11367:93:8",
														"trueBody": {
															"id": 1343,
															"nodeType": "Block",
															"src": "11387:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1335,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1246,
																			"src": "11405:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1338,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:8"
																},
																{
																	"expression": {
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1339,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "11434:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1342,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1345,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "11477:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1359,
														"nodeType": "IfStatement",
														"src": "11473:93:8",
														"trueBody": {
															"id": 1358,
															"nodeType": "Block",
															"src": "11493:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1350,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1246,
																			"src": "11511:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1353,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:8"
																},
																{
																	"expression": {
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1354,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "11540:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1357,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1360,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "11583:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1370,
														"nodeType": "IfStatement",
														"src": "11579:64:8",
														"trueBody": {
															"id": 1369,
															"nodeType": "Block",
															"src": "11599:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1365,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "11617:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1368,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1372,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1252,
													"src": "11669:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1250,
												"id": 1373,
												"nodeType": "Return",
												"src": "11662:13:8"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:8",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "10713:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:8"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "10751:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:8"
									},
									"scope": 1719,
									"src": "10699:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "11915:168:8",
										"statements": [
											{
												"id": 1408,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:8",
												"statements": [
													{
														"assignments": [
															1387
														],
														"declarations": [
															{
																"constant": false,
																"id": 1387,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1408,
																"src": "11949:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1386,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1391,
														"initialValue": {
															"arguments": [
																{
																	"id": 1389,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "11971:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1388,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1375,
																	1410
																],
																"referencedDeclaration": 1375,
																"src": "11966:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1392,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1387,
																"src": "11998:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1394,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1381,
																						"src": "12025:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$676",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$676",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1393,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1718,
																					"src": "12008:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$676_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1398,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1396,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1397,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1387,
																						"src": "12043:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1399,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1378,
																					"src": "12052:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1405,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1385,
														"id": 1407,
														"nodeType": "Return",
														"src": "11991:75:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "11849:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "11864:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$676",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1380,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1379,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 676,
														"src": "11864:8:8"
													},
													"referencedDeclaration": 676,
													"src": "11864:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$676",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:8"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "11906:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:8"
									},
									"scope": 1719,
									"src": "11835:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "12276:854:8",
										"statements": [
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "12286:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1421,
												"initialValue": {
													"hexValue": "30",
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:8"
											},
											{
												"id": 1535,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1422,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "12342:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1438,
														"nodeType": "IfStatement",
														"src": "12338:103:8",
														"trueBody": {
															"id": 1437,
															"nodeType": "Block",
															"src": "12361:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1427,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "12379:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1432,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:8"
																},
																{
																	"expression": {
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1433,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12414:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1436,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1439,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "12458:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1455,
														"nodeType": "IfStatement",
														"src": "12454:103:8",
														"trueBody": {
															"id": 1454,
															"nodeType": "Block",
															"src": "12477:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1444,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "12495:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1449,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:8"
																},
																{
																	"expression": {
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1450,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12530:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1453,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1456,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "12574:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1472,
														"nodeType": "IfStatement",
														"src": "12570:103:8",
														"trueBody": {
															"id": 1471,
															"nodeType": "Block",
															"src": "12593:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1461,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "12611:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1466,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:8"
																},
																{
																	"expression": {
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1467,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12646:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1470,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1473,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "12690:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1489,
														"nodeType": "IfStatement",
														"src": "12686:100:8",
														"trueBody": {
															"id": 1488,
															"nodeType": "Block",
															"src": "12708:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1478,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "12726:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1483,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:8"
																},
																{
																	"expression": {
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1484,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12760:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1487,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1490,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "12803:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1506,
														"nodeType": "IfStatement",
														"src": "12799:100:8",
														"trueBody": {
															"id": 1505,
															"nodeType": "Block",
															"src": "12821:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1495,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "12839:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1500,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:8"
																},
																{
																	"expression": {
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1501,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12873:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1504,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1507,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "12916:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1523,
														"nodeType": "IfStatement",
														"src": "12912:100:8",
														"trueBody": {
															"id": 1522,
															"nodeType": "Block",
															"src": "12934:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1512,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "12952:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1517,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:8"
																},
																{
																	"expression": {
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1518,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12986:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1521,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1524,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "13029:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1534,
														"nodeType": "IfStatement",
														"src": "13025:66:8",
														"trueBody": {
															"id": 1533,
															"nodeType": "Block",
															"src": "13047:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1529,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "13065:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1532,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1536,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1419,
													"src": "13117:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1417,
												"id": 1537,
												"nodeType": "Return",
												"src": "13110:13:8"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:8",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "12229:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:8"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "12267:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:8"
									},
									"scope": 1719,
									"src": "12214:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "13365:170:8",
										"statements": [
											{
												"id": 1572,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:8",
												"statements": [
													{
														"assignments": [
															1551
														],
														"declarations": [
															{
																"constant": false,
																"id": 1551,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1572,
																"src": "13399:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1550,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1555,
														"initialValue": {
															"arguments": [
																{
																	"id": 1553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "13422:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1552,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1539,
																	1574
																],
																"referencedDeclaration": 1539,
																"src": "13416:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1556,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "13449:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1558,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1545,
																						"src": "13476:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$676",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$676",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1557,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1718,
																					"src": "13459:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$676_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1562,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1561,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1551,
																						"src": "13495:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1563,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1542,
																					"src": "13504:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1569,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1549,
														"id": 1571,
														"nodeType": "Return",
														"src": "13442:76:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "13299:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "13314:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$676",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1543,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 676,
														"src": "13314:8:8"
													},
													"referencedDeclaration": 676,
													"src": "13314:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$676",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:8"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "13356:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:8"
									},
									"scope": 1719,
									"src": "13284:251:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "13855:600:8",
										"statements": [
											{
												"assignments": [
													1583
												],
												"declarations": [
													{
														"constant": false,
														"id": 1583,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "13865:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1585,
												"initialValue": {
													"hexValue": "30",
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:8"
											},
											{
												"id": 1657,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1586,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "13921:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1600,
														"nodeType": "IfStatement",
														"src": "13917:98:8",
														"trueBody": {
															"id": 1599,
															"nodeType": "Block",
															"src": "13939:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1591,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1577,
																			"src": "13957:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1594,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:8"
																},
																{
																	"expression": {
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1595,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "13988:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1598,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "14032:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1615,
														"nodeType": "IfStatement",
														"src": "14028:95:8",
														"trueBody": {
															"id": 1614,
															"nodeType": "Block",
															"src": "14049:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1606,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1577,
																			"src": "14067:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1609,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:8"
																},
																{
																	"expression": {
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1610,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "14097:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1613,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1616,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "14140:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1630,
														"nodeType": "IfStatement",
														"src": "14136:95:8",
														"trueBody": {
															"id": 1629,
															"nodeType": "Block",
															"src": "14157:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1621,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1577,
																			"src": "14175:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1624,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:8"
																},
																{
																	"expression": {
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1625,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "14205:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1628,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1631,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "14248:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1645,
														"nodeType": "IfStatement",
														"src": "14244:95:8",
														"trueBody": {
															"id": 1644,
															"nodeType": "Block",
															"src": "14265:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1636,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1577,
																			"src": "14283:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1639,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:8"
																},
																{
																	"expression": {
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1640,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "14313:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1643,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1646,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "14356:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1656,
														"nodeType": "IfStatement",
														"src": "14352:64:8",
														"trueBody": {
															"id": 1655,
															"nodeType": "Block",
															"src": "14372:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1651,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "14390:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1654,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1658,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1583,
													"src": "14442:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1659,
												"nodeType": "Return",
												"src": "14435:13:8"
											}
										]
									},
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:8",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "13808:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:8"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "13846:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:8"
									},
									"scope": 1719,
									"src": "13792:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "14692:177:8",
										"statements": [
											{
												"id": 1697,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:8",
												"statements": [
													{
														"assignments": [
															1673
														],
														"declarations": [
															{
																"constant": false,
																"id": 1673,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1697,
																"src": "14726:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1672,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1677,
														"initialValue": {
															"arguments": [
																{
																	"id": 1675,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "14750:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1674,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1661,
																	1699
																],
																"referencedDeclaration": 1661,
																"src": "14743:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1678,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "14777:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1680,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1667,
																						"src": "14804:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$676",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$676",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1679,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1718,
																					"src": "14787:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$676_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1687,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1682,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1685,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1683,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1673,
																									"src": "14823:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1684,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1686,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1688,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1664,
																					"src": "14838:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1694,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1671,
														"id": 1696,
														"nodeType": "Return",
														"src": "14770:82:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "14626:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "14641:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$676",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1665,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 676,
														"src": "14641:8:8"
													},
													"referencedDeclaration": 676,
													"src": "14641:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$676",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:8"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "14683:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:8"
									},
									"scope": 1719,
									"src": "14610:259:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "15067:48:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1710,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "15090:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$676",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$676",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1708,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1707,
												"id": 1716,
												"nodeType": "Return",
												"src": "15077:31:8"
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:8",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "15019:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$676",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1701,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 676,
														"src": "15019:8:8"
													},
													"referencedDeclaration": 676,
													"src": "15019:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$676",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:8"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "15061:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:8"
									},
									"scope": 1719,
									"src": "14993:122:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1720,
							"src": "203:14914:8",
							"usedErrors": [
								671
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:8"
				},
				"id": 8
			},
			"weusd/IMainContract.sol": {
				"ast": {
					"absolutePath": "weusd/IMainContract.sol",
					"exportedSymbols": {
						"IMainContract": [
							1731
						]
					},
					"id": 1732,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1721,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMainContract",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1731,
							"linearizedBaseContracts": [
								1731
							],
							"name": "IMainContract",
							"nameLocation": "78:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5e556234",
									"id": 1730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferStableCoin",
									"nameLocation": "108:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "135:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "127:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "150:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "142:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "162:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "154:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:43:9"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:0:9"
									},
									"scope": 1731,
									"src": "99:80:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1732,
							"src": "68:114:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:149:9"
				},
				"id": 9
			},
			"weusd/IPicweUSD.sol": {
				"ast": {
					"absolutePath": "weusd/IPicweUSD.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						],
						"IPicweUSD": [
							1751
						]
					},
					"id": 1752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1733,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1734,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1752,
							"sourceUnit": 457,
							"src": "68:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1735,
										"name": "IERC20",
										"nameLocations": [
											"151:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 456,
										"src": "151:6:10"
									},
									"id": 1736,
									"nodeType": "InheritanceSpecifier",
									"src": "151:6:10"
								}
							],
							"canonicalName": "IPicweUSD",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1751,
							"linearizedBaseContracts": [
								1751,
								456
							],
							"name": "IPicweUSD",
							"nameLocation": "138:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "174:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "187:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "179:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "199:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "191:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "178:28:10"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:0:10"
									},
									"scope": 1751,
									"src": "165:51:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "231:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "248:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "240:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "265:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "257:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "239:33:10"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:0:10"
									},
									"scope": 1751,
									"src": "222:60:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1752,
							"src": "128:157:10",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "33:252:10"
				},
				"id": 10
			},
			"weusd/manageusd.sol": {
				"ast": {
					"absolutePath": "weusd/manageusd.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							512
						],
						"ERC165": [
							653
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						],
						"IERC20Metadata": [
							482
						],
						"IMainContract": [
							1731
						],
						"IPicweUSD": [
							1751
						],
						"Math": [
							1719
						],
						"Pausable": [
							629
						],
						"RequestData": [
							1769
						],
						"weUSD_manager": [
							2950
						]
					},
					"id": 2951,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1753,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1754,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2951,
							"sourceUnit": 457,
							"src": "61:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 1755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2951,
							"sourceUnit": 483,
							"src": "119:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2951,
							"sourceUnit": 296,
							"src": "196:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 1757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2951,
							"sourceUnit": 630,
							"src": "256:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 1758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2951,
							"sourceUnit": 1720,
							"src": "310:53:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "weusd/IPicweUSD.sol",
							"file": "./IPicweUSD.sol",
							"id": 1759,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2951,
							"sourceUnit": 1752,
							"src": "365:25:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "weusd/IMainContract.sol",
							"file": "./IMainContract.sol",
							"id": 1760,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2951,
							"sourceUnit": 1732,
							"src": "392:29:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "RequestData",
							"id": 1769,
							"members": [
								{
									"constant": false,
									"id": 1762,
									"mutability": "mutable",
									"name": "requestId",
									"nameLocation": "459:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 1769,
									"src": "451:17:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1761,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1764,
									"mutability": "mutable",
									"name": "user",
									"nameLocation": "483:4:11",
									"nodeType": "VariableDeclaration",
									"scope": 1769,
									"src": "475:12:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1763,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "475:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1766,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "502:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 1769,
									"src": "494:14:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1765,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "494:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1768,
									"mutability": "mutable",
									"name": "isburn",
									"nameLocation": "520:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 1769,
									"src": "515:11:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1767,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "515:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RequestData",
							"nameLocation": "432:11:11",
							"nodeType": "StructDefinition",
							"scope": 2951,
							"src": "425:105:11",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1770,
										"name": "AccessControl",
										"nameLocations": [
											"560:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "560:13:11"
									},
									"id": 1771,
									"nodeType": "InheritanceSpecifier",
									"src": "560:13:11"
								},
								{
									"baseName": {
										"id": 1772,
										"name": "Pausable",
										"nameLocations": [
											"575:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 629,
										"src": "575:8:11"
									},
									"id": 1773,
									"nodeType": "InheritanceSpecifier",
									"src": "575:8:11"
								}
							],
							"canonicalName": "weUSD_manager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2950,
							"linearizedBaseContracts": [
								2950,
								629,
								295,
								653,
								665,
								378,
								512
							],
							"name": "weUSD_manager",
							"nameLocation": "543:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d270e7ab",
									"id": 1776,
									"mutability": "mutable",
									"name": "mainContract",
									"nameLocation": "611:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "590:33:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMainContract_$1731",
										"typeString": "contract IMainContract"
									},
									"typeName": {
										"id": 1775,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1774,
											"name": "IMainContract",
											"nameLocations": [
												"590:13:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1731,
											"src": "590:13:11"
										},
										"referencedDeclaration": 1731,
										"src": "590:13:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMainContract_$1731",
											"typeString": "contract IMainContract"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 1781,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "654:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "630:60:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1777,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "630:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1779,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "677:12:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1778,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "667:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1780,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "667:23:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1786,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "721:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "697:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1782,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1784,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "745:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1783,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "735:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1785,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "735:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "37174202",
									"id": 1791,
									"mutability": "constant",
									"name": "CROSS_CHAIN_MINTER_ROLE",
									"nameLocation": "790:23:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "766:86:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1787,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "766:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "43524f53535f434841494e5f4d494e5445525f524f4c45",
												"id": 1789,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "826:25:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704",
													"typeString": "literal_string \"CROSS_CHAIN_MINTER_ROLE\""
												},
												"value": "CROSS_CHAIN_MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_41de7ae3becaf069074d499ebcbd36df88385ba1e2946870f7e4674aecd43704",
													"typeString": "literal_string \"CROSS_CHAIN_MINTER_ROLE\""
												}
											],
											"id": 1788,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "816:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1790,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "816:36:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a62e1b3e",
									"id": 1794,
									"mutability": "mutable",
									"name": "weUSD",
									"nameLocation": "876:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "859:22:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPicweUSD_$1751",
										"typeString": "contract IPicweUSD"
									},
									"typeName": {
										"id": 1793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1792,
											"name": "IPicweUSD",
											"nameLocations": [
												"859:9:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1751,
											"src": "859:9:11"
										},
										"referencedDeclaration": 1751,
										"src": "859:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPicweUSD_$1751",
											"typeString": "contract IPicweUSD"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5badbe4c",
									"id": 1796,
									"mutability": "mutable",
									"name": "requestCount",
									"nameLocation": "903:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "888:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1795,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "888:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "eda87eff",
									"id": 1799,
									"mutability": "constant",
									"name": "WEUSD_DECIMALS",
									"nameLocation": "944:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "922:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1797,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "922:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 1798,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "961:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "00677016",
									"id": 1809,
									"mutability": "mutable",
									"name": "gasfee",
									"nameLocation": "984:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "969:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "969:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000_by_1",
											"typeString": "int_const 500000"
										},
										"id": 1808,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35",
											"id": 1801,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "993:1:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5_by_1",
												"typeString": "int_const 5"
											},
											"value": "5"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_100000_by_1",
												"typeString": "int_const 100000"
											},
											"id": 1807,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1802,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "995:2:11",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "36",
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1000:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1002:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1000:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														}
													}
												],
												"id": 1806,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "999:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												}
											},
											"src": "995:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000_by_1",
												"typeString": "int_const 100000"
											}
										},
										"src": "993:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000_by_1",
											"typeString": "int_const 500000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "46904840",
									"id": 1811,
									"mutability": "mutable",
									"name": "feeRecipient",
									"nameLocation": "1026:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "1011:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1810,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1011:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "854935f1",
									"id": 1814,
									"mutability": "mutable",
									"name": "activeSourceRequests",
									"nameLocation": "1064:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "1047:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1812,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1813,
										"nodeType": "ArrayTypeName",
										"src": "1047:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "34d8c7d5",
									"id": 1817,
									"mutability": "mutable",
									"name": "activeTargetRequests",
									"nameLocation": "1108:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "1091:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1815,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1091:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1816,
										"nodeType": "ArrayTypeName",
										"src": "1091:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ea4f3a4",
									"id": 1821,
									"mutability": "mutable",
									"name": "registeredStablecoins",
									"nameLocation": "1169:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "1137:53:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1820,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1818,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1145:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1137:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1819,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1156:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f92893c",
									"id": 1825,
									"mutability": "mutable",
									"name": "usedRequestIds",
									"nameLocation": "1229:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "1197:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 1824,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1822,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1205:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1197:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1823,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1216:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1830,
									"mutability": "mutable",
									"name": "requests",
									"nameLocation": "1290:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "1250:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1769_storage_$",
										"typeString": "mapping(uint256 => struct RequestData)"
									},
									"typeName": {
										"id": 1829,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1826,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1258:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1250:31:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1769_storage_$",
											"typeString": "mapping(uint256 => struct RequestData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1828,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1827,
												"name": "RequestData",
												"nameLocations": [
													"1269:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1769,
												"src": "1269:11:11"
											},
											"referencedDeclaration": 1769,
											"src": "1269:11:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RequestData_$1769_storage_ptr",
												"typeString": "struct RequestData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c99773ce",
									"id": 1834,
									"mutability": "mutable",
									"name": "requestIdToSourceActiveIndex",
									"nameLocation": "1342:28:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "1307:63:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1833,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1831,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1315:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1307:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1832,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1326:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bead8d26",
									"id": 1838,
									"mutability": "mutable",
									"name": "requestIdToTargetActiveIndex",
									"nameLocation": "1412:28:11",
									"nodeType": "VariableDeclaration",
									"scope": 2950,
									"src": "1377:63:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1837,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1835,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1385:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1377:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1836,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1396:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d8b2dc62b787ec8afbc8a664cf2fd7c1e7851721acc9e0069132cece3c529c2e",
									"id": 1842,
									"name": "StablecoinRegistered",
									"nameLocation": "1455:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"indexed": true,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "1492:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "1476:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1475:28:11"
									},
									"src": "1449:55:11"
								},
								{
									"anonymous": false,
									"eventSelector": "0fa63555fe68cad70e08233633567493a3c74afdc8c7fb9f0c03a8e74f1a137a",
									"id": 1846,
									"name": "StablecoinDeleted",
									"nameLocation": "1516:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"indexed": true,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "1550:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1534:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:28:11"
									},
									"src": "1510:52:11"
								},
								{
									"anonymous": false,
									"eventSelector": "66c62f0863782653c5c44e10bf21d9def60984ce20d9f75549575a8910896587",
									"id": 1856,
									"name": "MintedWeUSD",
									"nameLocation": "1574:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1602:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "1586:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"indexed": true,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "1624:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "1608:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"indexed": false,
												"mutability": "mutable",
												"name": "stablecoinAmount",
												"nameLocation": "1644:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "1636:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1636:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"indexed": false,
												"mutability": "mutable",
												"name": "weUSDAmount",
												"nameLocation": "1670:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "1662:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:97:11"
									},
									"src": "1568:115:11"
								},
								{
									"anonymous": false,
									"eventSelector": "3d9842cbdfa603ab9534d6e362bf28b3061318f57fed5e7087dfc956a9d74442",
									"id": 1866,
									"name": "BurnedWeUSD",
									"nameLocation": "1695:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1723:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1707:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"indexed": true,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "1745:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1729:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"indexed": false,
												"mutability": "mutable",
												"name": "weUSDAmount",
												"nameLocation": "1765:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1757:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"indexed": false,
												"mutability": "mutable",
												"name": "stablecoinAmount",
												"nameLocation": "1786:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1778:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:97:11"
									},
									"src": "1689:115:11"
								},
								{
									"anonymous": false,
									"eventSelector": "26c32cc5ff12981b55681844f2fb47d52c5e521c58d5288b1325f3304a7e8852",
									"id": 1880,
									"name": "CrossChainBurn",
									"nameLocation": "1816:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1847:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1831:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1874:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1858:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"indexed": false,
												"mutability": "mutable",
												"name": "sourceChainId",
												"nameLocation": "1888:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1880:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetChainId",
												"nameLocation": "1911:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1903:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1934:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1926:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetUser",
												"nameLocation": "1950:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1942:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1830:131:11"
									},
									"src": "1810:152:11"
								},
								{
									"anonymous": false,
									"eventSelector": "7690d9cedf96f067bda7114c24bba31be184ae045d199979a0a373862e70d46b",
									"id": 1894,
									"name": "CrossChainMint",
									"nameLocation": "1974:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2005:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "1989:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "2032:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "2016:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2016:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"indexed": false,
												"mutability": "mutable",
												"name": "sourceChainId",
												"nameLocation": "2048:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "2040:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetChainId",
												"nameLocation": "2071:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "2063:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2094:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "2086:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetUser",
												"nameLocation": "2110:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "2102:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:133:11"
									},
									"src": "1968:154:11"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "2244:397:11",
										"statements": [
											{
												"expression": {
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1907,
														"name": "weUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "2255:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPicweUSD_$1751",
															"typeString": "contract IPicweUSD"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1909,
																"name": "_weUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "2273:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1908,
															"name": "IPicweUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "2263:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPicweUSD_$1751_$",
																"typeString": "type(contract IPicweUSD)"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2263:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPicweUSD_$1751",
															"typeString": "contract IPicweUSD"
														}
													},
													"src": "2255:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPicweUSD_$1751",
														"typeString": "contract IPicweUSD"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "2255:25:11"
											},
											{
												"expression": {
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1913,
														"name": "mainContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "2291:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMainContract_$1731",
															"typeString": "contract IMainContract"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1915,
																"name": "_main",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "2320:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1914,
															"name": "IMainContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "2306:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IMainContract_$1731_$",
																"typeString": "type(contract IMainContract)"
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2306:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMainContract_$1731",
															"typeString": "contract IMainContract"
														}
													},
													"src": "2291:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMainContract_$1731",
														"typeString": "contract IMainContract"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "2291:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1920,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2348:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1921,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2368:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2372:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2368:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1919,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2337:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2337:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "2337:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1926,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "2401:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1927,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2413:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2417:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2413:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1925,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2390:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2390:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "2390:34:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1932,
															"name": "CROSS_CHAIN_MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "2446:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1933,
															"name": "_crossChainMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "2471:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1931,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2435:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2435:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "2435:54:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1937,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "2511:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1938,
															"name": "_crossChainMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "2524:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1936,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2500:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "2500:42:11"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1941,
															"name": "registeredStablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "2553:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1943,
														"indexExpression": {
															"id": 1942,
															"name": "_stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "2575:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2553:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2590:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2553:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "2553:41:11"
											},
											{
												"expression": {
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1947,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "2605:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1948,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "2620:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2605:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "2605:28:11"
											}
										]
									},
									"id": 1952,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "_weUSD",
												"nameLocation": "2150:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "2142:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "_stablecoin",
												"nameLocation": "2166:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "2158:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "_crossChainMinter",
												"nameLocation": "2187:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "2179:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "_main",
												"nameLocation": "2214:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "2206:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "2229:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "2221:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2141:102:11"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:0:11"
									},
									"scope": 2950,
									"src": "2130:511:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "2695:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1958,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "2706:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2706:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1960,
												"nodeType": "ExpressionStatement",
												"src": "2706:8:11"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1955,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1786,
													"src": "2682:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1956,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1954,
												"name": "onlyRole",
												"nameLocations": [
													"2673:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2673:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2673:21:11"
										}
									],
									"name": "pause",
									"nameLocation": "2658:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2663:2:11"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2695:0:11"
									},
									"scope": 2950,
									"src": "2649:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "2778:29:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1968,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2789:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2789:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "2789:10:11"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1965,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1786,
													"src": "2765:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1966,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1964,
												"name": "onlyRole",
												"nameLocations": [
													"2756:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2756:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2756:21:11"
										}
									],
									"name": "unpause",
									"nameLocation": "2739:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2746:2:11"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2778:0:11"
									},
									"scope": 2950,
									"src": "2730:77:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1985,
										"nodeType": "Block",
										"src": "3152:35:11",
										"statements": [
											{
												"expression": {
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1981,
														"name": "gasfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "3163:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1982,
														"name": "_gasfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "3172:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3163:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1984,
												"nodeType": "ExpressionStatement",
												"src": "3163:16:11"
											}
										]
									},
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "2815:265:11",
										"text": " @dev Sets the gas fee (gasfee).\n @param _gasfee The new gas fee amount.\n \n @notice This function can only be called by users with the ADMIN_ROLE.\n @notice A GasFeeSet event will be triggered after successful setting."
									},
									"functionSelector": "c5494ffb",
									"id": 1986,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1978,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1781,
													"src": "3140:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1979,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1977,
												"name": "onlyRole",
												"nameLocations": [
													"3131:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3131:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3131:20:11"
										}
									],
									"name": "setGasfee",
									"nameLocation": "3095:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "_gasfee",
												"nameLocation": "3113:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "3105:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3104:17:11"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3152:0:11"
									},
									"scope": 2950,
									"src": "3086:101:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "3575:47:11",
										"statements": [
											{
												"expression": {
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1995,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "3586:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1996,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "3601:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3586:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1998,
												"nodeType": "ExpressionStatement",
												"src": "3586:28:11"
											}
										]
									},
									"documentation": {
										"id": 1987,
										"nodeType": "StructuredDocumentation",
										"src": "3195:296:11",
										"text": " @dev Sets the fee recipient (feeRecipient).\n @param _feeRecipient The new fee recipient address.\n \n @notice This function can only be called by users with the ADMIN_ROLE.\n @notice A FeeRecipientSet event will be triggered after successful setting."
									},
									"functionSelector": "e74b981b",
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1992,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1781,
													"src": "3563:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1993,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1991,
												"name": "onlyRole",
												"nameLocations": [
													"3554:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3554:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3554:20:11"
										}
									],
									"name": "setFeeRecipient",
									"nameLocation": "3506:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "3530:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "3522:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3521:23:11"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3575:0:11"
									},
									"scope": 2950,
									"src": "3497:125:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "4032:107:11",
										"statements": [
											{
												"expression": {
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2009,
															"name": "registeredStablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "4043:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2011,
														"indexExpression": {
															"id": 2010,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "4065:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4043:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4079:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4043:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2014,
												"nodeType": "ExpressionStatement",
												"src": "4043:40:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2016,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "4120:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2015,
														"name": "StablecoinRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1842,
														"src": "4099:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4099:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2018,
												"nodeType": "EmitStatement",
												"src": "4094:37:11"
											}
										]
									},
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "3630:318:11",
										"text": " @dev Registers a stablecoin (stablecoin).\n @param stablecoin The address of the stablecoin to be registered.\n \n @notice This function can only be called by users with the ADMIN_ROLE.\n @notice A StablecoinRegistered event will be triggered after successful registration."
									},
									"functionSelector": "c6400657",
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2006,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1781,
													"src": "4020:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2005,
												"name": "onlyRole",
												"nameLocations": [
													"4011:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4011:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4011:20:11"
										}
									],
									"name": "registerStablecoin",
									"nameLocation": "3963:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "3990:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "3982:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:20:11"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4032:0:11"
									},
									"scope": 2950,
									"src": "3954:185:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "4535:105:11",
										"statements": [
											{
												"expression": {
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2029,
															"name": "registeredStablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "4546:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2031,
														"indexExpression": {
															"id": 2030,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "4568:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4546:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2032,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4582:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4546:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "4546:41:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2036,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "4621:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2035,
														"name": "StablecoinDeleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "4603:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4603:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2038,
												"nodeType": "EmitStatement",
												"src": "4598:34:11"
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "4147:306:11",
										"text": " @dev Deletes a stablecoin (stablecoin).\n @param stablecoin The address of the stablecoin to be deleted.\n \n @notice This function can only be called by users with the ADMIN_ROLE.\n @notice A StablecoinDeleted event will be triggered after successful deletion."
									},
									"functionSelector": "1008776f",
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2026,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1781,
													"src": "4523:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2027,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2025,
												"name": "onlyRole",
												"nameLocations": [
													"4514:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4514:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4514:20:11"
										}
									],
									"name": "deleteStablecoin",
									"nameLocation": "4468:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "4493:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "4485:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4485:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:20:11"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4535:0:11"
									},
									"scope": 2950,
									"src": "4459:181:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "5237:562:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2049,
																"name": "registeredStablecoins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "5256:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2051,
															"indexExpression": {
																"id": 2050,
																"name": "stablecoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "5278:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5256:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c65636f696e206e6f742072656769737465726564",
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5291:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c",
																"typeString": "literal_string \"Stablecoin not registered\""
															},
															"value": "Stablecoin not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c",
																"typeString": "literal_string \"Stablecoin not registered\""
															}
														],
														"id": 2048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5248:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5248:71:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "ExpressionStatement",
												"src": "5248:71:11"
											},
											{
												"assignments": [
													2056
												],
												"declarations": [
													{
														"constant": false,
														"id": 2056,
														"mutability": "mutable",
														"name": "stablecoinDecimals",
														"nameLocation": "5336:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 2103,
														"src": "5330:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2055,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "5330:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2062,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2058,
																	"name": "stablecoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2043,
																	"src": "5372:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2057,
																"name": "IERC20Metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "5357:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$482_$",
																	"typeString": "type(contract IERC20Metadata)"
																}
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5357:26:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$482",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5384:8:11",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 481,
														"src": "5357:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5357:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5330:64:11"
											},
											{
												"assignments": [
													2064
												],
												"declarations": [
													{
														"constant": false,
														"id": 2064,
														"mutability": "mutable",
														"name": "weUSDAmount",
														"nameLocation": "5413:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2103,
														"src": "5405:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5405:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2070,
												"initialValue": {
													"arguments": [
														{
															"id": 2066,
															"name": "stablecoinAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "5443:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2067,
															"name": "stablecoinDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "5461:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2068,
															"name": "WEUSD_DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "5481:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2065,
														"name": "convertDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2884,
														"src": "5427:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint8,uint8) pure returns (uint256)"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5427:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5405:91:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2076,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5580:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5584:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5580:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2080,
																			"name": "mainContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1776,
																			"src": "5600:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IMainContract_$1731",
																				"typeString": "contract IMainContract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IMainContract_$1731",
																				"typeString": "contract IMainContract"
																			}
																		],
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5592:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2078,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5592:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5592:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2082,
																	"name": "stablecoinAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "5615:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2073,
																			"name": "stablecoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2043,
																			"src": "5555:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2072,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "5548:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5548:18:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$456",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5567:12:11",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 455,
																"src": "5548:31:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5548:84:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c65636f696e207472616e73666572206661696c6564",
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5634:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7",
																"typeString": "literal_string \"Stablecoin transfer failed\""
															},
															"value": "Stablecoin transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7",
																"typeString": "literal_string \"Stablecoin transfer failed\""
															}
														],
														"id": 2071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5540:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5540:123:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "5540:123:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2090,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5685:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5689:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5685:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2092,
															"name": "weUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "5697:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2087,
															"name": "weUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "5674:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPicweUSD_$1751",
																"typeString": "contract IPicweUSD"
															}
														},
														"id": 2089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5680:4:11",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1743,
														"src": "5674:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5674:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2094,
												"nodeType": "ExpressionStatement",
												"src": "5674:35:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2096,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5737:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5741:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5737:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2098,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "5749:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2099,
															"name": "stablecoinAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "5761:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2100,
															"name": "weUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "5779:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2095,
														"name": "MintedWeUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "5725:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5725:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2102,
												"nodeType": "EmitStatement",
												"src": "5720:71:11"
											}
										]
									},
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "4650:507:11",
										"text": " @dev Mints weUSD tokens in exchange for stablecoins.\n @param stablecoin The address of the stablecoin to be exchanged.\n @param stablecoinAmount The amount of stablecoin to be exchanged.\n @notice This function can be called by any user.\n @notice The stablecoin must be registered.\n @notice The stablecoin amount is converted to weUSD based on the decimal difference.\n @notice A MintedWeUSD event will be emitted after successful minting."
									},
									"functionSelector": "a2519ae4",
									"id": 2104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintWeUSD",
									"nameLocation": "5172:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "5190:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "5182:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5182:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "stablecoinAmount",
												"nameLocation": "5210:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "5202:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5202:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5181:46:11"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5237:0:11"
									},
									"scope": 2950,
									"src": "5163:636:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2160,
										"nodeType": "Block",
										"src": "6383:522:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2113,
																"name": "registeredStablecoins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "6402:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2115,
															"indexExpression": {
																"id": 2114,
																"name": "stablecoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2107,
																"src": "6424:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6402:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c65636f696e206e6f742072656769737465726564",
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6437:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c",
																"typeString": "literal_string \"Stablecoin not registered\""
															},
															"value": "Stablecoin not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67162e95d9fd109882d45ffcd3a3fc51d13967e499c5b684ed26cc63c9c3771c",
																"typeString": "literal_string \"Stablecoin not registered\""
															}
														],
														"id": 2112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6394:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6394:71:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "6394:71:11"
											},
											{
												"assignments": [
													2120
												],
												"declarations": [
													{
														"constant": false,
														"id": 2120,
														"mutability": "mutable",
														"name": "stablecoinDecimals",
														"nameLocation": "6482:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 2160,
														"src": "6476:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2119,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "6476:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2126,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2122,
																	"name": "stablecoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "6518:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2121,
																"name": "IERC20Metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "6503:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$482_$",
																	"typeString": "type(contract IERC20Metadata)"
																}
															},
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6503:26:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$482",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6530:8:11",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 481,
														"src": "6503:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6503:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6476:64:11"
											},
											{
												"assignments": [
													2128
												],
												"declarations": [
													{
														"constant": false,
														"id": 2128,
														"mutability": "mutable",
														"name": "stablecoinAmount",
														"nameLocation": "6559:16:11",
														"nodeType": "VariableDeclaration",
														"scope": 2160,
														"src": "6551:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6551:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2134,
												"initialValue": {
													"arguments": [
														{
															"id": 2130,
															"name": "weUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "6598:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2131,
															"name": "WEUSD_DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "6611:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2132,
															"name": "stablecoinDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "6627:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2129,
														"name": "convertDecimalsCeil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2949,
														"src": "6578:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint8,uint8) pure returns (uint256)"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6578:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6551:95:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2138,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "6724:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6736:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6740:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6736:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2141,
															"name": "stablecoinAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "6748:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2135,
															"name": "mainContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "6692:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMainContract_$1731",
																"typeString": "contract IMainContract"
															}
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6705:18:11",
														"memberName": "transferStableCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1730,
														"src": "6692:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6692:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "6692:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6791:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6795:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6791:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2149,
															"name": "weUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "6803:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2144,
															"name": "weUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "6776:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPicweUSD_$1751",
																"typeString": "contract IPicweUSD"
															}
														},
														"id": 2146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6782:8:11",
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1750,
														"src": "6776:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6776:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2151,
												"nodeType": "ExpressionStatement",
												"src": "6776:39:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2153,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6843:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6847:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6843:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2155,
															"name": "stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "6855:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2156,
															"name": "weUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "6867:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2157,
															"name": "stablecoinAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "6880:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2152,
														"name": "BurnedWeUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "6831:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6831:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2159,
												"nodeType": "EmitStatement",
												"src": "6826:71:11"
											}
										]
									},
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "5807:501:11",
										"text": " @dev Burns weUSD tokens and returns stablecoins to the user.\n @param stablecoin The address of the stablecoin to be returned.\n @param weUSDAmount The amount of weUSD to be burned.\n @notice This function can be called by any user.\n @notice The stablecoin must be registered.\n @notice The weUSD amount is converted to stablecoin based on the decimal difference.\n @notice A BurnedWeUSD event will be emitted after successful burning."
									},
									"functionSelector": "d19fad37",
									"id": 2161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnWeUSD",
									"nameLocation": "6323:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "6341:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "6333:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6333:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "weUSDAmount",
												"nameLocation": "6361:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "6353:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6353:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6332:41:11"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6383:0:11"
									},
									"scope": 2950,
									"src": "6314:591:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "7733:833:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2174,
																"name": "targetChainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2164,
																"src": "7752:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 2175,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7769:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7775:7:11",
																"memberName": "chainid",
																"nodeType": "MemberAccess",
																"src": "7769:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7752:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617267657420636861696e206d75737420626520646966666572656e742066726f6d20736f7572636520636861696e",
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7784:50:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cef094ec419a8d26f0cee0bf6ca74c12da636e63d15d6aaf6bbddcac6380238e",
																"typeString": "literal_string \"Target chain must be different from source chain\""
															},
															"value": "Target chain must be different from source chain"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cef094ec419a8d26f0cee0bf6ca74c12da636e63d15d6aaf6bbddcac6380238e",
																"typeString": "literal_string \"Target chain must be different from source chain\""
															}
														],
														"id": 2173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7744:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:91:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2180,
												"nodeType": "ExpressionStatement",
												"src": "7744:91:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2182,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "7854:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2183,
																"name": "gasfee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "7863:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7854:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e20676173666565",
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7871:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aeff32d03aaba9710cd0ccac9240922a41d8498df078f913fb5acb94e4444254",
																"typeString": "literal_string \"Amount must be greater than gasfee\""
															},
															"value": "Amount must be greater than gasfee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aeff32d03aaba9710cd0ccac9240922a41d8498df078f913fb5acb94e4444254",
																"typeString": "literal_string \"Amount must be greater than gasfee\""
															}
														],
														"id": 2181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7846:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7846:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2187,
												"nodeType": "ExpressionStatement",
												"src": "7846:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2189,
																"name": "targetUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "7927:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7949:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7941:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2190,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7941:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7941:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7927:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074617267657420757365722061646472657373",
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7953:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96",
																"typeString": "literal_string \"Invalid target user address\""
															},
															"value": "Invalid target user address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96",
																"typeString": "literal_string \"Invalid target user address\""
															}
														],
														"id": 2188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7919:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7919:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2197,
												"nodeType": "ExpressionStatement",
												"src": "7919:64:11"
											},
											{
												"assignments": [
													2199
												],
												"declarations": [
													{
														"constant": false,
														"id": 2199,
														"mutability": "mutable",
														"name": "sourceChainId",
														"nameLocation": "8002:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2273,
														"src": "7994:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7994:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2202,
												"initialValue": {
													"expression": {
														"id": 2200,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "8018:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8024:7:11",
													"memberName": "chainid",
													"nodeType": "MemberAccess",
													"src": "8018:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7994:37:11"
											},
											{
												"assignments": [
													2204
												],
												"declarations": [
													{
														"constant": false,
														"id": 2204,
														"mutability": "mutable",
														"name": "requestId",
														"nameLocation": "8050:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 2273,
														"src": "8042:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2203,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8042:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2223,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2205,
																			"name": "sourceChainId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2199,
																			"src": "8063:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313932",
																			"id": 2206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8080:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_192_by_1",
																				"typeString": "int_const 192"
																			},
																			"value": "192"
																		},
																		"src": "8063:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2208,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8062:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "|",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2209,
																			"name": "targetChainId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "8088:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 2210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8105:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8088:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2212,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8087:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8062:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2214,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "8113:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8119:9:11",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "8113:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3634",
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8132:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "8113:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2218,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8112:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8062:73:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "8138:14:11",
														"subExpression": {
															"id": 2220,
															"name": "requestCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "8140:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8062:90:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8042:110:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8171:25:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2226,
																		"name": "requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "8186:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2225,
																	"name": "requestExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "8172:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8172:24:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265717565737420494420616c726561647920657869737473",
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8198:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4cceca778d1073f173e5f394d55c5ec6532c1bca200859fbd309f36f371476c8",
																"typeString": "literal_string \"Request ID already exists\""
															},
															"value": "Request ID already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4cceca778d1073f173e5f394d55c5ec6532c1bca200859fbd309f36f371476c8",
																"typeString": "literal_string \"Request ID already exists\""
															}
														],
														"id": 2224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8163:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2231,
												"nodeType": "ExpressionStatement",
												"src": "8163:63:11"
											},
											{
												"assignments": [
													2233
												],
												"declarations": [
													{
														"constant": false,
														"id": 2233,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "8245:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2273,
														"src": "8237:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8237:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2237,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2234,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2166,
														"src": "8258:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2235,
														"name": "gasfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "8267:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8258:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8237:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2241,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8303:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8307:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8303:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2243,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "8315:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2244,
															"name": "gasfee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "8329:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2238,
															"name": "weUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "8284:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPicweUSD_$1751",
																"typeString": "contract IPicweUSD"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8290:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 455,
														"src": "8284:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8284:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "8284:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2250,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8362:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8366:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8362:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2252,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "8374:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2247,
															"name": "weUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "8347:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPicweUSD_$1751",
																"typeString": "contract IPicweUSD"
															}
														},
														"id": 2249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8353:8:11",
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1750,
														"src": "8347:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8347:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "8347:38:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2256,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "8411:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2257,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8422:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8426:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8422:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2259,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "8434:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8446:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2255,
														"name": "_createRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "8396:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,uint256,bool)"
														}
													},
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8396:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "8396:55:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2264,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "8482:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8493:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8497:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8493:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2267,
															"name": "sourceChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "8505:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2268,
															"name": "targetChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "8520:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2269,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "8535:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2270,
															"name": "targetUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "8547:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2263,
														"name": "CrossChainBurn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "8467:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,uint256,address)"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8467:91:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2272,
												"nodeType": "EmitStatement",
												"src": "8462:96:11"
											}
										]
									},
									"documentation": {
										"id": 2162,
										"nodeType": "StructuredDocumentation",
										"src": "6913:703:11",
										"text": " @dev Burns weUSD tokens on the source chain for cross-chain transfer.\n @param targetChainId The ID of the target chain where weUSD will be minted.\n @param amount The total amount of weUSD to be burned (including gas fee).\n @param targetUser The address of the user on the target chain to receive the minted weUSD.\n @notice This function can be called by any user when the contract is not paused.\n @notice A portion of the amount is deducted as gas fee and transferred to the fee recipient.\n @notice The remaining amount is burned from the sender's balance.\n @notice A CrossChainBurn event is emitted after successful burning."
									},
									"functionSelector": "0bd31a57",
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2170,
												"name": "whenNotPaused",
												"nameLocations": [
													"7719:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 554,
												"src": "7719:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7719:13:11"
										}
									],
									"name": "burnWeUSDCrossChain",
									"nameLocation": "7631:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "targetChainId",
												"nameLocation": "7659:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "7651:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7651:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7682:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "7674:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7674:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "targetUser",
												"nameLocation": "7698:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "7690:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7690:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7650:59:11"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7733:0:11"
									},
									"scope": 2950,
									"src": "7622:944:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "9577:529:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2292,
																"name": "sourceChainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2279,
																"src": "9596:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 2293,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9613:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9619:7:11",
																"memberName": "chainid",
																"nodeType": "MemberAccess",
																"src": "9613:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9596:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f7572636520636861696e206d75737420626520646966666572656e742066726f6d2074617267657420636861696e",
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9628:50:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6796245fd06a0237ef78dc4b92ce228b2aeb991d0e4ff61774e8fc1ef736486c",
																"typeString": "literal_string \"Source chain must be different from target chain\""
															},
															"value": "Source chain must be different from target chain"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6796245fd06a0237ef78dc4b92ce228b2aeb991d0e4ff61774e8fc1ef736486c",
																"typeString": "literal_string \"Source chain must be different from target chain\""
															}
														],
														"id": 2291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9588:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9588:91:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2298,
												"nodeType": "ExpressionStatement",
												"src": "9588:91:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2300,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2281,
																"src": "9698:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9698:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9710:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 2299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9690:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9690:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2305,
												"nodeType": "ExpressionStatement",
												"src": "9690:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2307,
																"name": "targetUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2283,
																"src": "9761:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9783:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9775:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9775:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9761:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074617267657420757365722061646472657373",
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9787:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96",
																"typeString": "literal_string \"Invalid target user address\""
															},
															"value": "Invalid target user address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d793a511696b8b93043d324b1c354339fbf62769285ad2bd020131724d857c96",
																"typeString": "literal_string \"Invalid target user address\""
															}
														],
														"id": 2306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9753:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9753:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "9753:64:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9836:25:11",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2318,
																		"name": "requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "9851:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2317,
																	"name": "requestExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "9837:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9837:24:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265717565737420494420616c726561647920657869737473",
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9863:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4cceca778d1073f173e5f394d55c5ec6532c1bca200859fbd309f36f371476c8",
																"typeString": "literal_string \"Request ID already exists\""
															},
															"value": "Request ID already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4cceca778d1073f173e5f394d55c5ec6532c1bca200859fbd309f36f371476c8",
																"typeString": "literal_string \"Request ID already exists\""
															}
														],
														"id": 2316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9828:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9828:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2323,
												"nodeType": "ExpressionStatement",
												"src": "9828:63:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2327,
															"name": "targetUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "9913:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2328,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "9925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2324,
															"name": "weUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "9902:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPicweUSD_$1751",
																"typeString": "contract IPicweUSD"
															}
														},
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9908:4:11",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1743,
														"src": "9902:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9902:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2330,
												"nodeType": "ExpressionStatement",
												"src": "9902:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2332,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "9958:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2333,
															"name": "targetUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "9969:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2334,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "9981:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9989:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2331,
														"name": "_createRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "9943:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,uint256,bool)"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9943:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2337,
												"nodeType": "ExpressionStatement",
												"src": "9943:52:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2339,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "10026:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2340,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10037:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10041:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10037:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2342,
															"name": "sourceChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "10049:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2343,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10064:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10070:7:11",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "10064:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2345,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "10079:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2346,
															"name": "targetUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "10087:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2338,
														"name": "CrossChainMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "10011:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,uint256,address)"
														}
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10011:87:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2348,
												"nodeType": "EmitStatement",
												"src": "10006:92:11"
											}
										]
									},
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "8578:829:11",
										"text": " @dev Mints weUSD tokens on the target chain for cross-chain transfer.\n @param requestId Unique request ID to prevent duplicate processing\n @param sourceChainId ID of the source chain\n @param amount Amount of weUSD to be minted\n @param targetUser Address of the target user to receive the minted weUSD\n @notice This function can only be called by addresses with the CROSS_CHAIN_MINTER_ROLE role when the contract is not paused\n @notice The requestId must not have been used before\n @notice The source chain must be different from the current chain\n @notice The minting amount must be greater than 0\n @notice The target user address cannot be the zero address\n @notice A CrossChainMint event will be emitted after successful minting"
									},
									"functionSelector": "1f224564",
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2286,
													"name": "CROSS_CHAIN_MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1791,
													"src": "9538:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2287,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2285,
												"name": "onlyRole",
												"nameLocations": [
													"9529:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "9529:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9529:33:11"
										},
										{
											"id": 2289,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2288,
												"name": "whenNotPaused",
												"nameLocations": [
													"9563:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 554,
												"src": "9563:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9563:13:11"
										}
									],
									"name": "mintWeUSDCrossChain",
									"nameLocation": "9422:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "9450:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "9442:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9442:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "sourceChainId",
												"nameLocation": "9469:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "9461:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9461:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9492:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "9484:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9484:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "targetUser",
												"nameLocation": "9508:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "9500:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9500:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9441:78:11"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9577:0:11"
									},
									"scope": 2950,
									"src": "9413:693:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "10185:51:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2357,
														"name": "usedRequestIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "10203:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 2359,
													"indexExpression": {
														"id": 2358,
														"name": "requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2352,
														"src": "10218:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10203:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2356,
												"id": 2360,
												"nodeType": "Return",
												"src": "10196:32:11"
											}
										]
									},
									"functionSelector": "1e7502d7",
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRequestIdUsed",
									"nameLocation": "10123:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "10147:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "10139:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10139:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10138:19:11"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "10179:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10179:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10178:6:11"
									},
									"scope": 2950,
									"src": "10114:122:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "10692:46:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2371,
														"name": "requests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "10710:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1769_storage_$",
															"typeString": "mapping(uint256 => struct RequestData storage ref)"
														}
													},
													"id": 2373,
													"indexExpression": {
														"id": 2372,
														"name": "_requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "10719:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10710:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RequestData_$1769_storage",
														"typeString": "struct RequestData storage ref"
													}
												},
												"functionReturnParameters": 2370,
												"id": 2374,
												"nodeType": "Return",
												"src": "10703:27:11"
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "10244:357:11",
										"text": " @dev Retrieves the request data for a given request ID\n @param _requestId The unique identifier of the request\n @return RequestData struct containing the request details\n \n @notice This function can be called by any address\n @notice Returns a struct with default values if the request ID doesn't exist"
									},
									"functionSelector": "26757b73",
									"id": 2376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestById",
									"nameLocation": "10616:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "10639:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "10631:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10631:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10630:20:11"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "10672:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RequestData_$1769_memory_ptr",
													"typeString": "struct RequestData"
												},
												"typeName": {
													"id": 2368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2367,
														"name": "RequestData",
														"nameLocations": [
															"10672:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1769,
														"src": "10672:11:11"
													},
													"referencedDeclaration": 1769,
													"src": "10672:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RequestData_$1769_storage_ptr",
														"typeString": "struct RequestData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10671:20:11"
									},
									"scope": 2950,
									"src": "10607:131:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2391,
										"nodeType": "Block",
										"src": "11087:61:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 2384,
																"name": "requests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "11105:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1769_storage_$",
																	"typeString": "mapping(uint256 => struct RequestData storage ref)"
																}
															},
															"id": 2386,
															"indexExpression": {
																"id": 2385,
																"name": "_requestId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2379,
																"src": "11114:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11105:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RequestData_$1769_storage",
																"typeString": "struct RequestData storage ref"
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11126:9:11",
														"memberName": "requestId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1762,
														"src": "11105:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11139:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11105:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2383,
												"id": 2390,
												"nodeType": "Return",
												"src": "11098:42:11"
											}
										]
									},
									"documentation": {
										"id": 2377,
										"nodeType": "StructuredDocumentation",
										"src": "10746:265:11",
										"text": " @dev Checks if a request exists for a given request ID\n @param _requestId The unique identifier of the request\n @return bool indicating whether the request exists\n \n @notice This function can be called by any address"
									},
									"functionSelector": "ea277eca",
									"id": 2392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestExists",
									"nameLocation": "11026:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "11048:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "11040:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11040:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11039:20:11"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "11081:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2381,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11081:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11080:6:11"
									},
									"scope": 2950,
									"src": "11017:131:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "11912:1367:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2408,
																		"name": "_page",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2397,
																		"src": "11931:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11940:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11931:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2411,
																		"name": "_pageSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "11945:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11958:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11945:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11931:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2415,
																				"name": "_page",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2397,
																				"src": "11964:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11972:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "11964:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2418,
																				"name": "_pageSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2399,
																				"src": "11977:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11989:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "11977:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "11964:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2422,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11963:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11931:60:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070616765206f7220706167652073697a65",
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11993:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f4f7373ef83803408a4ec524ae5f24c5a331fd25e48c69056ab32bb378845beb",
																"typeString": "literal_string \"Invalid page or page size\""
															},
															"value": "Invalid page or page size"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f4f7373ef83803408a4ec524ae5f24c5a331fd25e48c69056ab32bb378845beb",
																"typeString": "literal_string \"Invalid page or page size\""
															}
														],
														"id": 2407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11923:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11923:98:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2426,
												"nodeType": "ExpressionStatement",
												"src": "11923:98:11"
											},
											{
												"assignments": [
													2428
												],
												"declarations": [
													{
														"constant": false,
														"id": 2428,
														"mutability": "mutable",
														"name": "totalRequests",
														"nameLocation": "12042:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "12034:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12034:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2430,
												"initialValue": {
													"hexValue": "30",
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12058:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12034:25:11"
											},
											{
												"body": {
													"id": 2455,
													"nodeType": "Block",
													"src": "12128:129:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2442,
																			"name": "requests",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "12147:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1769_storage_$",
																				"typeString": "mapping(uint256 => struct RequestData storage ref)"
																			}
																		},
																		"id": 2446,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2443,
																				"name": "activeSourceRequests",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1814,
																				"src": "12156:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 2445,
																			"indexExpression": {
																				"id": 2444,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2432,
																				"src": "12177:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12156:23:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12147:33:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RequestData_$1769_storage",
																			"typeString": "struct RequestData storage ref"
																		}
																	},
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12181:4:11",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "12147:38:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2448,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "12189:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12147:47:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2454,
															"nodeType": "IfStatement",
															"src": "12143:103:11",
															"trueBody": {
																"id": 2453,
																"nodeType": "Block",
																"src": "12196:50:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "12215:15:11",
																			"subExpression": {
																				"id": 2450,
																				"name": "totalRequests",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2428,
																				"src": "12215:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2452,
																		"nodeType": "ExpressionStatement",
																		"src": "12215:15:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2435,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "12090:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2436,
															"name": "activeSourceRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "12094:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12115:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12094:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12090:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2456,
												"initializationExpression": {
													"assignments": [
														2432
													],
													"declarations": [
														{
															"constant": false,
															"id": 2432,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12083:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2456,
															"src": "12075:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2431,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12075:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2434,
													"initialValue": {
														"hexValue": "30",
														"id": 2433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12087:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12075:13:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12123:3:11",
														"subExpression": {
															"id": 2439,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2432,
															"src": "12123:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2441,
													"nodeType": "ExpressionStatement",
													"src": "12123:3:11"
												},
												"nodeType": "ForStatement",
												"src": "12070:187:11"
											},
											{
												"assignments": [
													2458
												],
												"declarations": [
													{
														"constant": false,
														"id": 2458,
														"mutability": "mutable",
														"name": "startIndex",
														"nameLocation": "12277:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "12269:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12269:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2460,
												"initialValue": {
													"hexValue": "30",
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12290:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12269:22:11"
											},
											{
												"assignments": [
													2462
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "endIndex",
														"nameLocation": "12310:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "12302:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12302:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2464,
												"initialValue": {
													"id": 2463,
													"name": "totalRequests",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2428,
													"src": "12321:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12302:32:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2465,
															"name": "_page",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "12351:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12359:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12351:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2468,
															"name": "_pageSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "12364:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12376:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12364:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12351:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2504,
												"nodeType": "IfStatement",
												"src": "12347:285:11",
												"trueBody": {
													"id": 2503,
													"nodeType": "Block",
													"src": "12379:253:11",
													"statements": [
														{
															"expression": {
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2472,
																	"name": "startIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2458,
																	"src": "12394:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2473,
																		"name": "totalRequests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2428,
																		"src": "12407:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2474,
																					"name": "_page",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2397,
																					"src": "12424:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2475,
																					"name": "_pageSize",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "12432:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12424:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2477,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "12423:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12407:35:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12394:48:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2480,
															"nodeType": "ExpressionStatement",
															"src": "12394:48:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2481,
																	"name": "startIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2458,
																	"src": "12461:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2482,
																	"name": "totalRequests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "12474:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12461:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2488,
															"nodeType": "IfStatement",
															"src": "12457:46:11",
															"trueBody": {
																"expression": {
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2484,
																		"name": "startIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2458,
																		"src": "12489:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "30",
																		"id": 2485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12502:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12489:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2487,
																"nodeType": "ExpressionStatement",
																"src": "12489:14:11"
															}
														},
														{
															"expression": {
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2489,
																	"name": "endIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2462,
																	"src": "12518:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2490,
																		"name": "startIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2458,
																		"src": "12529:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2491,
																		"name": "_pageSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "12542:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12529:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12518:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2494,
															"nodeType": "ExpressionStatement",
															"src": "12518:33:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2495,
																	"name": "endIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2462,
																	"src": "12570:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2496,
																	"name": "totalRequests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "12581:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12570:24:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2502,
															"nodeType": "IfStatement",
															"src": "12566:54:11",
															"trueBody": {
																"expression": {
																	"id": 2500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2498,
																		"name": "endIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2462,
																		"src": "12596:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2499,
																		"name": "totalRequests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2428,
																		"src": "12607:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12596:24:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2501,
																"nodeType": "ExpressionStatement",
																"src": "12596:24:11"
															}
														}
													]
												}
											},
											{
												"assignments": [
													2509
												],
												"declarations": [
													{
														"constant": false,
														"id": 2509,
														"mutability": "mutable",
														"name": "userSourceRequests",
														"nameLocation": "12661:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "12644:35:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2507,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12644:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2508,
															"nodeType": "ArrayTypeName",
															"src": "12644:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2517,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2513,
																"name": "endIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2462,
																"src": "12696:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2514,
																"name": "startIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2458,
																"src": "12707:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12696:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "12682:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2510,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12686:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2511,
															"nodeType": "ArrayTypeName",
															"src": "12686:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12682:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12644:74:11"
											},
											{
												"assignments": [
													2519
												],
												"declarations": [
													{
														"constant": false,
														"id": 2519,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "12737:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "12729:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12729:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2521,
												"initialValue": {
													"hexValue": "30",
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12745:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12729:17:11"
											},
											{
												"body": {
													"id": 2572,
													"nodeType": "Block",
													"src": "12854:363:11",
													"statements": [
														{
															"assignments": [
																2539
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2539,
																	"mutability": "mutable",
																	"name": "requestId",
																	"nameLocation": "12877:9:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2572,
																	"src": "12869:17:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12869:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2545,
															"initialValue": {
																"baseExpression": {
																	"id": 2540,
																	"name": "activeSourceRequests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "12889:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 2544,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2541,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2523,
																		"src": "12910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12912:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "12910:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12889:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12869:45:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2546,
																			"name": "requests",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "12933:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1769_storage_$",
																				"typeString": "mapping(uint256 => struct RequestData storage ref)"
																			}
																		},
																		"id": 2548,
																		"indexExpression": {
																			"id": 2547,
																			"name": "requestId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2539,
																			"src": "12942:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12933:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RequestData_$1769_storage",
																			"typeString": "struct RequestData storage ref"
																		}
																	},
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12953:4:11",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "12933:24:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2550,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "12961:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12933:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2571,
															"nodeType": "IfStatement",
															"src": "12929:277:11",
															"trueBody": {
																"id": 2570,
																"nodeType": "Block",
																"src": "12968:238:11",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2552,
																					"name": "totalRequests",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2428,
																					"src": "12991:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2553,
																					"name": "count",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2519,
																					"src": "13007:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12991:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 2555,
																				"name": "startIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2458,
																				"src": "13015:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12991:34:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2568,
																			"nodeType": "Block",
																			"src": "13143:48:11",
																			"statements": [
																				{
																					"id": 2567,
																					"nodeType": "Break",
																					"src": "13166:5:11"
																				}
																			]
																		},
																		"id": 2569,
																		"nodeType": "IfStatement",
																		"src": "12987:204:11",
																		"trueBody": {
																			"id": 2566,
																			"nodeType": "Block",
																			"src": "13027:110:11",
																			"statements": [
																				{
																					"expression": {
																						"id": 2561,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 2557,
																								"name": "userSourceRequests",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2509,
																								"src": "13050:18:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 2559,
																							"indexExpression": {
																								"id": 2558,
																								"name": "count",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2519,
																								"src": "13069:5:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "13050:25:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 2560,
																							"name": "requestId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2539,
																							"src": "13078:9:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "13050:37:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2562,
																					"nodeType": "ExpressionStatement",
																					"src": "13050:37:11"
																				},
																				{
																					"expression": {
																						"id": 2564,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "13110:7:11",
																						"subExpression": {
																							"id": 2563,
																							"name": "count",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2519,
																							"src": "13110:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2565,
																					"nodeType": "ExpressionStatement",
																					"src": "13110:7:11"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2527,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "12805:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12809:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12805:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2530,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "12814:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 2531,
																"name": "userSourceRequests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2509,
																"src": "12822:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12841:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "12822:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12814:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12805:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2573,
												"initializationExpression": {
													"assignments": [
														2523
													],
													"declarations": [
														{
															"constant": false,
															"id": 2523,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12772:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2573,
															"src": "12764:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2522,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12764:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2526,
													"initialValue": {
														"expression": {
															"id": 2524,
															"name": "activeSourceRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "12776:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12797:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12776:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12764:39:11"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "12849:3:11",
														"subExpression": {
															"id": 2535,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "12849:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2537,
													"nodeType": "ExpressionStatement",
													"src": "12849:3:11"
												},
												"nodeType": "ForStatement",
												"src": "12759:458:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2574,
															"name": "userSourceRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2509,
															"src": "13237:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2575,
															"name": "totalRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2428,
															"src": "13257:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2576,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13236:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
														"typeString": "tuple(uint256[] memory,uint256)"
													}
												},
												"functionReturnParameters": 2406,
												"id": 2577,
												"nodeType": "Return",
												"src": "13229:42:11"
											}
										]
									},
									"documentation": {
										"id": 2393,
										"nodeType": "StructuredDocumentation",
										"src": "11160:618:11",
										"text": " @dev Get all source chain request IDs for a specific user\n @param _user User address\n @param _page Page number (starting from 1)\n @param _pageSize Number of items per page\n @return uint256[] Array containing source chain request IDs for the user's specified page\n @return uint256 Total number of source chain requests for the user\n \n @notice This function can be called by any address\n @notice If the user has no source chain requests, an empty array will be returned\n @notice If _page or _pageSize is 0, all requests will be returned"
									},
									"functionSelector": "973697bd",
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserSourceRequests",
									"nameLocation": "11793:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "11823:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "11815:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11815:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "_page",
												"nameLocation": "11838:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "11830:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "_pageSize",
												"nameLocation": "11853:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "11845:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11845:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11814:49:11"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "11885:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11885:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2402,
													"nodeType": "ArrayTypeName",
													"src": "11885:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "11903:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11903:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11884:27:11"
									},
									"scope": 2950,
									"src": "11784:1495:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2765,
										"nodeType": "Block",
										"src": "14031:1367:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2595,
																		"name": "_page",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2584,
																		"src": "14050:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14059:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "14050:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2598,
																		"name": "_pageSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "14064:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14077:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "14064:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "14050:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2602,
																				"name": "_page",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2584,
																				"src": "14083:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14091:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "14083:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2605,
																				"name": "_pageSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2586,
																				"src": "14096:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14108:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "14096:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "14083:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2609,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14082:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14050:60:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070616765206f7220706167652073697a65",
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14112:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f4f7373ef83803408a4ec524ae5f24c5a331fd25e48c69056ab32bb378845beb",
																"typeString": "literal_string \"Invalid page or page size\""
															},
															"value": "Invalid page or page size"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f4f7373ef83803408a4ec524ae5f24c5a331fd25e48c69056ab32bb378845beb",
																"typeString": "literal_string \"Invalid page or page size\""
															}
														],
														"id": 2594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14042:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14042:98:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2613,
												"nodeType": "ExpressionStatement",
												"src": "14042:98:11"
											},
											{
												"assignments": [
													2615
												],
												"declarations": [
													{
														"constant": false,
														"id": 2615,
														"mutability": "mutable",
														"name": "totalRequests",
														"nameLocation": "14161:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "14153:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14153:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2617,
												"initialValue": {
													"hexValue": "30",
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14177:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14153:25:11"
											},
											{
												"body": {
													"id": 2642,
													"nodeType": "Block",
													"src": "14247:129:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2629,
																			"name": "requests",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "14266:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1769_storage_$",
																				"typeString": "mapping(uint256 => struct RequestData storage ref)"
																			}
																		},
																		"id": 2633,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2630,
																				"name": "activeTargetRequests",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1817,
																				"src": "14275:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 2632,
																			"indexExpression": {
																				"id": 2631,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2619,
																				"src": "14296:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14275:23:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14266:33:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RequestData_$1769_storage",
																			"typeString": "struct RequestData storage ref"
																		}
																	},
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14300:4:11",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "14266:38:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2635,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "14308:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14266:47:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2641,
															"nodeType": "IfStatement",
															"src": "14262:103:11",
															"trueBody": {
																"id": 2640,
																"nodeType": "Block",
																"src": "14315:50:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "14334:15:11",
																			"subExpression": {
																				"id": 2637,
																				"name": "totalRequests",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2615,
																				"src": "14334:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2639,
																		"nodeType": "ExpressionStatement",
																		"src": "14334:15:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2622,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "14209:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2623,
															"name": "activeTargetRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "14213:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14234:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14213:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14209:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2643,
												"initializationExpression": {
													"assignments": [
														2619
													],
													"declarations": [
														{
															"constant": false,
															"id": 2619,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14202:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2643,
															"src": "14194:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2618,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14194:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2621,
													"initialValue": {
														"hexValue": "30",
														"id": 2620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14206:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14194:13:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14242:3:11",
														"subExpression": {
															"id": 2626,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "14242:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2628,
													"nodeType": "ExpressionStatement",
													"src": "14242:3:11"
												},
												"nodeType": "ForStatement",
												"src": "14189:187:11"
											},
											{
												"assignments": [
													2645
												],
												"declarations": [
													{
														"constant": false,
														"id": 2645,
														"mutability": "mutable",
														"name": "startIndex",
														"nameLocation": "14396:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "14388:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2644,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14388:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2647,
												"initialValue": {
													"hexValue": "30",
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14409:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14388:22:11"
											},
											{
												"assignments": [
													2649
												],
												"declarations": [
													{
														"constant": false,
														"id": 2649,
														"mutability": "mutable",
														"name": "endIndex",
														"nameLocation": "14429:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "14421:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2648,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14421:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2651,
												"initialValue": {
													"id": 2650,
													"name": "totalRequests",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2615,
													"src": "14440:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14421:32:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2652,
															"name": "_page",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2584,
															"src": "14470:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14478:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14470:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2655,
															"name": "_pageSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "14483:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14495:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14483:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14470:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2691,
												"nodeType": "IfStatement",
												"src": "14466:285:11",
												"trueBody": {
													"id": 2690,
													"nodeType": "Block",
													"src": "14498:253:11",
													"statements": [
														{
															"expression": {
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2659,
																	"name": "startIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2645,
																	"src": "14513:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2660,
																		"name": "totalRequests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2615,
																		"src": "14526:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2661,
																					"name": "_page",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2584,
																					"src": "14543:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2662,
																					"name": "_pageSize",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2586,
																					"src": "14551:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14543:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2664,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14542:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14526:35:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14513:48:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2667,
															"nodeType": "ExpressionStatement",
															"src": "14513:48:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2668,
																	"name": "startIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2645,
																	"src": "14580:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2669,
																	"name": "totalRequests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2615,
																	"src": "14593:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14580:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2675,
															"nodeType": "IfStatement",
															"src": "14576:46:11",
															"trueBody": {
																"expression": {
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2671,
																		"name": "startIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2645,
																		"src": "14608:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "30",
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14621:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "14608:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2674,
																"nodeType": "ExpressionStatement",
																"src": "14608:14:11"
															}
														},
														{
															"expression": {
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2676,
																	"name": "endIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2649,
																	"src": "14637:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2677,
																		"name": "startIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2645,
																		"src": "14648:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2678,
																		"name": "_pageSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "14661:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14648:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14637:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2681,
															"nodeType": "ExpressionStatement",
															"src": "14637:33:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2682,
																	"name": "endIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2649,
																	"src": "14689:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2683,
																	"name": "totalRequests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2615,
																	"src": "14700:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14689:24:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2689,
															"nodeType": "IfStatement",
															"src": "14685:54:11",
															"trueBody": {
																"expression": {
																	"id": 2687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2685,
																		"name": "endIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2649,
																		"src": "14715:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2686,
																		"name": "totalRequests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2615,
																		"src": "14726:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14715:24:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2688,
																"nodeType": "ExpressionStatement",
																"src": "14715:24:11"
															}
														}
													]
												}
											},
											{
												"assignments": [
													2696
												],
												"declarations": [
													{
														"constant": false,
														"id": 2696,
														"mutability": "mutable",
														"name": "userTargetRequests",
														"nameLocation": "14780:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "14763:35:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2694,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14763:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2695,
															"nodeType": "ArrayTypeName",
															"src": "14763:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2704,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2700,
																"name": "endIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2649,
																"src": "14815:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2701,
																"name": "startIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2645,
																"src": "14826:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14815:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14801:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2697,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14805:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2698,
															"nodeType": "ArrayTypeName",
															"src": "14805:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14801:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14763:74:11"
											},
											{
												"assignments": [
													2706
												],
												"declarations": [
													{
														"constant": false,
														"id": 2706,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "14856:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "14848:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14848:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2708,
												"initialValue": {
													"hexValue": "30",
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14864:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14848:17:11"
											},
											{
												"body": {
													"id": 2759,
													"nodeType": "Block",
													"src": "14973:363:11",
													"statements": [
														{
															"assignments": [
																2726
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2726,
																	"mutability": "mutable",
																	"name": "requestId",
																	"nameLocation": "14996:9:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2759,
																	"src": "14988:17:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2725,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14988:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2732,
															"initialValue": {
																"baseExpression": {
																	"id": 2727,
																	"name": "activeTargetRequests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "15008:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 2731,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2728,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2710,
																		"src": "15029:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15031:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "15029:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15008:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14988:45:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2733,
																			"name": "requests",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "15052:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1769_storage_$",
																				"typeString": "mapping(uint256 => struct RequestData storage ref)"
																			}
																		},
																		"id": 2735,
																		"indexExpression": {
																			"id": 2734,
																			"name": "requestId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2726,
																			"src": "15061:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15052:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RequestData_$1769_storage",
																			"typeString": "struct RequestData storage ref"
																		}
																	},
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15072:4:11",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "15052:24:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2737,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "15080:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15052:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2758,
															"nodeType": "IfStatement",
															"src": "15048:277:11",
															"trueBody": {
																"id": 2757,
																"nodeType": "Block",
																"src": "15087:238:11",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2739,
																					"name": "totalRequests",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2615,
																					"src": "15110:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2740,
																					"name": "count",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2706,
																					"src": "15126:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15110:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 2742,
																				"name": "startIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2645,
																				"src": "15134:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15110:34:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2755,
																			"nodeType": "Block",
																			"src": "15262:48:11",
																			"statements": [
																				{
																					"id": 2754,
																					"nodeType": "Break",
																					"src": "15285:5:11"
																				}
																			]
																		},
																		"id": 2756,
																		"nodeType": "IfStatement",
																		"src": "15106:204:11",
																		"trueBody": {
																			"id": 2753,
																			"nodeType": "Block",
																			"src": "15146:110:11",
																			"statements": [
																				{
																					"expression": {
																						"id": 2748,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 2744,
																								"name": "userTargetRequests",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2696,
																								"src": "15169:18:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 2746,
																							"indexExpression": {
																								"id": 2745,
																								"name": "count",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2706,
																								"src": "15188:5:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "15169:25:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 2747,
																							"name": "requestId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2726,
																							"src": "15197:9:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "15169:37:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2749,
																					"nodeType": "ExpressionStatement",
																					"src": "15169:37:11"
																				},
																				{
																					"expression": {
																						"id": 2751,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "15229:7:11",
																						"subExpression": {
																							"id": 2750,
																							"name": "count",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2706,
																							"src": "15229:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2752,
																					"nodeType": "ExpressionStatement",
																					"src": "15229:7:11"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2714,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2710,
															"src": "14924:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14928:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14924:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2717,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2706,
															"src": "14933:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 2718,
																"name": "userTargetRequests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2696,
																"src": "14941:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14960:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "14941:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14933:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14924:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2760,
												"initializationExpression": {
													"assignments": [
														2710
													],
													"declarations": [
														{
															"constant": false,
															"id": 2710,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14891:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2760,
															"src": "14883:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2709,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14883:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2713,
													"initialValue": {
														"expression": {
															"id": 2711,
															"name": "activeTargetRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "14895:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14916:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14895:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14883:39:11"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "14968:3:11",
														"subExpression": {
															"id": 2722,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2710,
															"src": "14968:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2724,
													"nodeType": "ExpressionStatement",
													"src": "14968:3:11"
												},
												"nodeType": "ForStatement",
												"src": "14878:458:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2761,
															"name": "userTargetRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2696,
															"src": "15356:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2762,
															"name": "totalRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2615,
															"src": "15376:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2763,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15355:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
														"typeString": "tuple(uint256[] memory,uint256)"
													}
												},
												"functionReturnParameters": 2593,
												"id": 2764,
												"nodeType": "Return",
												"src": "15348:42:11"
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "13287:610:11",
										"text": " @dev Get all target chain request IDs for a specific user\n @param _user User address\n @param _page Page number (starting from 1)\n @param _pageSize Number of items per page\n @return uint256[] Array containing target chain request IDs for the user's specified page\n @return uint256 Total number of target chain requests for the user\n \n @notice Any address can call this function\n @notice If the user has no target chain requests, an empty array will be returned\n @notice If _page or _pageSize is 0, all requests will be returned"
									},
									"functionSelector": "bb93ede0",
									"id": 2766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTargetRequests",
									"nameLocation": "13912:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "13942:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "13934:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13934:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "_page",
												"nameLocation": "13957:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "13949:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13949:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "_pageSize",
												"nameLocation": "13972:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "13964:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13964:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13933:49:11"
									},
									"returnParameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "14004:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2588,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14004:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2589,
													"nodeType": "ArrayTypeName",
													"src": "14004:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "14022:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14022:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14003:27:11"
									},
									"scope": 2950,
									"src": "13903:1495:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2832,
										"nodeType": "Block",
										"src": "15765:636:11",
										"statements": [
											{
												"assignments": [
													2780
												],
												"declarations": [
													{
														"constant": false,
														"id": 2780,
														"mutability": "mutable",
														"name": "newRequest",
														"nameLocation": "15800:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2832,
														"src": "15781:29:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RequestData_$1769_memory_ptr",
															"typeString": "struct RequestData"
														},
														"typeName": {
															"id": 2779,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2778,
																"name": "RequestData",
																"nameLocations": [
																	"15781:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1769,
																"src": "15781:11:11"
															},
															"referencedDeclaration": 1769,
															"src": "15781:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RequestData_$1769_storage_ptr",
																"typeString": "struct RequestData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2787,
												"initialValue": {
													"arguments": [
														{
															"id": 2782,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2769,
															"src": "15851:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2783,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2771,
															"src": "15882:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2784,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "15910:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2785,
															"name": "_isburn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2775,
															"src": "15940:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2781,
														"name": "RequestData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "15813:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_RequestData_$1769_storage_ptr_$",
															"typeString": "type(struct RequestData storage pointer)"
														}
													},
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"15840:9:11",
														"15876:4:11",
														"15902:6:11",
														"15932:6:11"
													],
													"names": [
														"requestId",
														"user",
														"amount",
														"isburn"
													],
													"nodeType": "FunctionCall",
													"src": "15813:146:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RequestData_$1769_memory_ptr",
														"typeString": "struct RequestData memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15781:178:11"
											},
											{
												"expression": {
													"id": 2792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2788,
															"name": "requests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "15980:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1769_storage_$",
																"typeString": "mapping(uint256 => struct RequestData storage ref)"
															}
														},
														"id": 2790,
														"indexExpression": {
															"id": 2789,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2769,
															"src": "15989:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15980:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RequestData_$1769_storage",
															"typeString": "struct RequestData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2791,
														"name": "newRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2780,
														"src": "16003:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RequestData_$1769_memory_ptr",
															"typeString": "struct RequestData memory"
														}
													},
													"src": "15980:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RequestData_$1769_storage",
														"typeString": "struct RequestData storage ref"
													}
												},
												"id": 2793,
												"nodeType": "ExpressionStatement",
												"src": "15980:33:11"
											},
											{
												"condition": {
													"id": 2794,
													"name": "_isburn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2775,
													"src": "16027:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2808,
													"nodeType": "Block",
													"src": "16103:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2805,
																		"name": "_requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2769,
																		"src": "16144:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2802,
																		"name": "activeTargetRequests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "16118:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16139:4:11",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "16118:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 2806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16118:37:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2807,
															"nodeType": "ExpressionStatement",
															"src": "16118:37:11"
														}
													]
												},
												"id": 2809,
												"nodeType": "IfStatement",
												"src": "16024:143:11",
												"trueBody": {
													"id": 2801,
													"nodeType": "Block",
													"src": "16035:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2798,
																		"name": "_requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2769,
																		"src": "16076:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2795,
																		"name": "activeSourceRequests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1814,
																		"src": "16050:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16071:4:11",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "16050:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16050:37:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2800,
															"nodeType": "ExpressionStatement",
															"src": "16050:37:11"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2810,
													"name": "_isburn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2775,
													"src": "16180:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2830,
													"nodeType": "Block",
													"src": "16293:101:11",
													"statements": [
														{
															"expression": {
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2821,
																		"name": "requestIdToTargetActiveIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "16308:28:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2823,
																	"indexExpression": {
																		"id": 2822,
																		"name": "_requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2769,
																		"src": "16337:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16308:40:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2824,
																			"name": "activeTargetRequests",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "16351:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 2825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16372:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "16351:27:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16381:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "16351:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16308:74:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2829,
															"nodeType": "ExpressionStatement",
															"src": "16308:74:11"
														}
													]
												},
												"id": 2831,
												"nodeType": "IfStatement",
												"src": "16177:217:11",
												"trueBody": {
													"id": 2820,
													"nodeType": "Block",
													"src": "16188:101:11",
													"statements": [
														{
															"expression": {
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2811,
																		"name": "requestIdToSourceActiveIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "16203:28:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2813,
																	"indexExpression": {
																		"id": 2812,
																		"name": "_requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2769,
																		"src": "16232:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16203:40:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2814,
																			"name": "activeSourceRequests",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1814,
																			"src": "16246:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 2815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16267:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "16246:27:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16276:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "16246:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16203:74:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2819,
															"nodeType": "ExpressionStatement",
															"src": "16203:74:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2767,
										"nodeType": "StructuredDocumentation",
										"src": "15437:223:11",
										"text": " @dev Create a new request record\n @param _requestId Request ID\n @param _user User address\n @param _amount Request amount\n @param _isburn Whether it is a destruction operation"
									},
									"id": 2833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createRequest",
									"nameLocation": "15675:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "15698:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "15690:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15690:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "15718:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "15710:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15710:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "15733:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "15725:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15725:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "_isburn",
												"nameLocation": "15747:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "15742:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2774,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15742:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15689:66:11"
									},
									"returnParameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15765:0:11"
									},
									"scope": 2950,
									"src": "15666:735:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2883,
										"nodeType": "Block",
										"src": "16568:312:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2844,
														"name": "sourceDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2837,
														"src": "16583:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2845,
														"name": "targetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "16601:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16583:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2852,
															"name": "sourceDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "16668:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2853,
															"name": "targetDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2839,
															"src": "16685:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16668:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2880,
														"nodeType": "Block",
														"src": "16790:83:11",
														"statements": [
															{
																"expression": {
																	"id": 2878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2868,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "16805:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2869,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "16814:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2875,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2870,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "16823:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 2873,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2871,
																									"name": "sourceDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2837,
																									"src": "16828:14:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 2872,
																									"name": "targetDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2839,
																									"src": "16845:14:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "16828:31:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 2874,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "16827:33:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "16823:37:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2876,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "16822:39:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16814:47:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16805:56:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2879,
																"nodeType": "ExpressionStatement",
																"src": "16805:56:11"
															}
														]
													},
													"id": 2881,
													"nodeType": "IfStatement",
													"src": "16664:209:11",
													"trueBody": {
														"id": 2867,
														"nodeType": "Block",
														"src": "16701:83:11",
														"statements": [
															{
																"expression": {
																	"id": 2865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2855,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "16716:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2856,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "16725:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2862,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2857,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "16734:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 2860,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2858,
																									"name": "targetDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2839,
																									"src": "16739:14:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 2859,
																									"name": "sourceDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2837,
																									"src": "16756:14:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "16739:31:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 2861,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "16738:33:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "16734:37:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2863,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "16733:39:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16725:47:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16716:56:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2866,
																"nodeType": "ExpressionStatement",
																"src": "16716:56:11"
															}
														]
													}
												},
												"id": 2882,
												"nodeType": "IfStatement",
												"src": "16579:294:11",
												"trueBody": {
													"id": 2851,
													"nodeType": "Block",
													"src": "16617:41:11",
													"statements": [
														{
															"expression": {
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2847,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2842,
																	"src": "16632:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2848,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2835,
																	"src": "16641:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16632:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2850,
															"nodeType": "ExpressionStatement",
															"src": "16632:14:11"
														}
													]
												}
											}
										]
									},
									"id": 2884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertDecimals",
									"nameLocation": "16420:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16454:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "16446:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16446:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "sourceDecimals",
												"nameLocation": "16476:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "16470:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2836,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16470:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "targetDecimals",
												"nameLocation": "16507:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "16501:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2838,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16501:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16435:93:11"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16560:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "16552:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16552:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16551:16:11"
									},
									"scope": 2950,
									"src": "16411:469:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2948,
										"nodeType": "Block",
										"src": "17049:427:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2895,
														"name": "sourceDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2888,
														"src": "17064:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2896,
														"name": "targetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2890,
														"src": "17082:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "17064:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2903,
															"name": "sourceDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "17149:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2904,
															"name": "targetDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2890,
															"src": "17166:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "17149:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2945,
														"nodeType": "Block",
														"src": "17271:198:11",
														"statements": [
															{
																"assignments": [
																	2920
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2920,
																		"mutability": "mutable",
																		"name": "temp",
																		"nameLocation": "17294:4:11",
																		"nodeType": "VariableDeclaration",
																		"scope": 2945,
																		"src": "17286:12:11",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2919,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "17286:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2927,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17301:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 2924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2922,
																					"name": "sourceDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2888,
																					"src": "17306:14:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2923,
																					"name": "targetDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2890,
																					"src": "17323:14:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "17306:31:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 2925,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "17305:33:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "17301:37:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "17286:52:11"
															},
															{
																"expression": {
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2928,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2893,
																		"src": "17353:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2929,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "17362:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2930,
																			"name": "temp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2920,
																			"src": "17370:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17362:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17353:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2933,
																"nodeType": "ExpressionStatement",
																"src": "17353:21:11"
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2934,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "17393:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 2935,
																			"name": "temp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2920,
																			"src": "17401:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17393:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17409:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "17393:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2944,
																"nodeType": "IfStatement",
																"src": "17389:69:11",
																"trueBody": {
																	"id": 2943,
																	"nodeType": "Block",
																	"src": "17412:46:11",
																	"statements": [
																		{
																			"expression": {
																				"id": 2941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2939,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2893,
																					"src": "17431:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"hexValue": "31",
																					"id": 2940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17441:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "17431:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2942,
																			"nodeType": "ExpressionStatement",
																			"src": "17431:11:11"
																		}
																	]
																}
															}
														]
													},
													"id": 2946,
													"nodeType": "IfStatement",
													"src": "17145:324:11",
													"trueBody": {
														"id": 2918,
														"nodeType": "Block",
														"src": "17182:83:11",
														"statements": [
															{
																"expression": {
																	"id": 2916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2906,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2893,
																		"src": "17197:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2907,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "17206:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2913,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2908,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17215:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 2911,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2909,
																									"name": "targetDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2890,
																									"src": "17220:14:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 2910,
																									"name": "sourceDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2888,
																									"src": "17237:14:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "17220:31:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 2912,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "17219:33:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "17215:37:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2914,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "17214:39:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17206:47:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17197:56:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2917,
																"nodeType": "ExpressionStatement",
																"src": "17197:56:11"
															}
														]
													}
												},
												"id": 2947,
												"nodeType": "IfStatement",
												"src": "17060:409:11",
												"trueBody": {
													"id": 2902,
													"nodeType": "Block",
													"src": "17098:41:11",
													"statements": [
														{
															"expression": {
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2898,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2893,
																	"src": "17113:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2899,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2886,
																	"src": "17122:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17113:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2901,
															"nodeType": "ExpressionStatement",
															"src": "17113:14:11"
														}
													]
												}
											}
										]
									},
									"id": 2949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertDecimalsCeil",
									"nameLocation": "16897:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16935:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "16927:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16927:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "sourceDecimals",
												"nameLocation": "16957:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "16951:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2887,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16951:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "targetDecimals",
												"nameLocation": "16988:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "16982:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2889,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16982:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16916:93:11"
									},
									"returnParameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17041:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "17033:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17033:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17032:16:11"
									},
									"scope": 2950,
									"src": "16888:588:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2951,
							"src": "534:16945:11",
							"usedErrors": [
								305,
								308,
								534,
								537
							],
							"usedEvents": [
								317,
								326,
								335,
								526,
								531,
								1842,
								1846,
								1856,
								1866,
								1880,
								1894
							]
						}
					],
					"src": "33:17446:11"
				},
				"id": 11
			}
		}
	}
}